### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel
  commentId: T:Microsoft.FSharp.Collections.ArrayModule.Parallel
  id: ArrayModule.Parallel
  children:
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])
  - Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])
  langs:
  - csharp
  name: ArrayModule.Parallel
  nameWithType: ArrayModule.Parallel
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      public static class ArrayModule.Parallel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])
  id: Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
  nameWithType: ArrayModule.Parallel.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("choose")]

      public static TResult[] Choose<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpOption<TResult>> chooser, T[] array);
    parameters:
    - id: chooser
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpOption{TResult}}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
    return:
      type: TResult[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])
  id: Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
  nameWithType: ArrayModule.Parallel.Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("collect")]

      public static TResult[] Collect<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,TResult[]> mapping, T[] array);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc{T,TResult[]}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
    return:
      type: TResult[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})
  id: Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Initialize<T>(Int32, FSharpFunc<Int32,T>)
  nameWithType: ArrayModule.Parallel.Initialize<T>(Int32, FSharpFunc<Int32,T>)
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize<T>(Int32, FSharpFunc<Int32,T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("init")]

      public static T[] Initialize<T> (int count, Microsoft.FSharp.Core.FSharpFunc<int,T> initializer);
    parameters:
    - id: count
      type: System.Int32
      description: To be added.
    - id: initializer
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,T}
      description: To be added.
    return:
      type: T[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])
  id: Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Iterate<T>(FSharpFunc<T,Unit>, T[])
  nameWithType: ArrayModule.Parallel.Iterate<T>(FSharpFunc<T,Unit>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate<T>(FSharpFunc<T,Unit>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("iter")]

      public static void Iterate<T> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit> action, T[] array);
    parameters:
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])
  id: IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
  nameWithType: ArrayModule.Parallel.IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("iteri")]

      public static void IterateIndexed<T> (Microsoft.FSharp.Core.FSharpFunc<int,Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit>> action, T[] array);
    parameters:
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])
  id: Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Map<T,TResult>(FSharpFunc<T,TResult>, T[])
  nameWithType: ArrayModule.Parallel.Map<T,TResult>(FSharpFunc<T,TResult>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map<T,TResult>(FSharpFunc<T,TResult>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("map")]

      public static TResult[] Map<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,TResult> mapping, T[] array);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
    return:
      type: TResult[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])
  id: MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
  nameWithType: ArrayModule.Parallel.MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("mapi")]

      public static TResult[] MapIndexed<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<int,Microsoft.FSharp.Core.FSharpFunc<T,TResult>> mapping, T[] array);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{T,TResult}}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
    return:
      type: TResult[]
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])
  commentId: M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])
  id: Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  langs:
  - csharp
  name: Partition<T>(FSharpFunc<T,Boolean>, T[])
  nameWithType: ArrayModule.Parallel.Partition<T>(FSharpFunc<T,Boolean>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition<T>(FSharpFunc<T,Boolean>, T[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Collections
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("partition")]

      public static Tuple<T[],T[]> Partition<T> (Microsoft.FSharp.Core.FSharpFunc<T,bool> predicate, T[] array);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
      description: To be added.
    - id: array
      type: T[]
      description: To be added.
    return:
      type: System.Tuple{T[],T[]}
      description: To be added.
  overload: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
  nameWithType: ArrayModule.Parallel.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, T[])
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult[]
  isExternal: true
  name: TResult[]
  nameWithType: TResult[]
  fullName: TResult[]
  spec.csharp:
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.FSharpOption`1
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpOption{TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpOption<TResult>>
  nameWithType: FSharpFunc<T,FSharpOption<TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpOption<TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
  nameWithType: ArrayModule.Parallel.Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect<T,TResult>(FSharpFunc<T,TResult[]>, T[])
- uid: Microsoft.FSharp.Core.FSharpFunc{T,TResult[]}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,TResult[]>
  nameWithType: FSharpFunc<T,TResult[]>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult[]>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Initialize<T>(Int32, FSharpFunc<Int32,T>)
  nameWithType: ArrayModule.Parallel.Initialize<T>(Int32, FSharpFunc<Int32,T>)
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize<T>(Int32, FSharpFunc<Int32,T>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,T}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,T>
  nameWithType: FSharpFunc<Int32,T>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,T>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Iterate<T>(FSharpFunc<T,Unit>, T[])
  nameWithType: ArrayModule.Parallel.Iterate<T>(FSharpFunc<T,Unit>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate<T>(FSharpFunc<T,Unit>, T[])
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,Unit>
  nameWithType: FSharpFunc<T,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
  nameWithType: ArrayModule.Parallel.IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed<T>(FSharpFunc<Int32,FSharpFunc<T,Unit>>, T[])
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,FSharpFunc<T,Unit>>
  nameWithType: FSharpFunc<Int32,FSharpFunc<T,Unit>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Map<T,TResult>(FSharpFunc<T,TResult>, T[])
  nameWithType: ArrayModule.Parallel.Map<T,TResult>(FSharpFunc<T,TResult>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map<T,TResult>(FSharpFunc<T,TResult>, T[])
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
  nameWithType: ArrayModule.Parallel.MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed<T,TResult>(FSharpFunc<Int32,FSharpFunc<T,TResult>>, T[])
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{T,TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,FSharpFunc<T,TResult>>
  nameWithType: FSharpFunc<Int32,FSharpFunc<T,TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,Microsoft.FSharp.Core.FSharpFunc<T,TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Partition<T>(FSharpFunc<T,Boolean>, T[])
  nameWithType: ArrayModule.Parallel.Partition<T>(FSharpFunc<T,Boolean>, T[])
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition<T>(FSharpFunc<T,Boolean>, T[])
- uid: System.Tuple`2
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: System.Tuple{T[],T[]}
  parent: System
  isExternal: false
  name: Tuple<T[],T[]>
  nameWithType: Tuple<T[],T[]>
  fullName: System.Tuple<T[],T[]>
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,Boolean>
  nameWithType: FSharpFunc<T,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Choose<T,TResult>
  nameWithType: ArrayModule.Parallel.Choose<T,TResult>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Collect<T,TResult>
  nameWithType: ArrayModule.Parallel.Collect<T,TResult>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Initialize<T>
  nameWithType: ArrayModule.Parallel.Initialize<T>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Iterate<T>
  nameWithType: ArrayModule.Parallel.Iterate<T>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: IterateIndexed<T>
  nameWithType: ArrayModule.Parallel.IterateIndexed<T>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Map<T,TResult>
  nameWithType: ArrayModule.Parallel.Map<T,TResult>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Map<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: MapIndexed<T,TResult>
  nameWithType: ArrayModule.Parallel.MapIndexed<T,TResult>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
- uid: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1*
  parent: Microsoft.FSharp.Collections.ArrayModule.Parallel
  isExternal: false
  name: Partition<T>
  nameWithType: ArrayModule.Parallel.Partition<T>
  fullName: Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Collections/ArrayModule+Parallel.xml
