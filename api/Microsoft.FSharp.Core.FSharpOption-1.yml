### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.FSharpOption`1
  commentId: T:Microsoft.FSharp.Core.FSharpOption`1
  id: FSharpOption`1
  children:
  - Microsoft.FSharp.Core.FSharpOption`1.#ctor(`0)
  - Microsoft.FSharp.Core.FSharpOption`1.CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})
  - Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object)
  - Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object,System.Collections.IComparer)
  - Microsoft.FSharp.Core.FSharpOption`1.Equals(Microsoft.FSharp.Core.FSharpOption{`0})
  - Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object)
  - Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object,System.Collections.IEqualityComparer)
  - Microsoft.FSharp.Core.FSharpOption`1.GetHashCode
  - Microsoft.FSharp.Core.FSharpOption`1.GetHashCode(System.Collections.IEqualityComparer)
  - Microsoft.FSharp.Core.FSharpOption`1.GetTag(Microsoft.FSharp.Core.FSharpOption{`0})
  - Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})
  - Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})
  - Microsoft.FSharp.Core.FSharpOption`1.None
  - Microsoft.FSharp.Core.FSharpOption`1.Some(`0)
  - Microsoft.FSharp.Core.FSharpOption`1.ToString
  - Microsoft.FSharp.Core.FSharpOption`1.Value
  langs:
  - csharp
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.SumType)]

      [Microsoft.FSharp.Core.CompilationRepresentation(Microsoft.FSharp.Core.CompilationRepresentationFlags.UseNullAsTrueValue)]

      [Microsoft.FSharp.Core.CompiledName("FSharpOption`1")]

      [Microsoft.FSharp.Core.DefaultAugmentation(false)]

      [Microsoft.FSharp.Core.StructuralComparison]

      [Microsoft.FSharp.Core.StructuralEquality]

      public sealed class FSharpOption<T> : IComparable, IComparable<Microsoft.FSharp.Core.FSharpOption<T>>, IEquatable<Microsoft.FSharp.Core.FSharpOption<T>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.IStructuralComparable
  - System.Collections.IStructuralEquatable
  - System.IComparable
  - System.IComparable{Microsoft.FSharp.Core.FSharpOption{T}}
  - System.IEquatable{Microsoft.FSharp.Core.FSharpOption{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompilationRepresentationAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: Microsoft.FSharp.Core.DefaultAugmentationAttribute
  - type: Microsoft.FSharp.Core.StructuralComparisonAttribute
  - type: Microsoft.FSharp.Core.StructuralEqualityAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.#ctor(`0)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: FSharpOption<T>(T)
  nameWithType: FSharpOption<T>.FSharpOption<T>(T)
  fullName: FSharpOption<T>.FSharpOption<T>(T)
  type: Constructor
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public FSharpOption (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.#ctor*
  exceptions: []
  attributes: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})
  id: CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: CompareTo(FSharpOption<T>)
  nameWithType: FSharpOption<T>.CompareTo(FSharpOption<T>)
  fullName: FSharpOption<T>.CompareTo(FSharpOption<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed int CompareTo (Microsoft.FSharp.Core.FSharpOption<T> obj);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.CompareTo*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: FSharpOption<T>.CompareTo(Object)
  fullName: FSharpOption<T>.CompareTo(Object)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed int CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.CompareTo*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object,System.Collections.IComparer)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object,System.Collections.IComparer)
  id: CompareTo(System.Object,System.Collections.IComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: CompareTo(Object, IComparer)
  nameWithType: FSharpOption<T>.CompareTo(Object, IComparer)
  fullName: FSharpOption<T>.CompareTo(Object, IComparer)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed int CompareTo (object obj, System.Collections.IComparer comp);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: comp
      type: System.Collections.IComparer
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.CompareTo*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(Microsoft.FSharp.Core.FSharpOption{`0})
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.Equals(Microsoft.FSharp.Core.FSharpOption{`0})
  id: Equals(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: Equals(FSharpOption<T>)
  nameWithType: FSharpOption<T>.Equals(FSharpOption<T>)
  fullName: FSharpOption<T>.Equals(FSharpOption<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed bool Equals (Microsoft.FSharp.Core.FSharpOption<T> obj);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.Equals*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FSharpOption<T>.Equals(Object)
  fullName: FSharpOption<T>.Equals(Object)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.Equals*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object,System.Collections.IEqualityComparer)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object,System.Collections.IEqualityComparer)
  id: Equals(System.Object,System.Collections.IEqualityComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: Equals(Object, IEqualityComparer)
  nameWithType: FSharpOption<T>.Equals(Object, IEqualityComparer)
  fullName: FSharpOption<T>.Equals(Object, IEqualityComparer)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed bool Equals (object obj, System.Collections.IEqualityComparer comp);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    - id: comp
      type: System.Collections.IEqualityComparer
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.Equals*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.GetHashCode
  id: GetHashCode
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FSharpOption<T>.GetHashCode()
  fullName: FSharpOption<T>.GetHashCode()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode(System.Collections.IEqualityComparer)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.GetHashCode(System.Collections.IEqualityComparer)
  id: GetHashCode(System.Collections.IEqualityComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: GetHashCode(IEqualityComparer)
  nameWithType: FSharpOption<T>.GetHashCode(IEqualityComparer)
  fullName: FSharpOption<T>.GetHashCode(IEqualityComparer)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override sealed int GetHashCode (System.Collections.IEqualityComparer comp);
    parameters:
    - id: comp
      type: System.Collections.IEqualityComparer
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetTag(Microsoft.FSharp.Core.FSharpOption{`0})
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.GetTag(Microsoft.FSharp.Core.FSharpOption{`0})
  id: GetTag(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: GetTag(FSharpOption<T>)
  nameWithType: FSharpOption<T>.GetTag(FSharpOption<T>)
  fullName: FSharpOption<T>.GetTag(FSharpOption<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static int GetTag (Microsoft.FSharp.Core.FSharpOption<T> );
    parameters:
    - id: ''
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.GetTag*
  exceptions: []
  attributes: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})
  commentId: P:Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})
  id: IsNone(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: IsNone(FSharpOption<T>)
  nameWithType: FSharpOption<T>.IsNone(FSharpOption<T>)
  fullName: FSharpOption<T>.IsNone(FSharpOption<T>)
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool IsNone[Microsoft.FSharp.Core.FSharpOption<T> ] { get; }
    parameters:
    - id: ''
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.IsNone*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})
  commentId: P:Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})
  id: IsSome(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: IsSome(FSharpOption<T>)
  nameWithType: FSharpOption<T>.IsSome(FSharpOption<T>)
  fullName: FSharpOption<T>.IsSome(FSharpOption<T>)
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool IsSome[Microsoft.FSharp.Core.FSharpOption<T> ] { get; }
    parameters:
    - id: ''
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.IsSome*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.None
  commentId: P:Microsoft.FSharp.Core.FSharpOption`1.None
  id: None
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: None
  nameWithType: FSharpOption<T>.None
  fullName: FSharpOption<T>.None
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [get: Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.UnionCase, 0)]

      public static Microsoft.FSharp.Core.FSharpOption<T> None { get; }
    return:
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.None*
  exceptions: []
  attributes:
  - type: 'get: Microsoft.FSharp.Core.CompilationMapping'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Some(`0)
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.Some(`0)
  id: Some(`0)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: Some(T)
  nameWithType: FSharpOption<T>.Some(T)
  fullName: FSharpOption<T>.Some(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.UnionCase, 1)]

      public static Microsoft.FSharp.Core.FSharpOption<T> Some (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.Some*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.ToString
  commentId: M:Microsoft.FSharp.Core.FSharpOption`1.ToString
  id: ToString
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: ToString()
  nameWithType: FSharpOption<T>.ToString()
  fullName: FSharpOption<T>.ToString()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.ToString*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Value
  commentId: P:Microsoft.FSharp.Core.FSharpOption`1.Value
  id: Value
  parent: Microsoft.FSharp.Core.FSharpOption`1
  langs:
  - csharp
  name: Value
  nameWithType: FSharpOption<T>.Value
  fullName: FSharpOption<T>.Value
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Field, 1, 0)]

      [get: System.Diagnostics.DebuggerNonUserCode]

      public T Value { get; }
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpOption`1.Value*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: 'get: System.Diagnostics.DebuggerNonUserCode'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.FSharpOption`1.#ctor(`0)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: FSharpOption<T>(T)
  nameWithType: FSharpOption<T>.FSharpOption<T>(T)
  fullName: FSharpOption<T>.FSharpOption<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: CompareTo(FSharpOption<T>)
  nameWithType: FSharpOption<T>.CompareTo(FSharpOption<T>)
  fullName: FSharpOption<T>.CompareTo(FSharpOption<T>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Core.FSharpOption`1
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: CompareTo(Object)
  nameWithType: FSharpOption<T>.CompareTo(Object)
  fullName: FSharpOption<T>.CompareTo(Object)
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object,System.Collections.IComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: CompareTo(Object, IComparer)
  nameWithType: FSharpOption<T>.CompareTo(Object, IComparer)
  fullName: FSharpOption<T>.CompareTo(Object, IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Equals(FSharpOption<T>)
  nameWithType: FSharpOption<T>.Equals(FSharpOption<T>)
  fullName: FSharpOption<T>.Equals(FSharpOption<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Equals(Object)
  nameWithType: FSharpOption<T>.Equals(Object)
  fullName: FSharpOption<T>.Equals(Object)
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object,System.Collections.IEqualityComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Equals(Object, IEqualityComparer)
  nameWithType: FSharpOption<T>.Equals(Object, IEqualityComparer)
  fullName: FSharpOption<T>.Equals(Object, IEqualityComparer)
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: GetHashCode()
  nameWithType: FSharpOption<T>.GetHashCode()
  fullName: FSharpOption<T>.GetHashCode()
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode(System.Collections.IEqualityComparer)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: GetHashCode(IEqualityComparer)
  nameWithType: FSharpOption<T>.GetHashCode(IEqualityComparer)
  fullName: FSharpOption<T>.GetHashCode(IEqualityComparer)
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetTag(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: GetTag(FSharpOption<T>)
  nameWithType: FSharpOption<T>.GetTag(FSharpOption<T>)
  fullName: FSharpOption<T>.GetTag(FSharpOption<T>)
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: IsNone(FSharpOption<T>)
  nameWithType: FSharpOption<T>.IsNone(FSharpOption<T>)
  fullName: FSharpOption<T>.IsNone(FSharpOption<T>)
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: IsSome(FSharpOption<T>)
  nameWithType: FSharpOption<T>.IsSome(FSharpOption<T>)
  fullName: FSharpOption<T>.IsSome(FSharpOption<T>)
- uid: Microsoft.FSharp.Core.FSharpOption`1.None
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: None
  nameWithType: FSharpOption<T>.None
  fullName: FSharpOption<T>.None
- uid: Microsoft.FSharp.Core.FSharpOption`1.Some(`0)
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Some(T)
  nameWithType: FSharpOption<T>.Some(T)
  fullName: FSharpOption<T>.Some(T)
- uid: Microsoft.FSharp.Core.FSharpOption`1.ToString
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: ToString()
  nameWithType: FSharpOption<T>.ToString()
  fullName: FSharpOption<T>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.FSharpOption`1.Value
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Value
  nameWithType: FSharpOption<T>.Value
  fullName: FSharpOption<T>.Value
- uid: Microsoft.FSharp.Core.FSharpOption`1.#ctor*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>.FSharpOption<T>
  fullName: FSharpOption<T>.FSharpOption<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.CompareTo*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: CompareTo
  nameWithType: FSharpOption<T>.CompareTo
  fullName: FSharpOption<T>.CompareTo
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Equals*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Equals
  nameWithType: FSharpOption<T>.Equals
  fullName: FSharpOption<T>.Equals
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetHashCode*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: GetHashCode
  nameWithType: FSharpOption<T>.GetHashCode
  fullName: FSharpOption<T>.GetHashCode
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.GetTag*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: GetTag
  nameWithType: FSharpOption<T>.GetTag
  fullName: FSharpOption<T>.GetTag
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsNone*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: IsNone
  nameWithType: FSharpOption<T>.IsNone
  fullName: FSharpOption<T>.IsNone
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.IsSome*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: IsSome
  nameWithType: FSharpOption<T>.IsSome
  fullName: FSharpOption<T>.IsSome
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.None*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: None
  nameWithType: FSharpOption<T>.None
  fullName: FSharpOption<T>.None
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Some*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Some
  nameWithType: FSharpOption<T>.Some
  fullName: FSharpOption<T>.Some
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.ToString*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: ToString
  nameWithType: FSharpOption<T>.ToString
  fullName: FSharpOption<T>.ToString
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: Microsoft.FSharp.Core.FSharpOption`1.Value*
  parent: Microsoft.FSharp.Core.FSharpOption`1
  isExternal: false
  name: Value
  nameWithType: FSharpOption<T>.Value
  fullName: FSharpOption<T>.Value
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpOption`1.xml
- uid: System.Collections.IStructuralComparable
  parent: System.Collections
  isExternal: false
  name: IStructuralComparable
  nameWithType: IStructuralComparable
  fullName: System.Collections.IStructuralComparable
- uid: System.Collections.IStructuralEquatable
  parent: System.Collections
  isExternal: false
  name: IStructuralEquatable
  nameWithType: IStructuralEquatable
  fullName: System.Collections.IStructuralEquatable
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable`1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
- uid: System.IComparable{Microsoft.FSharp.Core.FSharpOption{T}}
  parent: System
  isExternal: false
  name: IComparable<FSharpOption<T>>
  nameWithType: IComparable<FSharpOption<T>>
  fullName: System.IComparable<Microsoft.FSharp.Core.FSharpOption<T>>
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{Microsoft.FSharp.Core.FSharpOption{T}}
  parent: System
  isExternal: false
  name: IEquatable<FSharpOption<T>>
  nameWithType: IEquatable<FSharpOption<T>>
  fullName: System.IEquatable<Microsoft.FSharp.Core.FSharpOption<T>>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
