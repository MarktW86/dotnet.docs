### YamlMime:ManagedReference
items:
- uid: DbLinq.Util.Locks
  commentId: T:DbLinq.Util.Locks
  id: Locks
  children:
  - DbLinq.Util.Locks.GetLockInstance
  - DbLinq.Util.Locks.GetLockInstance(System.Threading.LockRecursionPolicy)
  - DbLinq.Util.Locks.GetReadLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.GetReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.ReleaseLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.ReleaseReadLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.ReleaseReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.Locks.ReleaseWriteLock(System.Threading.ReaderWriterLockSlim)
  langs:
  - csharp
  name: Locks
  nameWithType: Locks
  fullName: DbLinq.Util.Locks
  type: Class
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static class Locks
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetLockInstance
  commentId: M:DbLinq.Util.Locks.GetLockInstance
  id: GetLockInstance
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: GetLockInstance()
  nameWithType: Locks.GetLockInstance()
  fullName: Locks.GetLockInstance()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static System.Threading.ReaderWriterLockSlim GetLockInstance ();
    parameters: []
    return:
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.GetLockInstance*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetLockInstance(System.Threading.LockRecursionPolicy)
  commentId: M:DbLinq.Util.Locks.GetLockInstance(System.Threading.LockRecursionPolicy)
  id: GetLockInstance(System.Threading.LockRecursionPolicy)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: GetLockInstance(LockRecursionPolicy)
  nameWithType: Locks.GetLockInstance(LockRecursionPolicy)
  fullName: Locks.GetLockInstance(LockRecursionPolicy)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static System.Threading.ReaderWriterLockSlim GetLockInstance (System.Threading.LockRecursionPolicy recursionPolicy);
    parameters:
    - id: recursionPolicy
      type: System.Threading.LockRecursionPolicy
      description: To be added.
    return:
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.GetLockInstance*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetReadLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.GetReadLock(System.Threading.ReaderWriterLockSlim)
  id: GetReadLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: GetReadLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetReadLock(ReaderWriterLockSlim)
  fullName: Locks.GetReadLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void GetReadLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.GetReadLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.GetReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  id: GetReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: GetReadOnlyLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetReadOnlyLock(ReaderWriterLockSlim)
  fullName: Locks.GetReadOnlyLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void GetReadOnlyLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.GetReadOnlyLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  id: GetWriteLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: GetWriteLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetWriteLock(ReaderWriterLockSlim)
  fullName: Locks.GetWriteLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void GetWriteLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.GetWriteLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.ReleaseLock(System.Threading.ReaderWriterLockSlim)
  id: ReleaseLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: ReleaseLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void ReleaseLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.ReleaseLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseReadLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.ReleaseReadLock(System.Threading.ReaderWriterLockSlim)
  id: ReleaseReadLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: ReleaseReadLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseReadLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseReadLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void ReleaseReadLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.ReleaseReadLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.ReleaseReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  id: ReleaseReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: ReleaseReadOnlyLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseReadOnlyLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseReadOnlyLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void ReleaseReadOnlyLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.ReleaseReadOnlyLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseWriteLock(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.Locks.ReleaseWriteLock(System.Threading.ReaderWriterLockSlim)
  id: ReleaseWriteLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  langs:
  - csharp
  name: ReleaseWriteLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseWriteLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseWriteLock(ReaderWriterLockSlim)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public static void ReleaseWriteLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.Locks.ReleaseWriteLock*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DbLinq.Util.Locks.GetLockInstance
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetLockInstance()
  nameWithType: Locks.GetLockInstance()
  fullName: Locks.GetLockInstance()
- uid: System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: false
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: DbLinq.Util.Locks.GetLockInstance(System.Threading.LockRecursionPolicy)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetLockInstance(LockRecursionPolicy)
  nameWithType: Locks.GetLockInstance(LockRecursionPolicy)
  fullName: Locks.GetLockInstance(LockRecursionPolicy)
- uid: System.Threading.LockRecursionPolicy
  parent: System.Threading
  isExternal: false
  name: LockRecursionPolicy
  nameWithType: LockRecursionPolicy
  fullName: System.Threading.LockRecursionPolicy
- uid: DbLinq.Util.Locks.GetReadLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetReadLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetReadLock(ReaderWriterLockSlim)
  fullName: Locks.GetReadLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.GetReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetReadOnlyLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetReadOnlyLock(ReaderWriterLockSlim)
  fullName: Locks.GetReadOnlyLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.GetWriteLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetWriteLock(ReaderWriterLockSlim)
  nameWithType: Locks.GetWriteLock(ReaderWriterLockSlim)
  fullName: Locks.GetWriteLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.ReleaseLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.ReleaseReadLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseReadLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseReadLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseReadLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.ReleaseReadOnlyLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseReadOnlyLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseReadOnlyLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseReadOnlyLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.ReleaseWriteLock(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseWriteLock(ReaderWriterLockSlim)
  nameWithType: Locks.ReleaseWriteLock(ReaderWriterLockSlim)
  fullName: Locks.ReleaseWriteLock(ReaderWriterLockSlim)
- uid: DbLinq.Util.Locks.GetLockInstance*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetLockInstance
  nameWithType: Locks.GetLockInstance
  fullName: Locks.GetLockInstance
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetReadLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetReadLock
  nameWithType: Locks.GetReadLock
  fullName: Locks.GetReadLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetReadOnlyLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetReadOnlyLock
  nameWithType: Locks.GetReadOnlyLock
  fullName: Locks.GetReadOnlyLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.GetWriteLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: GetWriteLock
  nameWithType: Locks.GetWriteLock
  fullName: Locks.GetWriteLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseLock
  nameWithType: Locks.ReleaseLock
  fullName: Locks.ReleaseLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseReadLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseReadLock
  nameWithType: Locks.ReleaseReadLock
  fullName: Locks.ReleaseReadLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseReadOnlyLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseReadOnlyLock
  nameWithType: Locks.ReleaseReadOnlyLock
  fullName: Locks.ReleaseReadOnlyLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
- uid: DbLinq.Util.Locks.ReleaseWriteLock*
  parent: DbLinq.Util.Locks
  isExternal: false
  name: ReleaseWriteLock
  nameWithType: Locks.ReleaseWriteLock
  fullName: Locks.ReleaseWriteLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/Locks.xml
