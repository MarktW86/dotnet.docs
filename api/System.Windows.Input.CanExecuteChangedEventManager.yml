### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CanExecuteChangedEventManager
  commentId: T:System.Windows.Input.CanExecuteChangedEventManager
  id: CanExecuteChangedEventManager
  children:
  - System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  - System.Windows.Input.CanExecuteChangedEventManager.NewListenerList
  - System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  - System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  - System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: CanExecuteChangedEventManager
  nameWithType: CanExecuteChangedEventManager
  fullName: System.Windows.Input.CanExecuteChangedEventManager
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Provides a <xref href="System.Windows.WeakEventManager"></xref> implementation so that you can use the "weak event listener" pattern to attach listeners for the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event.
  remarks: For information about how to use this class, see “Using an Existing Weak Event Manager Class“ in[Weak Event Patterns](~/docs/framework/wpf/advanced/weak-event-patterns.md).
  syntax:
    content: 'public class CanExecuteChangedEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  id: AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: AddHandler(ICommand, EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Adds the specified delegate as an event handler of the specified source.
  syntax:
    content: public static void AddHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.Input.ICommand
      description: The source object that the raises the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event.
    - id: handler
      type: System.EventHandler{System.EventArgs}
      description: The delegate that handles the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event.
  overload: System.Windows.Input.CanExecuteChangedEventManager.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code> is `null`.  \n  \n --or--  \n  \n <code>handler</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.NewListenerList
  id: NewListenerList
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: CanExecuteChangedEventManager.NewListenerList()
  fullName: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager+ListenerList
      description: To be added.
  overload: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList*
  exceptions: []
  version:
  - netframework-4.5
  monikers:
  - netframework-4.5
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  id: Purge(System.Object,System.Object,System.Boolean)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: Purge(Object, Object, Boolean)
  nameWithType: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object, Object, Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Removes inactive listener entries from the data list for the provided source.
  syntax:
    content: protected override bool Purge (object source, object data, bool purgeAll);
    parameters:
    - id: source
      type: System.Object
      description: The source for events being listened to.
    - id: data
      type: System.Object
      description: The data to check. This object is expected to be a <xref href="System.Windows.WeakEventManager.ListenerList"></xref> implementation.
    - id: purgeAll
      type: System.Boolean
      description: '`true` to stop listening to <code>source</code>, and completely remove all entries from <code>data</code>.'
    return:
      type: System.Boolean
      description: '`true` if some entries were actually removed; otherwise, `false`.'
  overload: System.Windows.Input.CanExecuteChangedEventManager.Purge*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  id: RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: RemoveHandler(ICommand, EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Removes the specified event handler from the specified source.
  syntax:
    content: public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.Input.ICommand
      description: The source object that the raises the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event.
    - id: handler
      type: System.EventHandler{System.EventArgs}
      description: The delegate that handles the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event.
  overload: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code> is `null`.  \n  \n --or--  \n  \n <code>handler</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: CanExecuteChangedEventManager.StartListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Begins listening for the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event on the specified source.
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The object with the event.
  overload: System.Windows.Input.CanExecuteChangedEventManager.StartListening*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  commentId: M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: CanExecuteChangedEventManager.StopListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Stops listening for the <xref href="System.Windows.Input.ICommand.CanExecuteChanged"></xref> event on the specified source.
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The source object to stop listening for.
  overload: System.Windows.Input.CanExecuteChangedEventManager.StopListening*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
  ms.author: kempb
  manager: ghogen
references:
- uid: System.Windows.WeakEventManager
  parent: System.Windows
  isExternal: false
  name: WeakEventManager
  nameWithType: WeakEventManager
  fullName: System.Windows.WeakEventManager
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: AddHandler(ICommand, EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand, EventHandler<EventArgs>)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: false
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.EventArgs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventHandler{System.EventArgs}
  parent: System
  isExternal: false
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: CanExecuteChangedEventManager.NewListenerList()
  fullName: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList()
- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: Purge(Object, Object, Boolean)
  nameWithType: CanExecuteChangedEventManager.Purge(Object, Object, Boolean)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object, Object, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: RemoveHandler(ICommand, EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand, EventHandler<EventArgs>)
- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: CanExecuteChangedEventManager.StartListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)
- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: CanExecuteChangedEventManager.StopListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)
- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: AddHandler
  nameWithType: CanExecuteChangedEventManager.AddHandler
  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: CanExecuteChangedEventManager.NewListenerList
  fullName: System.Windows.Input.CanExecuteChangedEventManager.NewListenerList
  monikers:
  - netframework-4.5
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: Purge
  nameWithType: CanExecuteChangedEventManager.Purge
  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: CanExecuteChangedEventManager.RemoveHandler
  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StartListening
  nameWithType: CanExecuteChangedEventManager.StartListening
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening*
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StopListening
  nameWithType: CanExecuteChangedEventManager.StopListening
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/CanExecuteChangedEventManager.xml
