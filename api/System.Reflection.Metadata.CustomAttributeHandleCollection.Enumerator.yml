### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  commentId: T:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  id: CustomAttributeHandleCollection.Enumerator
  children:
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  langs:
  - csharp
  name: CustomAttributeHandleCollection.Enumerator
  nameWithType: CustomAttributeHandleCollection.Enumerator
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  type: Struct
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public struct CustomAttributeHandleCollection.Enumerator : System.Collections.Generic.IEnumerator<System.Reflection.Metadata.CustomAttributeHandle>'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.Generic.IEnumerator<System.Reflection.Metadata.CustomAttributeHandle>
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  commentId: P:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  id: Current
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  langs:
  - csharp
  name: Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public System.Reflection.Metadata.CustomAttributeHandle Current { get; }
    return:
      type: System.Reflection.Metadata.CustomAttributeHandle
      description: To be added.
  overload: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  commentId: M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  id: MoveNext
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: CustomAttributeHandleCollection.Enumerator.MoveNext()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  langs:
  - csharp
  name: IEnumerator.Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.IEnumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IEnumerator.Current
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  commentId: M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  langs:
  - csharp
  name: IEnumerator.Reset()
  nameWithType: CustomAttributeHandleCollection.Enumerator.IEnumerator.Reset()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IEnumerator.Reset()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: void IEnumerator.Reset ();
    parameters: []
  overload: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  commentId: M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: CustomAttributeHandleCollection.Enumerator.IDisposable.Dispose()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
- uid: System.Reflection.Metadata.CustomAttributeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: CustomAttributeHandle
  nameWithType: CustomAttributeHandle
  fullName: System.Reflection.Metadata.CustomAttributeHandle
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: MoveNext()
  nameWithType: CustomAttributeHandleCollection.Enumerator.MoveNext()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: IEnumerator.Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.IEnumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: IEnumerator.Reset()
  nameWithType: CustomAttributeHandleCollection.Enumerator.IEnumerator.Reset()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IEnumerator.Reset()
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: CustomAttributeHandleCollection.Enumerator.IDisposable.Dispose()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.IDisposable.Dispose()
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current*
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext*
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: MoveNext
  nameWithType: CustomAttributeHandleCollection.Enumerator.MoveNext
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current*
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset*
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: System.Collections.IEnumerator.Reset
  nameWithType: CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Reset
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose*
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: CustomAttributeHandleCollection.Enumerator.System.IDisposable.Dispose
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.IDisposable.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/CustomAttributeHandleCollection+Enumerator.xml
