### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.CubicEase
  commentId: T:System.Windows.Media.Animation.CubicEase
  id: CubicEase
  children:
  - System.Windows.Media.Animation.CubicEase.#ctor
  - System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  - System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: CubicEase
  nameWithType: CubicEase
  fullName: System.Windows.Media.Animation.CubicEase
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>3</sup>.
  remarks: "You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \n  \n ![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png \"CubicEase EasingMode graphs.\")  \n  \n The formula used for this function is the following.  \n  \n *f*(*t*) = *t*<sup>3</sup>  \n  \n There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample.  \n  \n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \n  \n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \n  \n<a name=\"xamlObjectElementUsage_CubicEase\"></a>   \n## XAML Object Element Usage  \n  \n```  \n<CubicEase .../>  \n```"
  example:
  - "The following example applies a <xref:System.Windows.Media.Animation.CubicEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[CubicEase#CubicEase](~/samples/snippets/csharp/VS_Snippets_Wpf/cubicease/CS/window1.xaml#cubicease)]"
  syntax:
    content: 'public class CubicEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
- uid: System.Windows.Media.Animation.CubicEase.#ctor
  commentId: M:System.Windows.Media.Animation.CubicEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: CubicEase()
  nameWithType: CubicEase.CubicEase()
  fullName: CubicEase.CubicEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: Initializes a new instance of the <xref href="System.Windows.Media.Animation.CubicEase"></xref> class.
  syntax:
    content: public CubicEase ();
    parameters: []
  overload: System.Windows.Media.Animation.CubicEase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  commentId: M:System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: CubicEase.CreateInstanceCore()
  fullName: CubicEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: Creates a new instance of the <xref href="System.Windows.Freezable"></xref> derived class. When creating a derived class, you must override this method.
  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: The new instance.
  overload: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  commentId: M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: CubicEase.EaseInCore(Double)
  fullName: CubicEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: Provides the logic portion of the easing function that you can override to produce the <xref href="System.Windows.Media.Animation.EasingMode.EaseIn"></xref> mode of the custom easing function.
  remarks: "This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \n  \n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases."
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: Normalized time (progress) of the animation.
    return:
      type: System.Double
      description: A double that represents the transformed progress.
  overload: System.Windows.Media.Animation.CubicEase.EaseInCore*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  parent: System.Windows.Media.Animation
  isExternal: false
  name: EasingFunctionBase
  nameWithType: EasingFunctionBase
  fullName: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.CubicEase.#ctor
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CubicEase()
  nameWithType: CubicEase.CubicEase()
  fullName: CubicEase.CubicEase()
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: CubicEase.CreateInstanceCore()
  fullName: CubicEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: CubicEase.EaseInCore(Double)
  fullName: CubicEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.CubicEase.#ctor*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CubicEase
  nameWithType: CubicEase.CubicEase
  fullName: CubicEase.CubicEase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: CubicEase.CreateInstanceCore
  fullName: CubicEase.CreateInstanceCore
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: EaseInCore
  nameWithType: CubicEase.EaseInCore
  fullName: CubicEase.EaseInCore
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml
