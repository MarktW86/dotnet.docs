### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableHashSet
  commentId: T:System.Collections.Immutable.ImmutableHashSet
  id: ImmutableHashSet
  children:
  - System.Collections.Immutable.ImmutableHashSet.Create``1
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  - System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  - System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  - System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  langs:
  - csharp
  name: ImmutableHashSet
  nameWithType: ImmutableHashSet
  fullName: System.Collections.Immutable.ImmutableHashSet
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static class ImmutableHashSet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>()
  nameWithType: ImmutableHashSet.Create<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>(IEqualityComparer<T>)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> (System.Collections.Generic.IEqualityComparer<T> equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>(T)
  nameWithType: ImmutableHashSet.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>(T[])
  nameWithType: ImmutableHashSet.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> (T[] items);
    parameters:
    - id: items
      type: T[]
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>(IEqualityComparer<T>, T)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>, T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> (System.Collections.Generic.IEqualityComparer<T> equalityComparer, T item);
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  commentId: M:System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  id: Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: Create<T>(IEqualityComparer<T>, T[])
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>, T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>, T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> Create<T> (System.Collections.Generic.IEqualityComparer<T> equalityComparer, T[] items);
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    - id: items
      type: T[]
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: CreateBuilder<T>()
  nameWithType: ImmutableHashSet.CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T>.Builder CreateBuilder<T> ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableHashSet{T}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  id: CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: CreateBuilder<T>(IEqualityComparer<T>)
  nameWithType: ImmutableHashSet.CreateBuilder<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>(IEqualityComparer<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T>.Builder CreateBuilder<T> (System.Collections.Generic.IEqualityComparer<T> equalityComparer);
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{T}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> CreateRange<T> (System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.CreateRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<T> CreateRange<T> (System.Collections.Generic.IEqualityComparer<T> equalityComparer, System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.CreateRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<TSource> ToImmutableHashSet<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{TSource}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  langs:
  - csharp
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableHashSet<TSource> ToImmutableHashSet<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, System.Collections.Generic.IEqualityComparer<TSource> equalityComparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: To be added.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableHashSet{TSource}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>()
  nameWithType: ImmutableHashSet.Create<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>()
- uid: System.Collections.Immutable.ImmutableHashSet`1
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>(IEqualityComparer<T>)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>)
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>(T)
  nameWithType: ImmutableHashSet.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>(T[])
  nameWithType: ImmutableHashSet.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(T[])
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0)
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>(IEqualityComparer<T>, T)
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>, T)
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>, T)
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1(System.Collections.Generic.IEqualityComparer{``0},``0[])
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>(IEqualityComparer<T>, T[])
  nameWithType: ImmutableHashSet.Create<T>(IEqualityComparer<T>, T[])
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>(IEqualityComparer<T>, T[])
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateBuilder<T>()
  nameWithType: ImmutableHashSet.CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>()
- uid: System.Collections.Immutable.ImmutableHashSet{T}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableHashSet<T>
  nameWithType: ImmutableHashSet<T>
  fullName: System.Collections.Immutable.ImmutableHashSet<T>+Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1(System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateBuilder<T>(IEqualityComparer<T>)
  nameWithType: ImmutableHashSet.CreateBuilder<T>(IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>(IEqualityComparer<T>)
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  nameWithType: ImmutableHashSet.CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>(IEqualityComparer<T>, IEnumerable<T>)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Collections.Immutable.ImmutableHashSet{TSource}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableHashSet<TSource>
  nameWithType: ImmutableHashSet<TSource>
  fullName: System.Collections.Immutable.ImmutableHashSet<TSource>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableHashSet`1
    name: ImmutableHashSet
    nameWithType: ImmutableHashSet
    fullName: System.Collections.Immutable.ImmutableHashSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Collections.Generic.IEqualityComparer{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TSource>
  nameWithType: IEqualityComparer<TSource>
  fullName: System.Collections.Generic.IEqualityComparer<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableHashSet.Create``1*
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: Create<T>
  nameWithType: ImmutableHashSet.Create<T>
  fullName: System.Collections.Immutable.ImmutableHashSet.Create<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateBuilder``1*
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateBuilder<T>
  nameWithType: ImmutableHashSet.CreateBuilder<T>
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateBuilder<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.CreateRange``1*
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: CreateRange<T>
  nameWithType: ImmutableHashSet.CreateRange<T>
  fullName: System.Collections.Immutable.ImmutableHashSet.CreateRange<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1*
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableHashSet.xml
