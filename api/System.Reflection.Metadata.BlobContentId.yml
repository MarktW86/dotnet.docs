### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.BlobContentId
  commentId: T:System.Reflection.Metadata.BlobContentId
  id: BlobContentId
  children:
  - System.Reflection.Metadata.BlobContentId.#ctor(System.Byte[])
  - System.Reflection.Metadata.BlobContentId.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})
  - System.Reflection.Metadata.BlobContentId.#ctor(System.Guid,System.UInt32)
  - System.Reflection.Metadata.BlobContentId.Equals(System.Object)
  - System.Reflection.Metadata.BlobContentId.Equals(System.Reflection.Metadata.BlobContentId)
  - System.Reflection.Metadata.BlobContentId.FromHash(System.Byte[])
  - System.Reflection.Metadata.BlobContentId.FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})
  - System.Reflection.Metadata.BlobContentId.GetHashCode
  - System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider
  - System.Reflection.Metadata.BlobContentId.Guid
  - System.Reflection.Metadata.BlobContentId.IsDefault
  - System.Reflection.Metadata.BlobContentId.op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  - System.Reflection.Metadata.BlobContentId.op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  - System.Reflection.Metadata.BlobContentId.Stamp
  langs:
  - csharp
  name: BlobContentId
  nameWithType: BlobContentId
  fullName: System.Reflection.Metadata.BlobContentId
  type: Struct
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public struct BlobContentId : IEquatable<System.Reflection.Metadata.BlobContentId>'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable{System.Reflection.Metadata.BlobContentId}
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Byte[])
  commentId: M:System.Reflection.Metadata.BlobContentId.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: BlobContentId(Byte[])
  nameWithType: BlobContentId.BlobContentId(Byte[])
  fullName: BlobContentId.BlobContentId(Byte[])
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public BlobContentId (byte[] id);
    parameters:
    - id: id
      type: System.Byte[]
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})
  commentId: M:System.Reflection.Metadata.BlobContentId.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})
  id: '#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})'
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: BlobContentId(ImmutableArray<Byte>)
  nameWithType: BlobContentId.BlobContentId(ImmutableArray<Byte>)
  fullName: BlobContentId.BlobContentId(ImmutableArray<Byte>)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public BlobContentId (System.Collections.Immutable.ImmutableArray<byte> id);
    parameters:
    - id: id
      type: System.Collections.Immutable.ImmutableArray{System.Byte}
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Guid,System.UInt32)
  commentId: M:System.Reflection.Metadata.BlobContentId.#ctor(System.Guid,System.UInt32)
  id: '#ctor(System.Guid,System.UInt32)'
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: BlobContentId(Guid, UInt32)
  nameWithType: BlobContentId.BlobContentId(Guid, UInt32)
  fullName: BlobContentId.BlobContentId(Guid, UInt32)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public BlobContentId (Guid guid, uint stamp);
    parameters:
    - id: guid
      type: System.Guid
      description: To be added.
    - id: stamp
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Equals(System.Object)
  commentId: M:System.Reflection.Metadata.BlobContentId.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BlobContentId.Equals(Object)
  fullName: BlobContentId.Equals(Object)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.Equals*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Equals(System.Reflection.Metadata.BlobContentId)
  commentId: M:System.Reflection.Metadata.BlobContentId.Equals(System.Reflection.Metadata.BlobContentId)
  id: Equals(System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: Equals(BlobContentId)
  nameWithType: BlobContentId.Equals(BlobContentId)
  fullName: BlobContentId.Equals(BlobContentId)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals (System.Reflection.Metadata.BlobContentId other);
    parameters:
    - id: other
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.Equals*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.FromHash(System.Byte[])
  commentId: M:System.Reflection.Metadata.BlobContentId.FromHash(System.Byte[])
  id: FromHash(System.Byte[])
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: FromHash(Byte[])
  nameWithType: BlobContentId.FromHash(Byte[])
  fullName: BlobContentId.FromHash(Byte[])
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static System.Reflection.Metadata.BlobContentId FromHash (byte[] hashCode);
    parameters:
    - id: hashCode
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.FromHash*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})
  commentId: M:System.Reflection.Metadata.BlobContentId.FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})
  id: FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: FromHash(ImmutableArray<Byte>)
  nameWithType: BlobContentId.FromHash(ImmutableArray<Byte>)
  fullName: BlobContentId.FromHash(ImmutableArray<Byte>)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static System.Reflection.Metadata.BlobContentId FromHash (System.Collections.Immutable.ImmutableArray<byte> hashCode);
    parameters:
    - id: hashCode
      type: System.Collections.Immutable.ImmutableArray{System.Byte}
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.FromHash*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.GetHashCode
  commentId: M:System.Reflection.Metadata.BlobContentId.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BlobContentId.GetHashCode()
  fullName: BlobContentId.GetHashCode()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.GetHashCode*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider
  commentId: M:System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider
  id: GetTimeBasedProvider
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: GetTimeBasedProvider()
  nameWithType: BlobContentId.GetTimeBasedProvider()
  fullName: BlobContentId.GetTimeBasedProvider()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static Func<System.Collections.Generic.IEnumerable<System.Reflection.Metadata.Blob>,System.Reflection.Metadata.BlobContentId> GetTimeBasedProvider ();
    parameters: []
    return:
      type: System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Reflection.Metadata.BlobContentId}
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Guid
  commentId: P:System.Reflection.Metadata.BlobContentId.Guid
  id: Guid
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: Guid
  nameWithType: BlobContentId.Guid
  fullName: BlobContentId.Guid
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public Guid Guid { get; }
    return:
      type: System.Guid
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.Guid*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.IsDefault
  commentId: P:System.Reflection.Metadata.BlobContentId.IsDefault
  id: IsDefault
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: IsDefault
  nameWithType: BlobContentId.IsDefault
  fullName: BlobContentId.IsDefault
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool IsDefault { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.IsDefault*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  commentId: M:System.Reflection.Metadata.BlobContentId.op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  id: op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: op_Equality(BlobContentId, BlobContentId)
  nameWithType: BlobContentId.op_Equality(BlobContentId, BlobContentId)
  fullName: BlobContentId.op_Equality(BlobContentId, BlobContentId)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool op_Equality (System.Reflection.Metadata.BlobContentId left, System.Reflection.Metadata.BlobContentId right);
    parameters:
    - id: left
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
    - id: right
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.op_Equality*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  commentId: M:System.Reflection.Metadata.BlobContentId.op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  id: op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: op_Inequality(BlobContentId, BlobContentId)
  nameWithType: BlobContentId.op_Inequality(BlobContentId, BlobContentId)
  fullName: BlobContentId.op_Inequality(BlobContentId, BlobContentId)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool op_Inequality (System.Reflection.Metadata.BlobContentId left, System.Reflection.Metadata.BlobContentId right);
    parameters:
    - id: left
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
    - id: right
      type: System.Reflection.Metadata.BlobContentId
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.op_Inequality*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Stamp
  commentId: P:System.Reflection.Metadata.BlobContentId.Stamp
  id: Stamp
  parent: System.Reflection.Metadata.BlobContentId
  langs:
  - csharp
  name: Stamp
  nameWithType: BlobContentId.Stamp
  fullName: BlobContentId.Stamp
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public uint Stamp { get; }
    return:
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Metadata.BlobContentId.Stamp*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Byte[])
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: BlobContentId(Byte[])
  nameWithType: BlobContentId.BlobContentId(Byte[])
  fullName: BlobContentId.BlobContentId(Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: BlobContentId(ImmutableArray<Byte>)
  nameWithType: BlobContentId.BlobContentId(ImmutableArray<Byte>)
  fullName: BlobContentId.BlobContentId(ImmutableArray<Byte>)
- uid: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
- uid: System.Collections.Immutable.ImmutableArray{System.Byte}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<Byte>
  nameWithType: ImmutableArray<Byte>
  fullName: System.Collections.Immutable.ImmutableArray<System.Byte>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.BlobContentId.#ctor(System.Guid,System.UInt32)
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: BlobContentId(Guid, UInt32)
  nameWithType: BlobContentId.BlobContentId(Guid, UInt32)
  fullName: BlobContentId.BlobContentId(Guid, UInt32)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Metadata.BlobContentId.Equals(System.Object)
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Equals(Object)
  nameWithType: BlobContentId.Equals(Object)
  fullName: BlobContentId.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.BlobContentId.Equals(System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Equals(BlobContentId)
  nameWithType: BlobContentId.Equals(BlobContentId)
  fullName: BlobContentId.Equals(BlobContentId)
- uid: System.Reflection.Metadata.BlobContentId
  parent: System.Reflection.Metadata
  isExternal: false
  name: BlobContentId
  nameWithType: BlobContentId
  fullName: System.Reflection.Metadata.BlobContentId
- uid: System.Reflection.Metadata.BlobContentId.FromHash(System.Byte[])
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: FromHash(Byte[])
  nameWithType: BlobContentId.FromHash(Byte[])
  fullName: BlobContentId.FromHash(Byte[])
- uid: System.Reflection.Metadata.BlobContentId.FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: FromHash(ImmutableArray<Byte>)
  nameWithType: BlobContentId.FromHash(ImmutableArray<Byte>)
  fullName: BlobContentId.FromHash(ImmutableArray<Byte>)
- uid: System.Reflection.Metadata.BlobContentId.GetHashCode
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: GetHashCode()
  nameWithType: BlobContentId.GetHashCode()
  fullName: BlobContentId.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: GetTimeBasedProvider()
  nameWithType: BlobContentId.GetTimeBasedProvider()
  fullName: BlobContentId.GetTimeBasedProvider()
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Reflection.Metadata.Blob
  name: Blob
  nameWithType: Blob
  fullName: System.Reflection.Metadata.Blob
- uid: System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Reflection.Metadata.BlobContentId}
  parent: System
  isExternal: false
  name: Func<IEnumerable<Blob>,BlobContentId>
  nameWithType: Func<IEnumerable<Blob>,BlobContentId>
  fullName: System.Func<System.Collections.Generic.IEnumerable<System.Reflection.Metadata.Blob>,System.Reflection.Metadata.BlobContentId>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.Blob
    name: Blob
    nameWithType: Blob
    fullName: System.Reflection.Metadata.Blob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.Metadata.BlobContentId
    name: BlobContentId
    nameWithType: BlobContentId
    fullName: System.Reflection.Metadata.BlobContentId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.BlobContentId.Guid
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Guid
  nameWithType: BlobContentId.Guid
  fullName: BlobContentId.Guid
- uid: System.Reflection.Metadata.BlobContentId.IsDefault
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: IsDefault
  nameWithType: BlobContentId.IsDefault
  fullName: BlobContentId.IsDefault
- uid: System.Reflection.Metadata.BlobContentId.op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: op_Equality(BlobContentId, BlobContentId)
  nameWithType: BlobContentId.op_Equality(BlobContentId, BlobContentId)
  fullName: BlobContentId.op_Equality(BlobContentId, BlobContentId)
- uid: System.Reflection.Metadata.BlobContentId.op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: op_Inequality(BlobContentId, BlobContentId)
  nameWithType: BlobContentId.op_Inequality(BlobContentId, BlobContentId)
  fullName: BlobContentId.op_Inequality(BlobContentId, BlobContentId)
- uid: System.Reflection.Metadata.BlobContentId.Stamp
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Stamp
  nameWithType: BlobContentId.Stamp
  fullName: BlobContentId.Stamp
- uid: System.Reflection.Metadata.BlobContentId.#ctor*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: BlobContentId
  nameWithType: BlobContentId.BlobContentId
  fullName: BlobContentId.BlobContentId
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Equals*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Equals
  nameWithType: BlobContentId.Equals
  fullName: BlobContentId.Equals
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.FromHash*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: FromHash
  nameWithType: BlobContentId.FromHash
  fullName: BlobContentId.FromHash
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.GetHashCode*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: GetHashCode
  nameWithType: BlobContentId.GetHashCode
  fullName: BlobContentId.GetHashCode
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: GetTimeBasedProvider
  nameWithType: BlobContentId.GetTimeBasedProvider
  fullName: BlobContentId.GetTimeBasedProvider
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Guid*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Guid
  nameWithType: BlobContentId.Guid
  fullName: BlobContentId.Guid
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.IsDefault*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: IsDefault
  nameWithType: BlobContentId.IsDefault
  fullName: BlobContentId.IsDefault
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.op_Equality*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: op_Equality
  nameWithType: BlobContentId.op_Equality
  fullName: BlobContentId.op_Equality
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.op_Inequality*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: op_Inequality
  nameWithType: BlobContentId.op_Inequality
  fullName: BlobContentId.op_Inequality
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.Reflection.Metadata.BlobContentId.Stamp*
  parent: System.Reflection.Metadata.BlobContentId
  isExternal: false
  name: Stamp
  nameWithType: BlobContentId.Stamp
  fullName: BlobContentId.Stamp
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/BlobContentId.xml
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.Reflection.Metadata.BlobContentId}
  parent: System
  isExternal: false
  name: IEquatable<BlobContentId>
  nameWithType: IEquatable<BlobContentId>
  fullName: System.IEquatable<System.Reflection.Metadata.BlobContentId>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.BlobContentId
    name: BlobContentId
    nameWithType: BlobContentId
    fullName: System.Reflection.Metadata.BlobContentId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
