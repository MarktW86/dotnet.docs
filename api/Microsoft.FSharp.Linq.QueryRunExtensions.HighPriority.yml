### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  commentId: T:Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  id: HighPriority
  children:
  - Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})
  langs:
  - csharp
  name: HighPriority
  nameWithType: HighPriority
  fullName: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Linq.QueryRunExtensions
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AutoOpen]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      public static class HighPriority
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AutoOpenAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Linq.QueryRunExtensions/HighPriority.xml
- uid: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})
  commentId: M:Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})
  id: RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})
  parent: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  langs:
  - csharp
  name: RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
  nameWithType: HighPriority.RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
  fullName: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Linq.QueryRunExtensions
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("Run")]

      public static System.Collections.Generic.IEnumerable<T> RunQueryAsEnumerable<T> (Microsoft.FSharp.Linq.QueryBuilder this, Microsoft.FSharp.Quotations.FSharpExpr<Microsoft.FSharp.Linq.QuerySource<T,System.Collections.IEnumerable>> q);
    parameters:
    - id: this
      type: Microsoft.FSharp.Linq.QueryBuilder
      description: To be added.
    - id: q
      type: Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{T,System.Collections.IEnumerable}}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Linq.QueryRunExtensions/HighPriority.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})
  parent: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  isExternal: false
  name: RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
  nameWithType: HighPriority.RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
  fullName: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable<T>(QueryBuilder, FSharpExpr<QuerySource<T,IEnumerable>>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: Microsoft.FSharp.Linq.QueryBuilder
  parent: Microsoft.FSharp.Linq
  isExternal: false
  name: QueryBuilder
  nameWithType: QueryBuilder
  fullName: Microsoft.FSharp.Linq.QueryBuilder
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1
  name: FSharpExpr<T>
  nameWithType: FSharpExpr<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr<T>
- uid: Microsoft.FSharp.Linq.QuerySource`2
  name: QuerySource<T,Q>
  nameWithType: QuerySource<T,Q>
  fullName: Microsoft.FSharp.Linq.QuerySource<T,Q>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.IEnumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{T,System.Collections.IEnumerable}}
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr<QuerySource<T,IEnumerable>>
  nameWithType: FSharpExpr<QuerySource<T,IEnumerable>>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr<Microsoft.FSharp.Linq.QuerySource<T,System.Collections.IEnumerable>>
  spec.csharp:
  - uid: Microsoft.FSharp.Quotations.FSharpExpr`1
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Linq.QuerySource`2
    name: QuerySource
    nameWithType: QuerySource
    fullName: Microsoft.FSharp.Linq.QuerySource
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1*
  parent: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority
  isExternal: false
  name: RunQueryAsEnumerable<T>
  nameWithType: HighPriority.RunQueryAsEnumerable<T>
  fullName: Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Linq.QueryRunExtensions/HighPriority.xml
