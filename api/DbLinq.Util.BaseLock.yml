### YamlMime:ManagedReference
items:
- uid: DbLinq.Util.BaseLock
  commentId: T:DbLinq.Util.BaseLock
  id: BaseLock
  children:
  - DbLinq.Util.BaseLock.#ctor(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.BaseLock._Locks
  - DbLinq.Util.BaseLock.Dispose
  langs:
  - csharp
  name: BaseLock
  nameWithType: BaseLock
  fullName: DbLinq.Util.BaseLock
  type: Class
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: 'public abstract class BaseLock : IDisposable'
  inheritance:
  - System.Object
  derivedClasses:
  - DbLinq.Util.ReadLock
  - DbLinq.Util.ReadOnlyLock
  - DbLinq.Util.WriteLock
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
- uid: DbLinq.Util.BaseLock.#ctor(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.BaseLock.#ctor(System.Threading.ReaderWriterLockSlim)
  id: '#ctor(System.Threading.ReaderWriterLockSlim)'
  parent: DbLinq.Util.BaseLock
  langs:
  - csharp
  name: BaseLock(ReaderWriterLockSlim)
  nameWithType: BaseLock.BaseLock(ReaderWriterLockSlim)
  fullName: DbLinq.Util.BaseLock.BaseLock(ReaderWriterLockSlim)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public BaseLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.BaseLock.#ctor*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
- uid: DbLinq.Util.BaseLock._Locks
  commentId: F:DbLinq.Util.BaseLock._Locks
  id: _Locks
  parent: DbLinq.Util.BaseLock
  langs:
  - csharp
  name: _Locks
  nameWithType: BaseLock._Locks
  fullName: DbLinq.Util.BaseLock._Locks
  type: Field
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: protected System.Threading.ReaderWriterLockSlim _Locks;
    return:
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
- uid: DbLinq.Util.BaseLock.Dispose
  commentId: M:DbLinq.Util.BaseLock.Dispose
  id: Dispose
  parent: DbLinq.Util.BaseLock
  langs:
  - csharp
  name: Dispose()
  nameWithType: BaseLock.Dispose()
  fullName: DbLinq.Util.BaseLock.Dispose()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: DbLinq.Util.BaseLock.Dispose*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DbLinq.Util.BaseLock.#ctor(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.BaseLock
  isExternal: false
  name: BaseLock(ReaderWriterLockSlim)
  nameWithType: BaseLock.BaseLock(ReaderWriterLockSlim)
  fullName: DbLinq.Util.BaseLock.BaseLock(ReaderWriterLockSlim)
- uid: System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: false
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: DbLinq.Util.BaseLock._Locks
  parent: DbLinq.Util.BaseLock
  isExternal: false
  name: _Locks
  nameWithType: BaseLock._Locks
  fullName: DbLinq.Util.BaseLock._Locks
- uid: DbLinq.Util.BaseLock.Dispose
  parent: DbLinq.Util.BaseLock
  isExternal: false
  name: Dispose()
  nameWithType: BaseLock.Dispose()
  fullName: DbLinq.Util.BaseLock.Dispose()
- uid: DbLinq.Util.BaseLock.#ctor*
  parent: DbLinq.Util.BaseLock
  isExternal: false
  name: BaseLock
  nameWithType: BaseLock.BaseLock
  fullName: DbLinq.Util.BaseLock.BaseLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
- uid: DbLinq.Util.BaseLock.Dispose*
  parent: DbLinq.Util.BaseLock
  isExternal: false
  name: Dispose
  nameWithType: BaseLock.Dispose
  fullName: DbLinq.Util.BaseLock.Dispose
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/BaseLock.xml
