### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SocketTaskExtensions
  commentId: T:System.Net.Sockets.SocketTaskExtensions
  id: SocketTaskExtensions
  children:
  - System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)
  - System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)
  - System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)
  - System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)
  - System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  - System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  - System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  langs:
  - csharp
  name: SocketTaskExtensions
  nameWithType: SocketTaskExtensions
  fullName: System.Net.Sockets.SocketTaskExtensions
  type: Class
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static class SocketTaskExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)
  id: AcceptAsync(System.Net.Sockets.Socket)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: AcceptAsync(Socket)
  nameWithType: SocketTaskExtensions.AcceptAsync(Socket)
  fullName: SocketTaskExtensions.AcceptAsync(Socket)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<System.Net.Sockets.Socket> AcceptAsync (this System.Net.Sockets.Socket socket);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.Socket}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.AcceptAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)
  id: AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: AcceptAsync(Socket, Socket)
  nameWithType: SocketTaskExtensions.AcceptAsync(Socket, Socket)
  fullName: SocketTaskExtensions.AcceptAsync(Socket, Socket)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<System.Net.Sockets.Socket> AcceptAsync (this System.Net.Sockets.Socket socket, System.Net.Sockets.Socket acceptSocket);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: acceptSocket
      type: System.Net.Sockets.Socket
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.Socket}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.AcceptAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)
  id: ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ConnectAsync(Socket, EndPoint)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, EndPoint)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, EndPoint)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task ConnectAsync (this System.Net.Sockets.Socket socket, System.Net.EndPoint remoteEP);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: remoteEP
      type: System.Net.EndPoint
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)
  id: ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ConnectAsync(Socket, IPAddress, Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress, Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, IPAddress, Int32)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task ConnectAsync (this System.Net.Sockets.Socket socket, System.Net.IPAddress address, int port);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)
  id: ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ConnectAsync(Socket, IPAddress[], Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress[], Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, IPAddress[], Int32)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task ConnectAsync (this System.Net.Sockets.Socket socket, System.Net.IPAddress[] addresses, int port);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: addresses
      type: System.Net.IPAddress[]
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)
  id: ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ConnectAsync(Socket, String, Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, String, Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, String, Int32)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task ConnectAsync (this System.Net.Sockets.Socket socket, string host, int port);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: host
      type: System.String
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ConnectAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  id: ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
  fullName: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<int> ReceiveAsync (this System.Net.Sockets.Socket socket, ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  fullName: SocketTaskExtensions.ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<int> ReceiveAsync (this System.Net.Sockets.Socket socket, System.Collections.Generic.IList<ArraySegment<byte>> buffers, System.Net.Sockets.SocketFlags socketFlags);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveFromResult> ReceiveFromAsync (this System.Net.Sockets.Socket socket, ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEndPoint);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    - id: remoteEndPoint
      type: System.Net.EndPoint
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.SocketReceiveFromResult}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveMessageFromResult> ReceiveMessageFromAsync (this System.Net.Sockets.Socket socket, ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEndPoint);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    - id: remoteEndPoint
      type: System.Net.EndPoint
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Net.Sockets.SocketReceiveMessageFromResult}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  id: SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
  nameWithType: SocketTaskExtensions.SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
  fullName: SocketTaskExtensions.SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<int> SendAsync (this System.Net.Sockets.Socket socket, ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.SendAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  id: SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  nameWithType: SocketTaskExtensions.SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  fullName: SocketTaskExtensions.SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<int> SendAsync (this System.Net.Sockets.Socket socket, System.Collections.Generic.IList<ArraySegment<byte>> buffers, System.Net.Sockets.SocketFlags socketFlags);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffers
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.SendAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  commentId: M:System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  id: SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  langs:
  - csharp
  name: SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  type: Method
  assemblies:
  - System.Net.Sockets
  - netstandard
  - System
  namespace: System.Net.Sockets
  syntax:
    content: public static System.Threading.Tasks.Task<int> SendToAsync (this System.Net.Sockets.Socket socket, ArraySegment<byte> buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
      description: To be added.
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: socketFlags
      type: System.Net.Sockets.SocketFlags
      description: To be added.
    - id: remoteEP
      type: System.Net.EndPoint
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Net.Sockets.SocketTaskExtensions.SendToAsync*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: AcceptAsync(Socket)
  nameWithType: SocketTaskExtensions.AcceptAsync(Socket)
  fullName: SocketTaskExtensions.AcceptAsync(Socket)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Net.Sockets.Socket
  name: Socket
  nameWithType: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Threading.Tasks.Task{System.Net.Sockets.Socket}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Socket>
  nameWithType: Task<Socket>
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.Socket>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Sockets.Socket
    name: Socket
    nameWithType: Socket
    fullName: System.Net.Sockets.Socket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync(System.Net.Sockets.Socket,System.Net.Sockets.Socket)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: AcceptAsync(Socket, Socket)
  nameWithType: SocketTaskExtensions.AcceptAsync(Socket, Socket)
  fullName: SocketTaskExtensions.AcceptAsync(Socket, Socket)
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ConnectAsync(Socket, EndPoint)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, EndPoint)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, EndPoint)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  nameWithType: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ConnectAsync(Socket, IPAddress, Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress, Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, IPAddress, Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ConnectAsync(Socket, IPAddress[], Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, IPAddress[], Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, IPAddress[], Int32)
- uid: System.Net.IPAddress[]
  parent: System.Net
  isExternal: false
  name: IPAddress[]
  nameWithType: IPAddress[]
  fullName: System.Net.IPAddress[]
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync(System.Net.Sockets.Socket,System.String,System.Int32)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ConnectAsync(Socket, String, Int32)
  nameWithType: SocketTaskExtensions.ConnectAsync(Socket, String, Int32)
  fullName: SocketTaskExtensions.ConnectAsync(Socket, String, Int32)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
  fullName: SocketTaskExtensions.ReceiveAsync(Socket, ArraySegment<Byte>, SocketFlags)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ArraySegment`1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: false
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  name: SocketFlags
  nameWithType: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  nameWithType: SocketTaskExtensions.ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  fullName: SocketTaskExtensions.ReceiveAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<ArraySegment<Byte>>
  nameWithType: IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.ReceiveFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
- uid: System.Net.Sockets.SocketReceiveFromResult
  name: SocketReceiveFromResult
  nameWithType: SocketReceiveFromResult
  fullName: System.Net.Sockets.SocketReceiveFromResult
- uid: System.Threading.Tasks.Task{System.Net.Sockets.SocketReceiveFromResult}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<SocketReceiveFromResult>
  nameWithType: Task<SocketReceiveFromResult>
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveFromResult>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Sockets.SocketReceiveFromResult
    name: SocketReceiveFromResult
    nameWithType: SocketReceiveFromResult
    fullName: System.Net.Sockets.SocketReceiveFromResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.ReceiveMessageFromAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
- uid: System.Net.Sockets.SocketReceiveMessageFromResult
  name: SocketReceiveMessageFromResult
  nameWithType: SocketReceiveMessageFromResult
  fullName: System.Net.Sockets.SocketReceiveMessageFromResult
- uid: System.Threading.Tasks.Task{System.Net.Sockets.SocketReceiveMessageFromResult}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<SocketReceiveMessageFromResult>
  nameWithType: Task<SocketReceiveMessageFromResult>
  fullName: System.Threading.Tasks.Task<System.Net.Sockets.SocketReceiveMessageFromResult>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Sockets.SocketReceiveMessageFromResult
    name: SocketReceiveMessageFromResult
    nameWithType: SocketReceiveMessageFromResult
    fullName: System.Net.Sockets.SocketReceiveMessageFromResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
  nameWithType: SocketTaskExtensions.SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
  fullName: SocketTaskExtensions.SendAsync(Socket, ArraySegment<Byte>, SocketFlags)
- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync(System.Net.Sockets.Socket,System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  nameWithType: SocketTaskExtensions.SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
  fullName: SocketTaskExtensions.SendAsync(Socket, IList<ArraySegment<Byte>>, SocketFlags)
- uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync(System.Net.Sockets.Socket,System.ArraySegment{System.Byte},System.Net.Sockets.SocketFlags,System.Net.EndPoint)
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  nameWithType: SocketTaskExtensions.SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
  fullName: SocketTaskExtensions.SendToAsync(Socket, ArraySegment<Byte>, SocketFlags, EndPoint)
- uid: System.Net.Sockets.SocketTaskExtensions.AcceptAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: AcceptAsync
  nameWithType: SocketTaskExtensions.AcceptAsync
  fullName: SocketTaskExtensions.AcceptAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ConnectAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ConnectAsync
  nameWithType: SocketTaskExtensions.ConnectAsync
  fullName: SocketTaskExtensions.ConnectAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveAsync
  nameWithType: SocketTaskExtensions.ReceiveAsync
  fullName: SocketTaskExtensions.ReceiveAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveFromAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveFromAsync
  nameWithType: SocketTaskExtensions.ReceiveFromAsync
  fullName: SocketTaskExtensions.ReceiveFromAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.ReceiveMessageFromAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: ReceiveMessageFromAsync
  nameWithType: SocketTaskExtensions.ReceiveMessageFromAsync
  fullName: SocketTaskExtensions.ReceiveMessageFromAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.SendAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: SendAsync
  nameWithType: SocketTaskExtensions.SendAsync
  fullName: SocketTaskExtensions.SendAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
- uid: System.Net.Sockets.SocketTaskExtensions.SendToAsync*
  parent: System.Net.Sockets.SocketTaskExtensions
  isExternal: false
  name: SendToAsync
  nameWithType: SocketTaskExtensions.SendToAsync
  fullName: SocketTaskExtensions.SendToAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/SocketTaskExtensions.xml
