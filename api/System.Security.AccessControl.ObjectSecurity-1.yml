### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.ObjectSecurity`1
  commentId: T:System.Security.AccessControl.ObjectSecurity`1
  id: ObjectSecurity`1
  children:
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  - System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  - System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  langs:
  - csharp
  name: ObjectSecurity<T>
  nameWithType: ObjectSecurity<T>
  fullName: System.Security.AccessControl.ObjectSecurity<T>
  type: Class
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.
  remarks: Access rights (permissions) are type T, which you can type-cast to or from an int. For example, you can cast a <xref:System.Security.AccessControl.FileSystemRights> as the access rights type, and then use the instance normally. In contrast, <xref:System.Security.AccessControl.ObjectSecurity> always takes access rights of type int.
  syntax:
    content: 'public abstract class ObjectSecurity<T> : System.Security.AccessControl.NativeObjectSecurity where T : struct'
    typeParameters:
    - id: T
      description: The access rights for the object.
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  derivedClasses:
  - System.IO.MemoryMappedFiles.MemoryMappedFileSecurity
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ObjectSecurity<T>(Boolean, ResourceType)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectSecurity`1 class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is a container object.'
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: The type of resource.
  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectSecurity`1 class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle safeHandle, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is a container object.'
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: The type of resource.
    - id: safeHandle
      type: System.Runtime.InteropServices.SafeHandle
      description: A handle.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections to include.
  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectSecurity`1 class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is a container object.'
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: The type of resource.
    - id: name
      type: System.String
      description: The name of the securable object with which the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is associated.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections to include.
  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectSecurity`1 class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle safeHandle, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is a container object.'
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: The type of resource.
    - id: safeHandle
      type: System.Runtime.InteropServices.SafeHandle
      description: A handle.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections to include.
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode
      description: A delegate implemented by integrators that provides custom exceptions.
    - id: exceptionContext
      type: System.Object
      description: An object that contains contextual information about the source or destination of the exception.
  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  id: '#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)'
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  type: Constructor
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectSecurity`1 class.
  syntax:
    content: protected ObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: '`true` if the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is a container object.'
    - id: resourceType
      type: System.Security.AccessControl.ResourceType
      description: The type of resource.
    - id: name
      type: System.String
      description: The name of the securable object with which the new <xref href="System.Security.AccessControl.ObjectSecurity`1"></xref> object is associated.
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: The sections to include.
    - id: exceptionFromErrorCode
      type: System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode
      description: A delegate implemented by integrators that provides custom exceptions.
    - id: exceptionContext
      type: System.Object
      description: An object that contains contextual information about the source or destination of the exception.
  overload: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AccessRightType
  nameWithType: ObjectSecurity<T>.AccessRightType
  fullName: ObjectSecurity<T>.AccessRightType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the Type of the securable object associated with this ObjectSecurity`1 object.
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: The type of the securable object associated with the current instance.
  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRightType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  nameWithType: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: Represents a user account.
    - id: accessMask
      type: System.Int32
      description: The access type.
    - id: isInherited
      type: System.Boolean
      description: >-
        ``
            `true` if the access rule is inherited; otherwise, `false`.
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Specifies how to propagate access masks to child objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Specifies how to propagate Access Control Entries (ACEs) to child objects.
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: Specifies whether access is allowed or denied.
    return:
      type: System.Security.AccessControl.AccessRule
      description: Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.
  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: ObjectSecurity<T>.AccessRuleType
  fullName: ObjectSecurity<T>.AccessRuleType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: The Type of the object associated with the access rules of the current instance.
  overload: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AddAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual void AddAccessRule (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The rule to add.
  overload: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AddAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual void AddAuditRule (System.Security.AccessControl.AuditRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule`1
      description: The audit rule to add.
  overload: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  nameWithType: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Initializes a new instance of the <xref href="System.Security.AccessControl.AuditRule"></xref> class representing the specified audit rule for the specified user.
  syntax:
    content: public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: Represents a user account.
    - id: accessMask
      type: System.Int32
      description: An integer that specifies an access type.
    - id: isInherited
      type: System.Boolean
      description: '`true` if the access rule is inherited; otherwise, `false`.'
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: Specifies how to propagate access masks to child objects.
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: Specifies how to propagate Access Control Entries (ACEs) to child objects.
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: Describes the type of auditing to perform.
    return:
      type: System.Security.AccessControl.AuditRule
      description: Returns the specified audit rule for the specified user.
  overload: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: ObjectSecurity<T>.AuditRuleType
  fullName: ObjectSecurity<T>.AuditRuleType
  type: Property
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: The Type object associated with the audit rules of the current instance.
  overload: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: ObjectSecurity<T>.Persist(SafeHandle)
  fullName: ObjectSecurity<T>.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: The handle of the securable object with which this ObjectSecurity`1 object is associated.
  overload: System.Security.AccessControl.ObjectSecurity`1.Persist*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  id: Persist(System.String)
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: Persist(String)
  nameWithType: ObjectSecurity<T>.Persist(String)
  fullName: ObjectSecurity<T>.Persist(String)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the securable object with which this ObjectSecurity`1 object is associated.
  overload: System.Security.AccessControl.ObjectSecurity`1.Persist*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual bool RemoveAccessRule (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The rule to remove.
    return:
      type: System.Boolean
      description: Returns `true` if the access rule was successfully removed; otherwise, `false`.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAccessRuleAll(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The access rule to remove.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object
  syntax:
    content: public virtual void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The access rule to remove.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual bool RemoveAuditRule (System.Security.AccessControl.AuditRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule`1
      description: The audit rule to remove
    return:
      type: System.Boolean
      description: Returns `true` if the object was removed; otherwise, `false`.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAuditRuleAll(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.
  syntax:
    content: public virtual void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule`1
      description: The audit rule to remove.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object
  syntax:
    content: public virtual void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule`1
      description: The audit rule to remove.
  overload: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: ResetAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.
  syntax:
    content: public virtual void ResetAccessRule (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The access rule to reset.
  overload: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  id: SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: SetAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.
  syntax:
    content: public virtual void SetAccessRule (System.Security.AccessControl.AccessRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule`1
      description: The access rule to set.
  overload: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  commentId: M:System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  id: SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  langs:
  - csharp
  name: SetAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)
  type: Method
  assemblies:
  - System.Security.AccessControl
  - mscorlib
  namespace: System.Security.AccessControl
  summary: Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.
  syntax:
    content: public virtual void SetAuditRule (System.Security.AccessControl.AuditRule<T> rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule`1
      description: The audit rule to set.
  overload: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: NativeObjectSecurity
  nameWithType: NativeObjectSecurity
  fullName: System.Security.AccessControl.NativeObjectSecurity
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>(Boolean, ResourceType)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.ResourceType
  parent: System.Security.AccessControl
  isExternal: false
  name: ResourceType
  nameWithType: ResourceType
  fullName: System.Security.AccessControl.ResourceType
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, SafeHandle, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
  fullName: ObjectSecurity<T>.ObjectSecurity<T>(Boolean, ResourceType, String, AccessControlSections, NativeObjectSecurity+ExceptionFromErrorCode, Object)
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity<T>.AccessRightType
  fullName: ObjectSecurity<T>.AccessRightType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  nameWithType: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: ObjectSecurity<T>.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity<T>.AccessRuleType
  fullName: ObjectSecurity<T>.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AddAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.AddAccessRule(AccessRule<T>)
- uid: System.Security.AccessControl.AccessRule`1
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule<T>
  nameWithType: AccessRule<T>
  fullName: System.Security.AccessControl.AccessRule<T>
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AddAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.AddAuditRule(AuditRule<T>)
- uid: System.Security.AccessControl.AuditRule`1
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule<T>
  nameWithType: AuditRule<T>
  fullName: System.Security.AccessControl.AuditRule<T>
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  nameWithType: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: ObjectSecurity<T>.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity<T>.AuditRuleType
  fullName: ObjectSecurity<T>.AuditRuleType
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: ObjectSecurity<T>.Persist(SafeHandle)
  fullName: ObjectSecurity<T>.Persist(SafeHandle)
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: Persist(String)
  nameWithType: ObjectSecurity<T>.Persist(String)
  fullName: ObjectSecurity<T>.Persist(String)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRule(AccessRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRuleAll(AccessRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)
  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific(AccessRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRule(AuditRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRuleAll(AuditRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)
  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific(AuditRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ResetAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.ResetAccessRule(AccessRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: SetAccessRule(AccessRule<T>)
  nameWithType: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)
  fullName: ObjectSecurity<T>.SetAccessRule(AccessRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: SetAuditRule(AuditRule<T>)
  nameWithType: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)
  fullName: ObjectSecurity<T>.SetAuditRule(AuditRule<T>)
- uid: System.Security.AccessControl.ObjectSecurity`1.#ctor*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ObjectSecurity<T>
  nameWithType: ObjectSecurity<T>.ObjectSecurity<T>
  fullName: ObjectSecurity<T>.ObjectSecurity<T>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRightType*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity<T>.AccessRightType
  fullName: ObjectSecurity<T>.AccessRightType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRuleFactory
  nameWithType: ObjectSecurity<T>.AccessRuleFactory
  fullName: ObjectSecurity<T>.AccessRuleFactory
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AccessRuleType*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity<T>.AccessRuleType
  fullName: ObjectSecurity<T>.AccessRuleType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AddAccessRule
  nameWithType: ObjectSecurity<T>.AddAccessRule
  fullName: ObjectSecurity<T>.AddAccessRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AddAuditRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AddAuditRule
  nameWithType: ObjectSecurity<T>.AddAuditRule
  fullName: ObjectSecurity<T>.AddAuditRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AuditRuleFactory
  nameWithType: ObjectSecurity<T>.AuditRuleFactory
  fullName: ObjectSecurity<T>.AuditRuleFactory
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.AuditRuleType*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity<T>.AuditRuleType
  fullName: ObjectSecurity<T>.AuditRuleType
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.Persist*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: Persist
  nameWithType: ObjectSecurity<T>.Persist
  fullName: ObjectSecurity<T>.Persist
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRule
  nameWithType: ObjectSecurity<T>.RemoveAccessRule
  fullName: ObjectSecurity<T>.RemoveAccessRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleAll
  fullName: ObjectSecurity<T>.RemoveAccessRuleAll
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: ObjectSecurity<T>.RemoveAccessRuleSpecific
  fullName: ObjectSecurity<T>.RemoveAccessRuleSpecific
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRule
  nameWithType: ObjectSecurity<T>.RemoveAuditRule
  fullName: ObjectSecurity<T>.RemoveAuditRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleAll
  fullName: ObjectSecurity<T>.RemoveAuditRuleAll
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: ObjectSecurity<T>.RemoveAuditRuleSpecific
  fullName: ObjectSecurity<T>.RemoveAuditRuleSpecific
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: ResetAccessRule
  nameWithType: ObjectSecurity<T>.ResetAccessRule
  fullName: ObjectSecurity<T>.ResetAccessRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAccessRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: SetAccessRule
  nameWithType: ObjectSecurity<T>.SetAccessRule
  fullName: ObjectSecurity<T>.SetAccessRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
- uid: System.Security.AccessControl.ObjectSecurity`1.SetAuditRule*
  parent: System.Security.AccessControl.ObjectSecurity`1
  isExternal: false
  name: SetAuditRule
  nameWithType: ObjectSecurity<T>.SetAuditRule
  fullName: ObjectSecurity<T>.SetAuditRule
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/ObjectSecurity`1.xml
