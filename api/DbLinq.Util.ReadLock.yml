### YamlMime:ManagedReference
items:
- uid: DbLinq.Util.ReadLock
  commentId: T:DbLinq.Util.ReadLock
  id: ReadLock
  children:
  - DbLinq.Util.ReadLock.#ctor(System.Threading.ReaderWriterLockSlim)
  - DbLinq.Util.ReadLock.Dispose
  langs:
  - csharp
  name: ReadLock
  nameWithType: ReadLock
  fullName: DbLinq.Util.ReadLock
  type: Class
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: 'public class ReadLock : DbLinq.Util.BaseLock'
  inheritance:
  - System.Object
  - DbLinq.Util.BaseLock
  implements: []
  inheritedMembers:
  - DbLinq.Util.BaseLock._Locks
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/ReadLock.xml
- uid: DbLinq.Util.ReadLock.#ctor(System.Threading.ReaderWriterLockSlim)
  commentId: M:DbLinq.Util.ReadLock.#ctor(System.Threading.ReaderWriterLockSlim)
  id: '#ctor(System.Threading.ReaderWriterLockSlim)'
  parent: DbLinq.Util.ReadLock
  langs:
  - csharp
  name: ReadLock(ReaderWriterLockSlim)
  nameWithType: ReadLock.ReadLock(ReaderWriterLockSlim)
  fullName: ReadLock.ReadLock(ReaderWriterLockSlim)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public ReadLock (System.Threading.ReaderWriterLockSlim locks);
    parameters:
    - id: locks
      type: System.Threading.ReaderWriterLockSlim
      description: To be added.
  overload: DbLinq.Util.ReadLock.#ctor*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/ReadLock.xml
- uid: DbLinq.Util.ReadLock.Dispose
  commentId: M:DbLinq.Util.ReadLock.Dispose
  id: Dispose
  parent: DbLinq.Util.ReadLock
  langs:
  - csharp
  name: Dispose()
  nameWithType: ReadLock.Dispose()
  fullName: ReadLock.Dispose()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: DbLinq.Util
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: DbLinq.Util.ReadLock.Dispose*
  exceptions: []
  version:
  - xamarinmac-3.0
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/ReadLock.xml
references:
- uid: DbLinq.Util.BaseLock
  parent: DbLinq.Util
  isExternal: false
  name: BaseLock
  nameWithType: BaseLock
  fullName: DbLinq.Util.BaseLock
- uid: DbLinq.Util.ReadLock.#ctor(System.Threading.ReaderWriterLockSlim)
  parent: DbLinq.Util.ReadLock
  isExternal: false
  name: ReadLock(ReaderWriterLockSlim)
  nameWithType: ReadLock.ReadLock(ReaderWriterLockSlim)
  fullName: ReadLock.ReadLock(ReaderWriterLockSlim)
- uid: System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: false
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: DbLinq.Util.ReadLock.Dispose
  parent: DbLinq.Util.ReadLock
  isExternal: false
  name: Dispose()
  nameWithType: ReadLock.Dispose()
  fullName: ReadLock.Dispose()
- uid: DbLinq.Util.ReadLock.#ctor*
  parent: DbLinq.Util.ReadLock
  isExternal: false
  name: ReadLock
  nameWithType: ReadLock.ReadLock
  fullName: ReadLock.ReadLock
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/ReadLock.xml
- uid: DbLinq.Util.ReadLock.Dispose*
  parent: DbLinq.Util.ReadLock
  isExternal: false
  name: Dispose
  nameWithType: ReadLock.Dispose
  fullName: ReadLock.Dispose
  monikers:
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/DbLinq.Util/ReadLock.xml
