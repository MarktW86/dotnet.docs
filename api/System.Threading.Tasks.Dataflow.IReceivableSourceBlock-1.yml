### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  commentId: T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  id: IReceivableSourceBlock`1
  children:
  - System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)
  - System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)
  langs:
  - csharp
  name: IReceivableSourceBlock<TOutput>
  nameWithType: IReceivableSourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput>
  type: Interface
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: 'public interface IReceivableSourceBlock<TOutput> : System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>'
    typeParameters:
    - id: TOutput
      description: To be added.
  derivedClasses:
  - System.Threading.Tasks.Dataflow.BatchBlock`1
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`2
  - System.Threading.Tasks.Dataflow.BatchedJoinBlock`3
  - System.Threading.Tasks.Dataflow.BroadcastBlock`1
  - System.Threading.Tasks.Dataflow.BufferBlock`1
  - System.Threading.Tasks.Dataflow.JoinBlock`2
  - System.Threading.Tasks.Dataflow.JoinBlock`3
  - System.Threading.Tasks.Dataflow.TransformBlock`2
  - System.Threading.Tasks.Dataflow.TransformManyBlock`2
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  implements:
  - System.Threading.Tasks.Dataflow.ISourceBlock{TOutput}
  extensionMethods:
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/IReceivableSourceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)
  commentId: M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)
  id: TryReceive(System.Predicate{`0},`0@)
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  langs:
  - csharp
  name: TryReceive(Predicate<TOutput>, TOutput)
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  fullName: IReceivableSourceBlock<TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public bool TryReceive (Predicate<TOutput> filter, out TOutput item);
    parameters:
    - id: filter
      type: System.Predicate{TOutput}
      description: To be added.
    - id: item
      type: TOutput
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/IReceivableSourceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)
  commentId: M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)
  id: TryReceiveAll(System.Collections.Generic.IList{`0}@)
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  langs:
  - csharp
  name: TryReceiveAll(IList<TOutput>)
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceiveAll(IList<TOutput>)
  fullName: IReceivableSourceBlock<TOutput>.TryReceiveAll(IList<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public bool TryReceiveAll (out System.Collections.Generic.IList<TOutput> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IList{TOutput}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/IReceivableSourceBlock`1.xml
references:
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  isExternal: false
  name: TryReceive(Predicate<TOutput>, TOutput)
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceive(Predicate<TOutput>, TOutput)
  fullName: IReceivableSourceBlock<TOutput>.TryReceive(Predicate<TOutput>, TOutput)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: TOutput
  name: TOutput
  nameWithType: TOutput
  fullName: TOutput
- uid: System.Predicate{TOutput}
  parent: System
  isExternal: false
  name: Predicate<TOutput>
  nameWithType: Predicate<TOutput>
  fullName: System.Predicate<TOutput>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  isExternal: false
  name: TryReceiveAll(IList<TOutput>)
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceiveAll(IList<TOutput>)
  fullName: IReceivableSourceBlock<TOutput>.TryReceiveAll(IList<TOutput>)
- uid: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.Generic.IList{TOutput}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<TOutput>
  nameWithType: IList<TOutput>
  fullName: System.Collections.Generic.IList<TOutput>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive*
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  isExternal: false
  name: TryReceive
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceive
  fullName: IReceivableSourceBlock<TOutput>.TryReceive
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/IReceivableSourceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll*
  parent: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  isExternal: false
  name: TryReceiveAll
  nameWithType: IReceivableSourceBlock<TOutput>.TryReceiveAll
  fullName: IReceivableSourceBlock<TOutput>.TryReceiveAll
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/IReceivableSourceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<TOutput>
  nameWithType: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
