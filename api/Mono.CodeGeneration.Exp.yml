### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.Exp
  commentId: T:Mono.CodeGeneration.Exp
  id: Exp
  children:
  - Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.Inc(Mono.CodeGeneration.CodeValueReference)
  - Mono.CodeGeneration.Exp.Literal(System.Object)
  - Mono.CodeGeneration.Exp.Literal(System.String)
  - Mono.CodeGeneration.Exp.New(System.Type,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.Exp.NewArray(System.Type,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.Exp.Or(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  langs:
  - csharp
  name: Exp
  nameWithType: Exp
  fullName: Mono.CodeGeneration.Exp
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public class Exp
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  id: And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: And(CodeExpression, CodeExpression)
  nameWithType: Exp.And(CodeExpression, CodeExpression)
  fullName: Exp.And(CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression And (Mono.CodeGeneration.CodeExpression e1, Mono.CodeGeneration.CodeExpression e2);
    parameters:
    - id: e1
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: e2
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.And*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  id: And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: And(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: Exp.And(CodeExpression, CodeExpression, CodeExpression)
  fullName: Exp.And(CodeExpression, CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression And (Mono.CodeGeneration.CodeExpression e1, Mono.CodeGeneration.CodeExpression e2, Mono.CodeGeneration.CodeExpression e3);
    parameters:
    - id: e1
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: e2
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: e3
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.And*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(CodeMethod, CodeExpression[])
  nameWithType: Exp.Call(CodeMethod, CodeExpression[])
  fullName: Exp.Call(CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  id: Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(MethodInfo, CodeExpression[])
  nameWithType: Exp.Call(MethodInfo, CodeExpression[])
  fullName: Exp.Call(MethodInfo, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (System.Reflection.MethodInfo method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Exp.Call(CodeExpression, CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (Mono.CodeGeneration.CodeExpression target, Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(CodeExpression, MethodInfo, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, MethodInfo, CodeExpression[])
  fullName: Exp.Call(CodeExpression, MethodInfo, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (Mono.CodeGeneration.CodeExpression target, System.Reflection.MethodInfo method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(CodeExpression, String, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, String, CodeExpression[])
  fullName: Exp.Call(CodeExpression, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (Mono.CodeGeneration.CodeExpression target, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  id: Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Call(Type, String, CodeExpression[])
  nameWithType: Exp.Call(Type, String, CodeExpression[])
  fullName: Exp.Call(Type, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Call (Type type, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Inc(Mono.CodeGeneration.CodeValueReference)
  commentId: M:Mono.CodeGeneration.Exp.Inc(Mono.CodeGeneration.CodeValueReference)
  id: Inc(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Inc(CodeValueReference)
  nameWithType: Exp.Inc(CodeValueReference)
  fullName: Exp.Inc(CodeValueReference)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeValueReference Inc (Mono.CodeGeneration.CodeValueReference e);
    parameters:
    - id: e
      type: Mono.CodeGeneration.CodeValueReference
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeValueReference
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Inc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Literal(System.Object)
  commentId: M:Mono.CodeGeneration.Exp.Literal(System.Object)
  id: Literal(System.Object)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Literal(Object)
  nameWithType: Exp.Literal(Object)
  fullName: Exp.Literal(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Literal (object ob);
    parameters:
    - id: ob
      type: System.Object
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Literal*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Literal(System.String)
  commentId: M:Mono.CodeGeneration.Exp.Literal(System.String)
  id: Literal(System.String)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Literal(String)
  nameWithType: Exp.Literal(String)
  fullName: Exp.Literal(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Literal (string ob);
    parameters:
    - id: ob
      type: System.String
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Literal*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.New(System.Type,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.Exp.New(System.Type,Mono.CodeGeneration.CodeExpression[])
  id: New(System.Type,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: New(Type, CodeExpression[])
  nameWithType: Exp.New(Type, CodeExpression[])
  fullName: Exp.New(Type, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression New (Type type, Mono.CodeGeneration.CodeExpression[] pars);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: pars
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.New*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.NewArray(System.Type,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.Exp.NewArray(System.Type,Mono.CodeGeneration.CodeExpression)
  id: NewArray(System.Type,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: NewArray(Type, CodeExpression)
  nameWithType: Exp.NewArray(Type, CodeExpression)
  fullName: Exp.NewArray(Type, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression NewArray (Type type, Mono.CodeGeneration.CodeExpression size);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: size
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.NewArray*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Or(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.Exp.Or(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  id: Or(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  langs:
  - csharp
  name: Or(CodeExpression, CodeExpression)
  nameWithType: Exp.Or(CodeExpression, CodeExpression)
  fullName: Exp.Or(CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeExpression Or (Mono.CodeGeneration.CodeExpression e1, Mono.CodeGeneration.CodeExpression e2);
    parameters:
    - id: e1
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: e2
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.Exp.Or*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: And(CodeExpression, CodeExpression)
  nameWithType: Exp.And(CodeExpression, CodeExpression)
  fullName: Exp.And(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.Exp.And(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: And(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: Exp.And(CodeExpression, CodeExpression, CodeExpression)
  fullName: Exp.And(CodeExpression, CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(CodeMethod, CodeExpression[])
  nameWithType: Exp.Call(CodeMethod, CodeExpression[])
  fullName: Exp.Call(CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.CodeMethod
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeMethod
  nameWithType: CodeMethod
  fullName: Mono.CodeGeneration.CodeMethod
- uid: Mono.CodeGeneration.CodeExpression[]
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression[]
  nameWithType: CodeExpression[]
  fullName: Mono.CodeGeneration.CodeExpression[]
  spec.csharp:
  - uid: Mono.CodeGeneration.CodeExpression
    name: CodeExpression
    nameWithType: CodeExpression
    fullName: Mono.CodeGeneration.CodeExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.Exp.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(MethodInfo, CodeExpression[])
  nameWithType: Exp.Call(MethodInfo, CodeExpression[])
  fullName: Exp.Call(MethodInfo, CodeExpression[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Exp.Call(CodeExpression, CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(CodeExpression, MethodInfo, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, MethodInfo, CodeExpression[])
  fullName: Exp.Call(CodeExpression, MethodInfo, CodeExpression[])
- uid: Mono.CodeGeneration.Exp.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(CodeExpression, String, CodeExpression[])
  nameWithType: Exp.Call(CodeExpression, String, CodeExpression[])
  fullName: Exp.Call(CodeExpression, String, CodeExpression[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.Exp.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call(Type, String, CodeExpression[])
  nameWithType: Exp.Call(Type, String, CodeExpression[])
  fullName: Exp.Call(Type, String, CodeExpression[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mono.CodeGeneration.Exp.Inc(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Inc(CodeValueReference)
  nameWithType: Exp.Inc(CodeValueReference)
  fullName: Exp.Inc(CodeValueReference)
- uid: Mono.CodeGeneration.CodeValueReference
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeValueReference
  nameWithType: CodeValueReference
  fullName: Mono.CodeGeneration.CodeValueReference
- uid: Mono.CodeGeneration.Exp.Literal(System.Object)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Literal(Object)
  nameWithType: Exp.Literal(Object)
  fullName: Exp.Literal(Object)
- uid: Mono.CodeGeneration.Exp.Literal(System.String)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Literal(String)
  nameWithType: Exp.Literal(String)
  fullName: Exp.Literal(String)
- uid: Mono.CodeGeneration.Exp.New(System.Type,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: New(Type, CodeExpression[])
  nameWithType: Exp.New(Type, CodeExpression[])
  fullName: Exp.New(Type, CodeExpression[])
- uid: Mono.CodeGeneration.Exp.NewArray(System.Type,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: NewArray(Type, CodeExpression)
  nameWithType: Exp.NewArray(Type, CodeExpression)
  fullName: Exp.NewArray(Type, CodeExpression)
- uid: Mono.CodeGeneration.Exp.Or(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Or(CodeExpression, CodeExpression)
  nameWithType: Exp.Or(CodeExpression, CodeExpression)
  fullName: Exp.Or(CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.Exp.And*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: And
  nameWithType: Exp.And
  fullName: Exp.And
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Call*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Call
  nameWithType: Exp.Call
  fullName: Exp.Call
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Inc*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Inc
  nameWithType: Exp.Inc
  fullName: Exp.Inc
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Literal*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Literal
  nameWithType: Exp.Literal
  fullName: Exp.Literal
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.New*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: New
  nameWithType: Exp.New
  fullName: Exp.New
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.NewArray*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: NewArray
  nameWithType: Exp.NewArray
  fullName: Exp.NewArray
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
- uid: Mono.CodeGeneration.Exp.Or*
  parent: Mono.CodeGeneration.Exp
  isExternal: false
  name: Or
  nameWithType: Exp.Or
  fullName: Exp.Or
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/Exp.xml
