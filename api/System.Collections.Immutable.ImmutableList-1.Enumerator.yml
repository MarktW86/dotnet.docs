### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator
  commentId: T:System.Collections.Immutable.ImmutableList`1.Enumerator
  id: ImmutableList`1.Enumerator
  children:
  - System.Collections.Immutable.ImmutableList`1.Enumerator.Current
  - System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose
  - System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext
  - System.Collections.Immutable.ImmutableList`1.Enumerator.Reset
  - System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ImmutableList<T>.Enumerator
  nameWithType: ImmutableList<T>.Enumerator
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator
  type: Struct
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: 'public struct ImmutableList<T>.Enumerator : System.Collections.Generic.IEnumerator<T>'
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.Generic.IEnumerator<T>
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Current
  commentId: P:System.Collections.Immutable.ImmutableList`1.Enumerator.Current
  id: Current
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  langs:
  - csharp
  name: Current
  nameWithType: ImmutableList<T>.Enumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Current
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public T Current { get; }
    return:
      type: T
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList`1.Enumerator.Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose
  commentId: M:System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  langs:
  - csharp
  name: Dispose()
  nameWithType: ImmutableList<T>.Enumerator.Dispose()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Dispose()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext
  commentId: M:System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ImmutableList<T>.Enumerator.MoveNext()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.MoveNext()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Reset
  commentId: M:System.Collections.Immutable.ImmutableList`1.Enumerator.Reset
  id: Reset
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ImmutableList<T>.Enumerator.Reset()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Reset()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Collections.Immutable.ImmutableList`1.Enumerator.Reset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  langs:
  - csharp
  name: IEnumerator.Current
  nameWithType: ImmutableList<T>.Enumerator.IEnumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.IEnumerator.Current
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Current
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Current
  nameWithType: ImmutableList<T>.Enumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Current
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Dispose()
  nameWithType: ImmutableList<T>.Enumerator.Dispose()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Dispose()
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ImmutableList<T>.Enumerator.MoveNext()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Reset
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Reset()
  nameWithType: ImmutableList<T>.Enumerator.Reset()
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Reset()
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: IEnumerator.Current
  nameWithType: ImmutableList<T>.Enumerator.IEnumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.IEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Current*
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Current
  nameWithType: ImmutableList<T>.Enumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose*
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Dispose
  nameWithType: ImmutableList<T>.Enumerator.Dispose
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext*
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: MoveNext
  nameWithType: ImmutableList<T>.Enumerator.MoveNext
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.MoveNext
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.Reset*
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: Reset
  nameWithType: ImmutableList<T>.Enumerator.Reset
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
- uid: System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current*
  parent: System.Collections.Immutable.ImmutableList`1.Enumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ImmutableList<T>.Enumerator.System.Collections.IEnumerator.Current
  fullName: System.Collections.Immutable.ImmutableList<T>.Enumerator.System.Collections.IEnumerator.Current
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList`1+Enumerator.xml
