### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Quotations.PatternsModule
  commentId: T:Microsoft.FSharp.Quotations.PatternsModule
  id: PatternsModule
  children:
  - Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  langs:
  - csharp
  name: PatternsModule
  nameWithType: PatternsModule
  fullName: Microsoft.FSharp.Quotations.PatternsModule
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      [Microsoft.FSharp.Core.CompilationRepresentation(Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix)]

      public static class PatternsModule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompilationRepresentationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: AddressOfPattern(FSharpExpr)
  nameWithType: PatternsModule.AddressOfPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|AddressOf|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr> AddressOfPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: AddressSetPattern(FSharpExpr)
  nameWithType: PatternsModule.AddressSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|AddressSet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> AddressSetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: ApplicationPattern(FSharpExpr)
  nameWithType: PatternsModule.ApplicationPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Application|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> ApplicationPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: CallPattern(FSharpExpr)
  nameWithType: PatternsModule.CallPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CallPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Call|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> CallPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.CallPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: CoercePattern(FSharpExpr)
  nameWithType: PatternsModule.CoercePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Coerce|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Type>> CoercePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,System.Type}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: DefaultValuePattern(FSharpExpr)
  nameWithType: PatternsModule.DefaultValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|DefaultValue|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Type> DefaultValuePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Type}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: FieldGetPattern(FSharpExpr)
  nameWithType: PatternsModule.FieldGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|FieldGet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.FieldInfo>> FieldGetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.FieldInfo}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: FieldSetPattern(FSharpExpr)
  nameWithType: PatternsModule.FieldSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|FieldSet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr>> FieldSetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: ForIntegerRangeLoopPattern(FSharpExpr)
  nameWithType: PatternsModule.ForIntegerRangeLoopPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|ForIntegerRangeLoop|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> ForIntegerRangeLoopPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: IfThenElsePattern(FSharpExpr)
  nameWithType: PatternsModule.IfThenElsePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|IfThenElse|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> IfThenElsePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: LambdaPattern(FSharpExpr)
  nameWithType: PatternsModule.LambdaPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Lambda|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>> LambdaPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: LetPattern(FSharpExpr)
  nameWithType: PatternsModule.LetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Let|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> LetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.LetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: LetRecursivePattern(FSharpExpr)
  nameWithType: PatternsModule.LetRecursivePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|LetRecursive|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Collections.FSharpList<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>>,Microsoft.FSharp.Quotations.FSharpExpr>> LetRecursivePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewArrayPattern(FSharpExpr)
  nameWithType: PatternsModule.NewArrayPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewArray|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Type,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> NewArrayPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewDelegatePattern(FSharpExpr)
  nameWithType: PatternsModule.NewDelegatePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewDelegate|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Type,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpVar>,Microsoft.FSharp.Quotations.FSharpExpr>> NewDelegatePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewObjectPattern(FSharpExpr)
  nameWithType: PatternsModule.NewObjectPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewObject|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> NewObjectPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewRecordPattern(FSharpExpr)
  nameWithType: PatternsModule.NewRecordPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewRecord|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Type,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> NewRecordPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewTuplePattern(FSharpExpr)
  nameWithType: PatternsModule.NewTuplePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewTuple|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> NewTuplePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: NewUnionCasePattern(FSharpExpr)
  nameWithType: PatternsModule.NewUnionCasePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|NewUnionCase|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> NewUnionCasePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: PropertyGetPattern(FSharpExpr)
  nameWithType: PatternsModule.PropertyGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|PropertyGet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>> PropertyGetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: PropertySetPattern(FSharpExpr)
  nameWithType: PatternsModule.PropertySetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|PropertySet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>,Microsoft.FSharp.Quotations.FSharpExpr>> PropertySetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: QuotePattern(FSharpExpr)
  nameWithType: PatternsModule.QuotePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Quote|_|")]

      [System.Obsolete("Please use QuoteTyped or QuoteRaw to distinguish between typed and raw quotation literals")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr> QuotePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: QuoteRawPattern(FSharpExpr)
  nameWithType: PatternsModule.QuoteRawPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|QuoteRaw|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr> QuoteRawPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: QuoteTypedPattern(FSharpExpr)
  nameWithType: PatternsModule.QuoteTypedPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|QuoteTyped|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr> QuoteTypedPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: SequentialPattern(FSharpExpr)
  nameWithType: PatternsModule.SequentialPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Sequential|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> SequentialPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: TryFinallyPattern(FSharpExpr)
  nameWithType: PatternsModule.TryFinallyPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|TryFinally|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> TryFinallyPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: TryWithPattern(FSharpExpr)
  nameWithType: PatternsModule.TryWithPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|TryWith|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>> TryWithPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: TupleGetPattern(FSharpExpr)
  nameWithType: PatternsModule.TupleGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|TupleGet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,int>> TupleGetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,System.Int32}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: TypeTestPattern(FSharpExpr)
  nameWithType: PatternsModule.TypeTestPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|TypeTest|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Type>> TypeTestPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,System.Type}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: UnionCaseTestPattern(FSharpExpr)
  nameWithType: PatternsModule.UnionCaseTestPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|UnionCaseTest|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo>> UnionCaseTestPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: ValuePattern(FSharpExpr)
  nameWithType: PatternsModule.ValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Value|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<object,Type>> ValuePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: ValueWithNamePattern(FSharpExpr)
  nameWithType: PatternsModule.ValueWithNamePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|ValueWithName|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<object,Type,string>> ValueWithNamePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type,System.String}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: VarPattern(FSharpExpr)
  nameWithType: PatternsModule.VarPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Var|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpVar> VarPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpVar}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.VarPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: VarSetPattern(FSharpExpr)
  nameWithType: PatternsModule.VarSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|VarSet|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>> VarSetPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: WhileLoopPattern(FSharpExpr)
  nameWithType: PatternsModule.WhileLoopPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|WhileLoop|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>> WhileLoopPattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  id: WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  langs:
  - csharp
  name: WithValuePattern(FSharpExpr)
  nameWithType: PatternsModule.WithValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|WithValue|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<Tuple<object,Type,Microsoft.FSharp.Quotations.FSharpExpr>> WithValuePattern (Microsoft.FSharp.Quotations.FSharpExpr input);
    parameters:
    - id: input
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: AddressOfPattern(FSharpExpr)
  nameWithType: PatternsModule.AddressOfPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption`1
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Quotations.FSharpExpr
  name: FSharpExpr
  nameWithType: FSharpExpr
  fullName: Microsoft.FSharp.Quotations.FSharpExpr
- uid: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<FSharpExpr>
  nameWithType: FSharpOption<FSharpExpr>
  fullName: Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: AddressSetPattern(FSharpExpr)
  nameWithType: PatternsModule.AddressSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(FSharpExpr)
- uid: System.Tuple`2
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ApplicationPattern(FSharpExpr)
  nameWithType: PatternsModule.ApplicationPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: CallPattern(FSharpExpr)
  nameWithType: PatternsModule.CallPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CallPattern(FSharpExpr)
- uid: System.Tuple`3
  name: Tuple<T1,T2,T3>
  nameWithType: Tuple<T1,T2,T3>
  fullName: System.Tuple<T1,T2,T3>
- uid: System.Reflection.MethodInfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Microsoft.FSharp.Collections.FSharpList`1
  name: FSharpList<T>
  nameWithType: FSharpList<T>
  fullName: Microsoft.FSharp.Collections.FSharpList<T>
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpOption<FSharpExpr>,MethodInfo,FSharpList<FSharpExpr>>>
  nameWithType: FSharpOption<Tuple<FSharpOption<FSharpExpr>,MethodInfo,FSharpList<FSharpExpr>>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: CoercePattern(FSharpExpr)
  nameWithType: PatternsModule.CoercePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(FSharpExpr)
- uid: System.Type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,System.Type}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,Type>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,Type>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,System.Type>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: DefaultValuePattern(FSharpExpr)
  nameWithType: PatternsModule.DefaultValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Type}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Type>
  nameWithType: FSharpOption<Type>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Type>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: FieldGetPattern(FSharpExpr)
  nameWithType: PatternsModule.FieldGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(FSharpExpr)
- uid: System.Reflection.FieldInfo
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.FieldInfo}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpOption<FSharpExpr>,FieldInfo>>
  nameWithType: FSharpOption<Tuple<FSharpOption<FSharpExpr>,FieldInfo>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.FieldInfo>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: FieldSetPattern(FSharpExpr)
  nameWithType: PatternsModule.FieldSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpOption<FSharpExpr>,FieldInfo,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpOption<FSharpExpr>,FieldInfo,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ForIntegerRangeLoopPattern(FSharpExpr)
  nameWithType: PatternsModule.ForIntegerRangeLoopPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(FSharpExpr)
- uid: System.Tuple`4
  name: Tuple<T1,T2,T3,T4>
  nameWithType: Tuple<T1,T2,T3,T4>
  fullName: System.Tuple<T1,T2,T3,T4>
- uid: Microsoft.FSharp.Quotations.FSharpVar
  name: FSharpVar
  nameWithType: FSharpVar
  fullName: Microsoft.FSharp.Quotations.FSharpVar
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpVar,FSharpExpr,FSharpExpr,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpVar,FSharpExpr,FSharpExpr,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: IfThenElsePattern(FSharpExpr)
  nameWithType: PatternsModule.IfThenElsePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,FSharpExpr,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,FSharpExpr,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LambdaPattern(FSharpExpr)
  nameWithType: PatternsModule.LambdaPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpVar,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpVar,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LetPattern(FSharpExpr)
  nameWithType: PatternsModule.LetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpVar,FSharpExpr,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpVar,FSharpExpr,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LetRecursivePattern(FSharpExpr)
  nameWithType: PatternsModule.LetRecursivePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpList<Tuple<FSharpVar,FSharpExpr>>,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpList<Tuple<FSharpVar,FSharpExpr>>,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Collections.FSharpList<System.Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>>,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewArrayPattern(FSharpExpr)
  nameWithType: PatternsModule.NewArrayPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<Type,FSharpList<FSharpExpr>>>
  nameWithType: FSharpOption<Tuple<Type,FSharpList<FSharpExpr>>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Type,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewDelegatePattern(FSharpExpr)
  nameWithType: PatternsModule.NewDelegatePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<Type,FSharpList<FSharpVar>,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<Type,FSharpList<FSharpVar>,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Type,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpVar>,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewObjectPattern(FSharpExpr)
  nameWithType: PatternsModule.NewObjectPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(FSharpExpr)
- uid: System.Reflection.ConstructorInfo
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<ConstructorInfo,FSharpList<FSharpExpr>>>
  nameWithType: FSharpOption<Tuple<ConstructorInfo,FSharpList<FSharpExpr>>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewRecordPattern(FSharpExpr)
  nameWithType: PatternsModule.NewRecordPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewTuplePattern(FSharpExpr)
  nameWithType: PatternsModule.NewTuplePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<FSharpList<FSharpExpr>>
  nameWithType: FSharpOption<FSharpList<FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewUnionCasePattern(FSharpExpr)
  nameWithType: PatternsModule.NewUnionCasePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(FSharpExpr)
- uid: Microsoft.FSharp.Reflection.UnionCaseInfo
  name: UnionCaseInfo
  nameWithType: UnionCaseInfo
  fullName: Microsoft.FSharp.Reflection.UnionCaseInfo
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<UnionCaseInfo,FSharpList<FSharpExpr>>>
  nameWithType: FSharpOption<Tuple<UnionCaseInfo,FSharpList<FSharpExpr>>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Reflection.UnionCaseInfo
    name: UnionCaseInfo
    nameWithType: UnionCaseInfo
    fullName: Microsoft.FSharp.Reflection.UnionCaseInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: PropertyGetPattern(FSharpExpr)
  nameWithType: PatternsModule.PropertyGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(FSharpExpr)
- uid: System.Reflection.PropertyInfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpOption<FSharpExpr>,PropertyInfo,FSharpList<FSharpExpr>>>
  nameWithType: FSharpOption<Tuple<FSharpOption<FSharpExpr>,PropertyInfo,FSharpList<FSharpExpr>>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: PropertySetPattern(FSharpExpr)
  nameWithType: PatternsModule.PropertySetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr},System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpOption<FSharpExpr>,PropertyInfo,FSharpList<FSharpExpr>,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpOption<FSharpExpr>,PropertyInfo,FSharpList<FSharpExpr>,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>,System.Reflection.PropertyInfo,Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`4
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuotePattern(FSharpExpr)
  nameWithType: PatternsModule.QuotePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuoteRawPattern(FSharpExpr)
  nameWithType: PatternsModule.QuoteRawPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuoteTypedPattern(FSharpExpr)
  nameWithType: PatternsModule.QuoteTypedPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: SequentialPattern(FSharpExpr)
  nameWithType: PatternsModule.SequentialPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TryFinallyPattern(FSharpExpr)
  nameWithType: PatternsModule.TryFinallyPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TryWithPattern(FSharpExpr)
  nameWithType: PatternsModule.TryWithPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(FSharpExpr)
- uid: System.Tuple`5
  name: Tuple<T1,T2,T3,T4,T5>
  nameWithType: Tuple<T1,T2,T3,T4,T5>
  fullName: System.Tuple<T1,T2,T3,T4,T5>
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,FSharpVar,FSharpExpr,FSharpVar,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,FSharpVar,FSharpExpr,FSharpVar,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`5
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TupleGetPattern(FSharpExpr)
  nameWithType: PatternsModule.TupleGetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(FSharpExpr)
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,System.Int32}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,Int32>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,Int32>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,System.Int32>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TypeTestPattern(FSharpExpr)
  nameWithType: PatternsModule.TypeTestPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: UnionCaseTestPattern(FSharpExpr)
  nameWithType: PatternsModule.UnionCaseTestPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<FSharpExpr,UnionCaseInfo>>
  nameWithType: FSharpOption<Tuple<FSharpExpr,UnionCaseInfo>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Reflection.UnionCaseInfo
    name: UnionCaseInfo
    nameWithType: UnionCaseInfo
    fullName: Microsoft.FSharp.Reflection.UnionCaseInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ValuePattern(FSharpExpr)
  nameWithType: PatternsModule.ValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<Object,Type>>
  nameWithType: FSharpOption<Tuple<Object,Type>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Object,System.Type>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ValueWithNamePattern(FSharpExpr)
  nameWithType: PatternsModule.ValueWithNamePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(FSharpExpr)
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type,System.String}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<Object,Type,String>>
  nameWithType: FSharpOption<Tuple<Object,Type,String>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Object,System.Type,System.String>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: VarPattern(FSharpExpr)
  nameWithType: PatternsModule.VarPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarPattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpVar}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<FSharpVar>
  nameWithType: FSharpOption<FSharpVar>
  fullName: Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpVar>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: VarSetPattern(FSharpExpr)
  nameWithType: PatternsModule.VarSetPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: WhileLoopPattern(FSharpExpr)
  nameWithType: PatternsModule.WhileLoopPattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: WithValuePattern(FSharpExpr)
  nameWithType: PatternsModule.WithValuePattern(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(FSharpExpr)
- uid: Microsoft.FSharp.Core.FSharpOption{System.Tuple{System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Tuple<Object,Type,FSharpExpr>>
  nameWithType: FSharpOption<Tuple<Object,Type,FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Tuple<System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`3
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: AddressOfPattern
  nameWithType: PatternsModule.AddressOfPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: AddressSetPattern
  nameWithType: PatternsModule.AddressSetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ApplicationPattern
  nameWithType: PatternsModule.ApplicationPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.CallPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: CallPattern
  nameWithType: PatternsModule.CallPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CallPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: CoercePattern
  nameWithType: PatternsModule.CoercePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.CoercePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: DefaultValuePattern
  nameWithType: PatternsModule.DefaultValuePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: FieldGetPattern
  nameWithType: PatternsModule.FieldGetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: FieldSetPattern
  nameWithType: PatternsModule.FieldSetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ForIntegerRangeLoopPattern
  nameWithType: PatternsModule.ForIntegerRangeLoopPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: IfThenElsePattern
  nameWithType: PatternsModule.IfThenElsePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LambdaPattern
  nameWithType: PatternsModule.LambdaPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LetPattern
  nameWithType: PatternsModule.LetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: LetRecursivePattern
  nameWithType: PatternsModule.LetRecursivePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewArrayPattern
  nameWithType: PatternsModule.NewArrayPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewDelegatePattern
  nameWithType: PatternsModule.NewDelegatePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewObjectPattern
  nameWithType: PatternsModule.NewObjectPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewRecordPattern
  nameWithType: PatternsModule.NewRecordPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewTuplePattern
  nameWithType: PatternsModule.NewTuplePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: NewUnionCasePattern
  nameWithType: PatternsModule.NewUnionCasePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: PropertyGetPattern
  nameWithType: PatternsModule.PropertyGetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: PropertySetPattern
  nameWithType: PatternsModule.PropertySetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuotePattern
  nameWithType: PatternsModule.QuotePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuotePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuoteRawPattern
  nameWithType: PatternsModule.QuoteRawPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: QuoteTypedPattern
  nameWithType: PatternsModule.QuoteTypedPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: SequentialPattern
  nameWithType: PatternsModule.SequentialPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TryFinallyPattern
  nameWithType: PatternsModule.TryFinallyPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TryWithPattern
  nameWithType: PatternsModule.TryWithPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TupleGetPattern
  nameWithType: PatternsModule.TupleGetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: TypeTestPattern
  nameWithType: PatternsModule.TypeTestPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: UnionCaseTestPattern
  nameWithType: PatternsModule.UnionCaseTestPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ValuePattern
  nameWithType: PatternsModule.ValuePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValuePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: ValueWithNamePattern
  nameWithType: PatternsModule.ValueWithNamePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: VarPattern
  nameWithType: PatternsModule.VarPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: VarSetPattern
  nameWithType: PatternsModule.VarSetPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: WhileLoopPattern
  nameWithType: PatternsModule.WhileLoopPattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
- uid: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern*
  parent: Microsoft.FSharp.Quotations.PatternsModule
  isExternal: false
  name: WithValuePattern
  nameWithType: PatternsModule.WithValuePattern
  fullName: Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/PatternsModule.xml
