### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  commentId: T:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  id: MetadataReaderExtensions
  children:
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)
  langs:
  - csharp
  name: MetadataReaderExtensions
  nameWithType: MetadataReaderExtensions
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  type: Class
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static class MetadataReaderExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  id: GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetEditAndContinueLogEntries(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetEditAndContinueLogEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(MetadataReader)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry> GetEditAndContinueLogEntries (this System.Reflection.Metadata.MetadataReader reader);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  id: GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetEditAndContinueMapEntries(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetEditAndContinueMapEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(MetadataReader)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Reflection.Metadata.EntityHandle> GetEditAndContinueMapEntries (this System.Reflection.Metadata.MetadataReader reader);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.EntityHandle}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  id: GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetHeapMetadataOffset(MetadataReader, HeapIndex)
  nameWithType: MetadataReaderExtensions.GetHeapMetadataOffset(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(MetadataReader, HeapIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static int GetHeapMetadataOffset (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.HeapIndex heapIndex);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: heapIndex
      type: System.Reflection.Metadata.Ecma335.HeapIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  id: GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetHeapSize(MetadataReader, HeapIndex)
  nameWithType: MetadataReaderExtensions.GetHeapSize(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(MetadataReader, HeapIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static int GetHeapSize (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.HeapIndex heapIndex);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: heapIndex
      type: System.Reflection.Metadata.Ecma335.HeapIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetNextHandle(MetadataReader, BlobHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Reflection.Metadata.BlobHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.BlobHandle handle);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetNextHandle(MetadataReader, StringHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, StringHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Reflection.Metadata.StringHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.StringHandle handle);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetNextHandle(MetadataReader, UserStringHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, UserStringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, UserStringHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Reflection.Metadata.UserStringHandle GetNextHandle (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.UserStringHandle handle);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.UserStringHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.UserStringHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetTableMetadataOffset(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableMetadataOffset(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(MetadataReader, TableIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static int GetTableMetadataOffset (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetTableRowCount(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableRowCount(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(MetadataReader, TableIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static int GetTableRowCount (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetTableRowSize(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableRowSize(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(MetadataReader, TableIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static int GetTableRowSize (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.Ecma335.TableIndex tableIndex);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  id: GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetTypesWithEvents(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetTypesWithEvents(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(MetadataReader)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Reflection.Metadata.TypeDefinitionHandle> GetTypesWithEvents (this System.Reflection.Metadata.MetadataReader reader);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  id: GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: GetTypesWithProperties(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetTypesWithProperties(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(MetadataReader)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Reflection.Metadata.TypeDefinitionHandle> GetTypesWithProperties (this System.Reflection.Metadata.MetadataReader reader);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)
  id: ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  langs:
  - csharp
  name: ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
  nameWithType: MetadataReaderExtensions.ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static System.Reflection.Metadata.SignatureTypeKind ResolveSignatureTypeKind (this System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.EntityHandle typeHandle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: typeHandle
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: System.Reflection.Metadata.SignatureTypeKind
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetEditAndContinueLogEntries(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetEditAndContinueLogEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(MetadataReader)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
  name: EditAndContinueLogEntry
  nameWithType: EditAndContinueLogEntry
  fullName: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<EditAndContinueLogEntry>
  nameWithType: IEnumerable<EditAndContinueLogEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
    name: EditAndContinueLogEntry
    nameWithType: EditAndContinueLogEntry
    fullName: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.MetadataReader
  parent: System.Reflection.Metadata
  isExternal: false
  name: MetadataReader
  nameWithType: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetEditAndContinueMapEntries(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetEditAndContinueMapEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(MetadataReader)
- uid: System.Reflection.Metadata.EntityHandle
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.EntityHandle}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<EntityHandle>
  nameWithType: IEnumerable<EntityHandle>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.EntityHandle>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.EntityHandle
    name: EntityHandle
    nameWithType: EntityHandle
    fullName: System.Reflection.Metadata.EntityHandle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetHeapMetadataOffset(MetadataReader, HeapIndex)
  nameWithType: MetadataReaderExtensions.GetHeapMetadataOffset(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(MetadataReader, HeapIndex)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.Ecma335.HeapIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: HeapIndex
  nameWithType: HeapIndex
  fullName: System.Reflection.Metadata.Ecma335.HeapIndex
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetHeapSize(MetadataReader, HeapIndex)
  nameWithType: MetadataReaderExtensions.GetHeapSize(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(MetadataReader, HeapIndex)
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetNextHandle(MetadataReader, BlobHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, BlobHandle)
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: BlobHandle
  nameWithType: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetNextHandle(MetadataReader, StringHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, StringHandle)
- uid: System.Reflection.Metadata.StringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: StringHandle
  nameWithType: StringHandle
  fullName: System.Reflection.Metadata.StringHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetNextHandle(MetadataReader, UserStringHandle)
  nameWithType: MetadataReaderExtensions.GetNextHandle(MetadataReader, UserStringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(MetadataReader, UserStringHandle)
- uid: System.Reflection.Metadata.UserStringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: UserStringHandle
  nameWithType: UserStringHandle
  fullName: System.Reflection.Metadata.UserStringHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableMetadataOffset(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableMetadataOffset(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(MetadataReader, TableIndex)
- uid: System.Reflection.Metadata.Ecma335.TableIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: TableIndex
  nameWithType: TableIndex
  fullName: System.Reflection.Metadata.Ecma335.TableIndex
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableRowCount(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableRowCount(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(MetadataReader, TableIndex)
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableRowSize(MetadataReader, TableIndex)
  nameWithType: MetadataReaderExtensions.GetTableRowSize(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(MetadataReader, TableIndex)
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTypesWithEvents(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetTypesWithEvents(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(MetadataReader)
- uid: System.Reflection.Metadata.TypeDefinitionHandle
  name: TypeDefinitionHandle
  nameWithType: TypeDefinitionHandle
  fullName: System.Reflection.Metadata.TypeDefinitionHandle
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TypeDefinitionHandle>
  nameWithType: IEnumerable<TypeDefinitionHandle>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.TypeDefinitionHandle>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.TypeDefinitionHandle
    name: TypeDefinitionHandle
    nameWithType: TypeDefinitionHandle
    fullName: System.Reflection.Metadata.TypeDefinitionHandle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTypesWithProperties(MetadataReader)
  nameWithType: MetadataReaderExtensions.GetTypesWithProperties(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(MetadataReader)
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
  nameWithType: MetadataReaderExtensions.ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(MetadataReader, EntityHandle, Byte)
- uid: System.Reflection.Metadata.SignatureTypeKind
  parent: System.Reflection.Metadata
  isExternal: false
  name: SignatureTypeKind
  nameWithType: SignatureTypeKind
  fullName: System.Reflection.Metadata.SignatureTypeKind
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetEditAndContinueLogEntries
  nameWithType: MetadataReaderExtensions.GetEditAndContinueLogEntries
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetEditAndContinueMapEntries
  nameWithType: MetadataReaderExtensions.GetEditAndContinueMapEntries
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetHeapMetadataOffset
  nameWithType: MetadataReaderExtensions.GetHeapMetadataOffset
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetHeapSize
  nameWithType: MetadataReaderExtensions.GetHeapSize
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetNextHandle
  nameWithType: MetadataReaderExtensions.GetNextHandle
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableMetadataOffset
  nameWithType: MetadataReaderExtensions.GetTableMetadataOffset
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableRowCount
  nameWithType: MetadataReaderExtensions.GetTableRowCount
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTableRowSize
  nameWithType: MetadataReaderExtensions.GetTableRowSize
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTypesWithEvents
  nameWithType: MetadataReaderExtensions.GetTypesWithEvents
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: GetTypesWithProperties
  nameWithType: MetadataReaderExtensions.GetTypesWithProperties
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind*
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  isExternal: false
  name: ResolveSignatureTypeKind
  nameWithType: MetadataReaderExtensions.ResolveSignatureTypeKind
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataReaderExtensions.xml
