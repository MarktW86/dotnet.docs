### YamlMime:ManagedReference
items:
- uid: System.Activities.AsyncCodeActivityContext
  commentId: T:System.Activities.AsyncCodeActivityContext
  id: AsyncCodeActivityContext
  children:
  - System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  - System.Activities.AsyncCodeActivityContext.MarkCanceled
  - System.Activities.AsyncCodeActivityContext.UserState
  langs:
  - csharp
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: The execution context for an asynchronous activity.
  remarks: This is a sealed class and is derived from <xref:System.Activities.CodeActivityContext>.
  syntax:
    content: 'public sealed class AsyncCodeActivityContext : System.Activities.CodeActivityContext'
  inheritance:
  - System.Object
  - System.Activities.ActivityContext
  - System.Activities.CodeActivityContext
  implements: []
  inheritedMembers:
  - System.Activities.ActivityContext.ActivityInstanceId
  - System.Activities.ActivityContext.DataContext
  - System.Activities.ActivityContext.GetExtension``1
  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)
  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})
  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})
  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)
  - System.Activities.ActivityContext.WorkflowInstanceId
  - System.Activities.CodeActivityContext.GetProperty``1
  - System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  commentId: P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
  fullName: AsyncCodeActivityContext.IsCancellationRequested
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets a value that indicates whether the currently executing <xref href="System.Activities.AsyncCodeActivity"></xref> is to be canceled.
  syntax:
    content: public bool IsCancellationRequested { get; }
    return:
      type: System.Boolean
      description: '`true` if the currently executing <xref href="System.Activities.AsyncCodeActivity"></xref> is to be canceled; otherwise, `false`.'
  overload: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled
  commentId: M:System.Activities.AsyncCodeActivityContext.MarkCanceled
  id: MarkCanceled
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: MarkCanceled()
  nameWithType: AsyncCodeActivityContext.MarkCanceled()
  fullName: AsyncCodeActivityContext.MarkCanceled()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Marks the current activity instance as canceled.
  syntax:
    content: public void MarkCanceled ();
    parameters: []
  overload: System.Activities.AsyncCodeActivityContext.MarkCanceled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
- uid: System.Activities.AsyncCodeActivityContext.UserState
  commentId: P:System.Activities.AsyncCodeActivityContext.UserState
  id: UserState
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
  fullName: AsyncCodeActivityContext.UserState
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets or sets a user-defined object associated with the current asynchronous activity.
  syntax:
    content: public object UserState { get; set; }
    return:
      type: System.Object
      description: The user-defined object.
  overload: System.Activities.AsyncCodeActivityContext.UserState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
references:
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
  fullName: AsyncCodeActivityContext.IsCancellationRequested
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: MarkCanceled()
  nameWithType: AsyncCodeActivityContext.MarkCanceled()
  fullName: AsyncCodeActivityContext.MarkCanceled()
- uid: System.Activities.AsyncCodeActivityContext.UserState
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
  fullName: AsyncCodeActivityContext.UserState
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
  fullName: AsyncCodeActivityContext.IsCancellationRequested
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: MarkCanceled
  nameWithType: AsyncCodeActivityContext.MarkCanceled
  fullName: AsyncCodeActivityContext.MarkCanceled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
- uid: System.Activities.AsyncCodeActivityContext.UserState*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
  fullName: AsyncCodeActivityContext.UserState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/AsyncCodeActivityContext.xml
