### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.ITypeProvider`1
  commentId: T:System.Reflection.Metadata.ITypeProvider`1
  id: ITypeProvider`1
  children:
  - System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  - System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  - System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)
  langs:
  - csharp
  name: ITypeProvider<TType>
  nameWithType: ITypeProvider<TType>
  fullName: System.Reflection.Metadata.ITypeProvider<TType>
  type: Interface
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public interface ITypeProvider<TType>
    typeParameters:
    - id: TType
      description: To be added.
  derivedClasses:
  - System.Reflection.Metadata.ISignatureTypeProvider`1
  implements: []
  version:
  - netcore-1.1
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  id: GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  langs:
  - csharp
  name: GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetTypeFromDefinition (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeDefinitionHandle handle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition*
  exceptions: []
  version:
  - netcore-1.1
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  id: GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  langs:
  - csharp
  name: GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetTypeFromReference (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeReferenceHandle handle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.TypeReferenceHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference*
  exceptions: []
  version:
  - netcore-1.1
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)
  id: GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  langs:
  - csharp
  name: GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetTypeFromSpecification (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeSpecificationHandle handle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.TypeSpecificationHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification*
  exceptions: []
  version:
  - netcore-1.1
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
references:
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
- uid: TType
  isExternal: true
  name: TType
  nameWithType: TType
  fullName: TType
- uid: System.Reflection.Metadata.MetadataReader
  parent: System.Reflection.Metadata
  isExternal: false
  name: MetadataReader
  nameWithType: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
- uid: System.Reflection.Metadata.TypeDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeDefinitionHandle
  nameWithType: TypeDefinitionHandle
  fullName: System.Reflection.Metadata.TypeDefinitionHandle
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
- uid: System.Reflection.Metadata.TypeReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeReferenceHandle
  nameWithType: TypeReferenceHandle
  fullName: System.Reflection.Metadata.TypeReferenceHandle
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
  nameWithType: ITypeProvider<TType>.GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
  fullName: ITypeProvider<TType>.GetTypeFromSpecification(MetadataReader, TypeSpecificationHandle, Byte)
- uid: System.Reflection.Metadata.TypeSpecificationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeSpecificationHandle
  nameWithType: TypeSpecificationHandle
  fullName: System.Reflection.Metadata.TypeSpecificationHandle
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromDefinition*
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromDefinition
  nameWithType: ITypeProvider<TType>.GetTypeFromDefinition
  fullName: ITypeProvider<TType>.GetTypeFromDefinition
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromReference*
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromReference
  nameWithType: ITypeProvider<TType>.GetTypeFromReference
  fullName: ITypeProvider<TType>.GetTypeFromReference
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
- uid: System.Reflection.Metadata.ITypeProvider`1.GetTypeFromSpecification*
  parent: System.Reflection.Metadata.ITypeProvider`1
  isExternal: false
  name: GetTypeFromSpecification
  nameWithType: ITypeProvider<TType>.GetTypeFromSpecification
  fullName: ITypeProvider<TType>.GetTypeFromSpecification
  monikers:
  - netcore-1.1
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ITypeProvider`1.xml
