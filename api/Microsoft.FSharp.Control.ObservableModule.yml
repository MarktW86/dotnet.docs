### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Control.ObservableModule
  commentId: T:Microsoft.FSharp.Control.ObservableModule
  id: ObservableModule
  children:
  - Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})
  - Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})
  - Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  langs:
  - csharp
  name: ObservableModule
  nameWithType: ObservableModule
  fullName: Microsoft.FSharp.Control.ObservableModule
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      [Microsoft.FSharp.Core.CompilationRepresentation(Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix)]

      [Microsoft.FSharp.Core.RequireQualifiedAccess]

      public static class ObservableModule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompilationRepresentationAttribute
  - type: Microsoft.FSharp.Core.RequireQualifiedAccessAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  id: Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
  nameWithType: ObservableModule.Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
  fullName: ObservableModule.Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("add")]

      public static void Add<T> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit> callback, IObservable<T> source);
    parameters:
    - id: callback
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Add``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})
  id: Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
  nameWithType: ObservableModule.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
  fullName: ObservableModule.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("choose")]

      public static IObservable<TResult> Choose<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpOption<TResult>> chooser, IObservable<T> source);
    parameters:
    - id: chooser
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpOption{TResult}}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult
      description: To be added.
    return:
      type: System.IObservable{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Choose``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  id: Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  nameWithType: ObservableModule.Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  fullName: ObservableModule.Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("filter")]

      public static IObservable<T> Filter<T> (Microsoft.FSharp.Core.FSharpFunc<T,bool> predicate, IObservable<T> source);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.IObservable`1
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Filter``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})
  id: Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
  nameWithType: ObservableModule.Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
  fullName: ObservableModule.Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("map")]

      public static IObservable<TResult> Map<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,TResult> mapping, IObservable<T> source);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult
      description: To be added.
    return:
      type: System.IObservable{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Map``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})
  id: Merge``1(System.IObservable{``0},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Merge<T>(IObservable<T>, IObservable<T>)
  nameWithType: ObservableModule.Merge<T>(IObservable<T>, IObservable<T>)
  fullName: ObservableModule.Merge<T>(IObservable<T>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("merge")]

      public static IObservable<T> Merge<T> (IObservable<T> source1, IObservable<T> source2);
    parameters:
    - id: source1
      type: System.IObservable`1
      description: To be added.
    - id: source2
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.IObservable`1
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Merge``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})
  id: Pairwise``1(System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Pairwise<T>(IObservable<T>)
  nameWithType: ObservableModule.Pairwise<T>(IObservable<T>)
  fullName: ObservableModule.Pairwise<T>(IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("pairwise")]

      public static IObservable<Tuple<T,T>> Pairwise<T> (IObservable<T> source);
    parameters:
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.IObservable{System.Tuple{T,T}}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Pairwise``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  id: Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  nameWithType: ObservableModule.Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  fullName: ObservableModule.Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("partition")]

      public static Tuple<IObservable<T>,IObservable<T>> Partition<T> (Microsoft.FSharp.Core.FSharpFunc<T,bool> predicate, IObservable<T> source);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Tuple{System.IObservable{T},System.IObservable{T}}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Partition``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})
  id: Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
  nameWithType: ObservableModule.Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
  fullName: ObservableModule.Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("scan")]

      public static IObservable<TResult> Scan<TResult,T> (Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<T,TResult>> collector, TResult state, IObservable<T> source);
    parameters:
    - id: collector
      type: Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{T,TResult}}
      description: To be added.
    - id: state
      type: TResult
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: TResult
      description: To be added.
    - id: T
      description: To be added.
    return:
      type: System.IObservable{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Scan``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})
  id: Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
  nameWithType: ObservableModule.Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
  fullName: ObservableModule.Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("split")]

      public static Tuple<IObservable<TResult1>,IObservable<TResult2>> Split<T,TResult1,TResult2> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpChoice<TResult1,TResult2>> splitter, IObservable<T> source);
    parameters:
    - id: splitter
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpChoice{TResult1,TResult2}}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult1
      description: To be added.
    - id: TResult2
      description: To be added.
    return:
      type: System.Tuple{System.IObservable{TResult1},System.IObservable{TResult2}}
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Split``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  commentId: M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  id: Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  langs:
  - csharp
  name: Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
  nameWithType: ObservableModule.Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
  fullName: ObservableModule.Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("subscribe")]

      public static IDisposable Subscribe<T> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit> callback, IObservable<T> source);
    parameters:
    - id: callback
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: source
      type: System.IObservable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.IDisposable
      description: To be added.
  overload: Microsoft.FSharp.Control.ObservableModule.Subscribe``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
  nameWithType: ObservableModule.Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
  fullName: ObservableModule.Add<T>(FSharpFunc<T,Unit>, IObservable<T>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,Unit>
  nameWithType: FSharpFunc<T,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IObservable`1
  parent: System
  isExternal: false
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
- uid: Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
  nameWithType: ObservableModule.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
  fullName: ObservableModule.Choose<T,TResult>(FSharpFunc<T,FSharpOption<TResult>>, IObservable<T>)
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.IObservable{TResult}
  parent: System
  isExternal: false
  name: IObservable<TResult>
  nameWithType: IObservable<TResult>
  fullName: System.IObservable<TResult>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpOption`1
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpOption{TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpOption<TResult>>
  nameWithType: FSharpFunc<T,FSharpOption<TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpOption<TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  nameWithType: ObservableModule.Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  fullName: ObservableModule.Filter<T>(FSharpFunc<T,Boolean>, IObservable<T>)
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,Boolean>
  nameWithType: FSharpFunc<T,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
  nameWithType: ObservableModule.Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
  fullName: ObservableModule.Map<T,TResult>(FSharpFunc<T,TResult>, IObservable<T>)
- uid: Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Merge<T>(IObservable<T>, IObservable<T>)
  nameWithType: ObservableModule.Merge<T>(IObservable<T>, IObservable<T>)
  fullName: ObservableModule.Merge<T>(IObservable<T>, IObservable<T>)
- uid: Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Pairwise<T>(IObservable<T>)
  nameWithType: ObservableModule.Pairwise<T>(IObservable<T>)
  fullName: ObservableModule.Pairwise<T>(IObservable<T>)
- uid: System.Tuple`2
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: System.IObservable{System.Tuple{T,T}}
  parent: System
  isExternal: false
  name: IObservable<Tuple<T,T>>
  nameWithType: IObservable<Tuple<T,T>>
  fullName: System.IObservable<System.Tuple<T,T>>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  nameWithType: ObservableModule.Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
  fullName: ObservableModule.Partition<T>(FSharpFunc<T,Boolean>, IObservable<T>)
- uid: System.Tuple{System.IObservable{T},System.IObservable{T}}
  parent: System
  isExternal: false
  name: Tuple<IObservable<T>,IObservable<T>>
  nameWithType: Tuple<IObservable<T>,IObservable<T>>
  fullName: System.Tuple<System.IObservable<T>,System.IObservable<T>>
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
  nameWithType: ObservableModule.Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
  fullName: ObservableModule.Scan<TResult,T>(FSharpFunc<TResult,FSharpFunc<T,TResult>>, TResult, IObservable<T>)
- uid: Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{T,TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<TResult,FSharpFunc<T,TResult>>
  nameWithType: FSharpFunc<TResult,FSharpFunc<T,TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<T,TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
  nameWithType: ObservableModule.Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
  fullName: ObservableModule.Split<T,TResult1,TResult2>(FSharpFunc<T,FSharpChoice<TResult1,TResult2>>, IObservable<T>)
- uid: TResult1
  name: TResult1
  nameWithType: TResult1
  fullName: TResult1
- uid: TResult2
  name: TResult2
  nameWithType: TResult2
  fullName: TResult2
- uid: System.Tuple{System.IObservable{TResult1},System.IObservable{TResult2}}
  parent: System
  isExternal: false
  name: Tuple<IObservable<TResult1>,IObservable<TResult2>>
  nameWithType: Tuple<IObservable<TResult1>,IObservable<TResult2>>
  fullName: System.Tuple<System.IObservable<TResult1>,System.IObservable<TResult2>>
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult1
    name: TResult1
    nameWithType: TResult1
    fullName: TResult1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult2
    name: TResult2
    nameWithType: TResult2
    fullName: TResult2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpChoice`2
  name: FSharpChoice<T1,T2>
  nameWithType: FSharpChoice<T1,T2>
  fullName: Microsoft.FSharp.Core.FSharpChoice<T1,T2>
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpChoice{TResult1,TResult2}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpChoice<TResult1,TResult2>>
  nameWithType: FSharpFunc<T,FSharpChoice<TResult1,TResult2>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpChoice<TResult1,TResult2>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpChoice`2
    name: FSharpChoice
    nameWithType: FSharpChoice
    fullName: Microsoft.FSharp.Core.FSharpChoice
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult1
    name: TResult1
    nameWithType: TResult1
    fullName: TResult1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult2
    name: TResult2
    nameWithType: TResult2
    fullName: TResult2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
  nameWithType: ObservableModule.Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
  fullName: ObservableModule.Subscribe<T>(FSharpFunc<T,Unit>, IObservable<T>)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.FSharp.Control.ObservableModule.Add``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Add<T>
  nameWithType: ObservableModule.Add<T>
  fullName: ObservableModule.Add<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Choose``2*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Choose<T,TResult>
  nameWithType: ObservableModule.Choose<T,TResult>
  fullName: ObservableModule.Choose<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Filter``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Filter<T>
  nameWithType: ObservableModule.Filter<T>
  fullName: ObservableModule.Filter<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Map``2*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Map<T,TResult>
  nameWithType: ObservableModule.Map<T,TResult>
  fullName: ObservableModule.Map<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Merge``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Merge<T>
  nameWithType: ObservableModule.Merge<T>
  fullName: ObservableModule.Merge<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Pairwise``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Pairwise<T>
  nameWithType: ObservableModule.Pairwise<T>
  fullName: ObservableModule.Pairwise<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Partition``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Partition<T>
  nameWithType: ObservableModule.Partition<T>
  fullName: ObservableModule.Partition<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Scan``2*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Scan<TResult,T>
  nameWithType: ObservableModule.Scan<TResult,T>
  fullName: ObservableModule.Scan<TResult,T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Split``3*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Split<T,TResult1,TResult2>
  nameWithType: ObservableModule.Split<T,TResult1,TResult2>
  fullName: ObservableModule.Split<T,TResult1,TResult2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
- uid: Microsoft.FSharp.Control.ObservableModule.Subscribe``1*
  parent: Microsoft.FSharp.Control.ObservableModule
  isExternal: false
  name: Subscribe<T>
  nameWithType: ObservableModule.Subscribe<T>
  fullName: ObservableModule.Subscribe<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/ObservableModule.xml
