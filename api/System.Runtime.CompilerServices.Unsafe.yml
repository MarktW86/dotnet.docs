### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.Unsafe
  commentId: T:System.Runtime.CompilerServices.Unsafe
  id: Unsafe
  children:
  - System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)
  - System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)
  - System.Runtime.CompilerServices.Unsafe.As``1(System.Object)
  - System.Runtime.CompilerServices.Unsafe.As``2(``0@)
  - System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)
  - System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)
  - System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)
  - System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)
  - System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)
  - System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)
  - System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)
  - System.Runtime.CompilerServices.Unsafe.SizeOf``1
  - System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)
  - System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)
  langs:
  - csharp
  name: Unsafe
  nameWithType: Unsafe
  fullName: System.Runtime.CompilerServices.Unsafe
  type: Class
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static class Unsafe
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)
  id: Add``1(``0@,System.Int32)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Add<T>(T, Int32)
  nameWithType: Unsafe.Add<T>(T, Int32)
  fullName: System.Runtime.CompilerServices.Unsafe.Add<T>(T, Int32)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static T Add<T> (ref T source, int elementOffset);
    parameters:
    - id: source
      type: T
      description: To be added.
    - id: elementOffset
      type: System.Int32
      description: To be added.
    return:
      type: T@
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Add``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)
  commentId: M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)
  id: AreSame``1(``0@,``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: AreSame<T>(T, T)
  nameWithType: Unsafe.AreSame<T>(T, T)
  fullName: System.Runtime.CompilerServices.Unsafe.AreSame<T>(T, T)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static bool AreSame<T> (ref T left, ref T right);
    parameters:
    - id: left
      type: T
      description: To be added.
    - id: right
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.AreSame``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.As``1(System.Object)
  commentId: M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)
  id: As``1(System.Object)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: As<T>(Object)
  nameWithType: Unsafe.As<T>(Object)
  fullName: System.Runtime.CompilerServices.Unsafe.As<T>(Object)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: 'public static T As<T> (object o) where T : class;'
    parameters:
    - id: o
      type: System.Object
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.As``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.As``2(``0@)
  commentId: M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)
  id: As``2(``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: As<TFrom,TTo>(TFrom)
  nameWithType: Unsafe.As<TFrom,TTo>(TFrom)
  fullName: System.Runtime.CompilerServices.Unsafe.As<TFrom,TTo>(TFrom)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static TTo As<TFrom,TTo> (ref TFrom source);
    parameters:
    - id: source
      type: TFrom
      description: To be added.
    return:
      type: TTo@
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.As``2*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)
  commentId: M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)
  id: AsPointer``1(``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: AsPointer<T>(T)
  nameWithType: Unsafe.AsPointer<T>(T)
  fullName: System.Runtime.CompilerServices.Unsafe.AsPointer<T>(T)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void* AsPointer<T> (ref T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Void*
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.AsPointer``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)
  commentId: M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)
  id: AsRef``1(System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: AsRef<T>(Void*)
  nameWithType: Unsafe.AsRef<T>(Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.AsRef<T>(Void*)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static T AsRef<T> (void* source);
    parameters:
    - id: source
      type: System.Void*
      description: To be added.
    return:
      type: T@
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.AsRef``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)
  id: Copy``1(System.Void*,``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Copy<T>(Void*, T)
  nameWithType: Unsafe.Copy<T>(Void*, T)
  fullName: System.Runtime.CompilerServices.Unsafe.Copy<T>(Void*, T)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void Copy<T> (void* destination, ref T source);
    parameters:
    - id: destination
      type: System.Void*
      description: To be added.
    - id: source
      type: T
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Copy``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)
  id: Copy``1(``0@,System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Copy<T>(T, Void*)
  nameWithType: Unsafe.Copy<T>(T, Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.Copy<T>(T, Void*)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void Copy<T> (ref T destination, void* source);
    parameters:
    - id: destination
      type: T
      description: To be added.
    - id: source
      type: System.Void*
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Copy``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)
  commentId: M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)
  id: CopyBlock(System.Void*,System.Void*,System.UInt32)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: CopyBlock(Void*, Void*, UInt32)
  nameWithType: Unsafe.CopyBlock(Void*, Void*, UInt32)
  fullName: System.Runtime.CompilerServices.Unsafe.CopyBlock(Void*, Void*, UInt32)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void CopyBlock (void* destination, void* source, uint byteCount);
    parameters:
    - id: destination
      type: System.Void*
      description: To be added.
    - id: source
      type: System.Void*
      description: To be added.
    - id: byteCount
      type: System.UInt32
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.CopyBlock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)
  commentId: M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)
  id: InitBlock(System.Void*,System.Byte,System.UInt32)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: InitBlock(Void*, Byte, UInt32)
  nameWithType: Unsafe.InitBlock(Void*, Byte, UInt32)
  fullName: System.Runtime.CompilerServices.Unsafe.InitBlock(Void*, Byte, UInt32)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void InitBlock (void* startAddress, byte value, uint byteCount);
    parameters:
    - id: startAddress
      type: System.Void*
      description: To be added.
    - id: value
      type: System.Byte
      description: To be added.
    - id: byteCount
      type: System.UInt32
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.InitBlock*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)
  id: Read``1(System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Read<T>(Void*)
  nameWithType: Unsafe.Read<T>(Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.Read<T>(Void*)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static T Read<T> (void* source);
    parameters:
    - id: source
      type: System.Void*
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Read``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.SizeOf``1
  commentId: M:System.Runtime.CompilerServices.Unsafe.SizeOf``1
  id: SizeOf``1
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: SizeOf<T>()
  nameWithType: Unsafe.SizeOf<T>()
  fullName: System.Runtime.CompilerServices.Unsafe.SizeOf<T>()
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static int SizeOf<T> ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.SizeOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)
  id: Subtract``1(``0@,System.Int32)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Subtract<T>(T, Int32)
  nameWithType: Unsafe.Subtract<T>(T, Int32)
  fullName: System.Runtime.CompilerServices.Unsafe.Subtract<T>(T, Int32)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static T Subtract<T> (ref T source, int elementOffset);
    parameters:
    - id: source
      type: T
      description: To be added.
    - id: elementOffset
      type: System.Int32
      description: To be added.
    return:
      type: T@
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Subtract``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)
  commentId: M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)
  id: Write``1(System.Void*,``0)
  parent: System.Runtime.CompilerServices.Unsafe
  langs:
  - csharp
  name: Write<T>(Void*, T)
  nameWithType: Unsafe.Write<T>(Void*, T)
  fullName: System.Runtime.CompilerServices.Unsafe.Write<T>(Void*, T)
  type: Method
  assemblies:
  - System.Runtime.CompilerServices.Unsafe
  namespace: System.Runtime.CompilerServices
  syntax:
    content: public static void Write<T> (void* destination, T value);
    parameters:
    - id: destination
      type: System.Void*
      description: To be added.
    - id: value
      type: T
      description: To be added.
  overload: System.Runtime.CompilerServices.Unsafe.Write``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Add<T>(T, Int32)
  nameWithType: Unsafe.Add<T>(T, Int32)
  fullName: System.Runtime.CompilerServices.Unsafe.Add<T>(T, Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AreSame<T>(T, T)
  nameWithType: Unsafe.AreSame<T>(T, T)
  fullName: System.Runtime.CompilerServices.Unsafe.AreSame<T>(T, T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.CompilerServices.Unsafe.As``1(System.Object)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: As<T>(Object)
  nameWithType: Unsafe.As<T>(Object)
  fullName: System.Runtime.CompilerServices.Unsafe.As<T>(Object)
- uid: System.Runtime.CompilerServices.Unsafe.As``2(``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: As<TFrom,TTo>(TFrom)
  nameWithType: Unsafe.As<TFrom,TTo>(TFrom)
  fullName: System.Runtime.CompilerServices.Unsafe.As<TFrom,TTo>(TFrom)
- uid: TFrom
  isExternal: true
  name: TFrom
  nameWithType: TFrom
  fullName: TFrom
- uid: System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AsPointer<T>(T)
  nameWithType: Unsafe.AsPointer<T>(T)
  fullName: System.Runtime.CompilerServices.Unsafe.AsPointer<T>(T)
- uid: System.Void
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Void*
  parent: System
  isExternal: false
  name: Void*
  nameWithType: Void*
  fullName: System.Void*
  spec.csharp:
  - uid: System.Void
    name: Void
    nameWithType: Void
    fullName: System.Void
  - name: '*'
    nameWithType: '*'
    fullName: '*'
- uid: System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AsRef<T>(Void*)
  nameWithType: Unsafe.AsRef<T>(Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.AsRef<T>(Void*)
- uid: System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Copy<T>(Void*, T)
  nameWithType: Unsafe.Copy<T>(Void*, T)
  fullName: System.Runtime.CompilerServices.Unsafe.Copy<T>(Void*, T)
- uid: System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Copy<T>(T, Void*)
  nameWithType: Unsafe.Copy<T>(T, Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.Copy<T>(T, Void*)
- uid: System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: CopyBlock(Void*, Void*, UInt32)
  nameWithType: Unsafe.CopyBlock(Void*, Void*, UInt32)
  fullName: System.Runtime.CompilerServices.Unsafe.CopyBlock(Void*, Void*, UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: InitBlock(Void*, Byte, UInt32)
  nameWithType: Unsafe.InitBlock(Void*, Byte, UInt32)
  fullName: System.Runtime.CompilerServices.Unsafe.InitBlock(Void*, Byte, UInt32)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Read<T>(Void*)
  nameWithType: Unsafe.Read<T>(Void*)
  fullName: System.Runtime.CompilerServices.Unsafe.Read<T>(Void*)
- uid: System.Runtime.CompilerServices.Unsafe.SizeOf``1
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: SizeOf<T>()
  nameWithType: Unsafe.SizeOf<T>()
  fullName: System.Runtime.CompilerServices.Unsafe.SizeOf<T>()
- uid: System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Subtract<T>(T, Int32)
  nameWithType: Unsafe.Subtract<T>(T, Int32)
  fullName: System.Runtime.CompilerServices.Unsafe.Subtract<T>(T, Int32)
- uid: System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Write<T>(Void*, T)
  nameWithType: Unsafe.Write<T>(Void*, T)
  fullName: System.Runtime.CompilerServices.Unsafe.Write<T>(Void*, T)
- uid: System.Runtime.CompilerServices.Unsafe.Add``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Add<T>
  nameWithType: Unsafe.Add<T>
  fullName: System.Runtime.CompilerServices.Unsafe.Add<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AreSame``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AreSame<T>
  nameWithType: Unsafe.AreSame<T>
  fullName: System.Runtime.CompilerServices.Unsafe.AreSame<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.As``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: As<T>
  nameWithType: Unsafe.As<T>
  fullName: System.Runtime.CompilerServices.Unsafe.As<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.As``2*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: As<TFrom,TTo>
  nameWithType: Unsafe.As<TFrom,TTo>
  fullName: System.Runtime.CompilerServices.Unsafe.As<TFrom,TTo>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AsPointer``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AsPointer<T>
  nameWithType: Unsafe.AsPointer<T>
  fullName: System.Runtime.CompilerServices.Unsafe.AsPointer<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.AsRef``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: AsRef<T>
  nameWithType: Unsafe.AsRef<T>
  fullName: System.Runtime.CompilerServices.Unsafe.AsRef<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Copy``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Copy<T>
  nameWithType: Unsafe.Copy<T>
  fullName: System.Runtime.CompilerServices.Unsafe.Copy<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.CopyBlock*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: CopyBlock
  nameWithType: Unsafe.CopyBlock
  fullName: System.Runtime.CompilerServices.Unsafe.CopyBlock
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.InitBlock*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: InitBlock
  nameWithType: Unsafe.InitBlock
  fullName: System.Runtime.CompilerServices.Unsafe.InitBlock
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Read``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Read<T>
  nameWithType: Unsafe.Read<T>
  fullName: System.Runtime.CompilerServices.Unsafe.Read<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.SizeOf``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: SizeOf<T>
  nameWithType: Unsafe.SizeOf<T>
  fullName: System.Runtime.CompilerServices.Unsafe.SizeOf<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Subtract``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Subtract<T>
  nameWithType: Unsafe.Subtract<T>
  fullName: System.Runtime.CompilerServices.Unsafe.Subtract<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
- uid: System.Runtime.CompilerServices.Unsafe.Write``1*
  parent: System.Runtime.CompilerServices.Unsafe
  isExternal: false
  name: Write<T>
  nameWithType: Unsafe.Write<T>
  fullName: System.Runtime.CompilerServices.Unsafe.Write<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.CompilerServices/Unsafe.xml
