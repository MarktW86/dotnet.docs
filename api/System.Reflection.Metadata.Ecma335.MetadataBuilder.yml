### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder
  commentId: T:System.Reflection.Metadata.Ecma335.MetadataBuilder
  id: MetadataBuilder
  children:
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)
  - System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)
  langs:
  - csharp
  name: MetadataBuilder
  nameWithType: MetadataBuilder
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder
  type: Class
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public sealed class MetadataBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: MetadataBuilder(Int32, Int32, Int32, Int32)
  nameWithType: MetadataBuilder.MetadataBuilder(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.MetadataBuilder(Int32, Int32, Int32, Int32)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public MetadataBuilder (int userStringHeapStartOffset = 0, int stringHeapStartOffset = 0, int blobHeapStartOffset = 0, int guidHeapStartOffset = 0);
    parameters:
    - id: userStringHeapStartOffset
      type: System.Int32
      description: To be added.
    - id: stringHeapStartOffset
      type: System.Int32
      description: To be added.
    - id: blobHeapStartOffset
      type: System.Int32
      description: To be added.
    - id: guidHeapStartOffset
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)
  id: AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
  nameWithType: MetadataBuilder.AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKey, System.Reflection.AssemblyFlags flags, System.Reflection.AssemblyHashAlgorithm hashAlgorithm);
    parameters:
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: version
      type: System.Version
      description: To be added.
    - id: culture
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: publicKey
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: flags
      type: System.Reflection.AssemblyFlags
      description: To be added.
    - id: hashAlgorithm
      type: System.Reflection.AssemblyHashAlgorithm
      description: To be added.
    return:
      type: System.Reflection.Metadata.AssemblyDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)
  id: AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddAssemblyFile(StringHandle, BlobHandle, Boolean)
  nameWithType: MetadataBuilder.AddAssemblyFile(StringHandle, BlobHandle, Boolean)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(StringHandle, BlobHandle, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata);
    parameters:
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: hashValue
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: containsMetadata
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.Metadata.AssemblyFileHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)
  id: AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
  nameWithType: MetadataBuilder.AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKeyOrToken, System.Reflection.AssemblyFlags flags, System.Reflection.Metadata.BlobHandle hashValue);
    parameters:
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: version
      type: System.Version
      description: To be added.
    - id: culture
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: publicKeyOrToken
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: flags
      type: System.Reflection.AssemblyFlags
      description: To be added.
    - id: hashValue
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.AssemblyReferenceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)
  id: AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddConstant(EntityHandle, Object)
  nameWithType: MetadataBuilder.AddConstant(EntityHandle, Object)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(EntityHandle, Object)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ConstantHandle AddConstant (System.Reflection.Metadata.EntityHandle parent, object value);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Reflection.Metadata.ConstantHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  id: AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.EntityHandle constructor, System.Reflection.Metadata.BlobHandle value);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: constructor
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: value
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.CustomAttributeHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)
  id: AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.GuidHandle kind, System.Reflection.Metadata.BlobHandle value);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: kind
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    - id: value
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.CustomDebugInformationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)
  id: AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
  nameWithType: MetadataBuilder.AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.DeclarativeSecurityAction action, System.Reflection.Metadata.BlobHandle permissionSet);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: action
      type: System.Reflection.DeclarativeSecurityAction
      description: To be added.
    - id: permissionSet
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.DeclarativeSecurityAttributeHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)
  id: AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
  nameWithType: MetadataBuilder.AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.DocumentHandle AddDocument (System.Reflection.Metadata.BlobHandle name, System.Reflection.Metadata.GuidHandle hashAlgorithm, System.Reflection.Metadata.BlobHandle hash, System.Reflection.Metadata.GuidHandle language);
    parameters:
    - id: name
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: hashAlgorithm
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    - id: hash
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: language
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.DocumentHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)
  id: AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddEncLogEntry(EntityHandle, EditAndContinueOperation)
  nameWithType: MetadataBuilder.AddEncLogEntry(EntityHandle, EditAndContinueOperation)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(EntityHandle, EditAndContinueOperation)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddEncLogEntry (System.Reflection.Metadata.EntityHandle entity, System.Reflection.Metadata.Ecma335.EditAndContinueOperation code);
    parameters:
    - id: entity
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: code
      type: System.Reflection.Metadata.Ecma335.EditAndContinueOperation
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)
  id: AddEncMapEntry(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddEncMapEntry(EntityHandle)
  nameWithType: MetadataBuilder.AddEncMapEntry(EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddEncMapEntry (System.Reflection.Metadata.EntityHandle entity);
    parameters:
    - id: entity
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)
  id: AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddEvent(EventAttributes, StringHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddEvent(EventAttributes, StringHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(EventAttributes, StringHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.EventDefinitionHandle AddEvent (System.Reflection.EventAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle type);
    parameters:
    - id: attributes
      type: System.Reflection.EventAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: type
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.EventDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)
  id: AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
  nameWithType: MetadataBuilder.AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddEventMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.EventDefinitionHandle eventList);
    parameters:
    - id: declaringType
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: eventList
      type: System.Reflection.Metadata.EventDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)
  id: AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
  nameWithType: MetadataBuilder.AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ExportedTypeHandle AddExportedType (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, int typeDefinitionId);
    parameters:
    - id: attributes
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: namespace
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: implementation
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: typeDefinitionId
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.ExportedTypeHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  id: AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition (System.Reflection.FieldAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.FieldDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  id: AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddFieldLayout(FieldDefinitionHandle, Int32)
  nameWithType: MetadataBuilder.AddFieldLayout(FieldDefinitionHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(FieldDefinitionHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddFieldLayout (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);
    parameters:
    - id: field
      type: System.Reflection.Metadata.FieldDefinitionHandle
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  id: AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
  nameWithType: MetadataBuilder.AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddFieldRelativeVirtualAddress (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);
    parameters:
    - id: field
      type: System.Reflection.Metadata.FieldDefinitionHandle
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  id: AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
  nameWithType: MetadataBuilder.AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.GenericParameterHandle AddGenericParameter (System.Reflection.Metadata.EntityHandle parent, System.Reflection.GenericParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int index);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: attributes
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.GenericParameterHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)
  id: AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint (System.Reflection.Metadata.GenericParameterHandle genericParameter, System.Reflection.Metadata.EntityHandle constraint);
    parameters:
    - id: genericParameter
      type: System.Reflection.Metadata.GenericParameterHandle
      description: To be added.
    - id: constraint
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.GenericParameterConstraintHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)
  id: AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddImportScope(ImportScopeHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddImportScope(ImportScopeHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(ImportScopeHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ImportScopeHandle AddImportScope (System.Reflection.Metadata.ImportScopeHandle parentScope, System.Reflection.Metadata.BlobHandle imports);
    parameters:
    - id: parentScope
      type: System.Reflection.Metadata.ImportScopeHandle
      description: To be added.
    - id: imports
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.ImportScopeHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)
  id: AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle implementedInterface);
    parameters:
    - id: type
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: implementedInterface
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.InterfaceImplementationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  id: AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddLocalConstant(StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddLocalConstant(StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(StringHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.LocalConstantHandle AddLocalConstant (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.LocalConstantHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)
  id: AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
  nameWithType: MetadataBuilder.AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.LocalScopeHandle AddLocalScope (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.Metadata.ImportScopeHandle importScope, System.Reflection.Metadata.LocalVariableHandle variableList, System.Reflection.Metadata.LocalConstantHandle constantList, int startOffset, int length);
    parameters:
    - id: method
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
    - id: importScope
      type: System.Reflection.Metadata.ImportScopeHandle
      description: To be added.
    - id: variableList
      type: System.Reflection.Metadata.LocalVariableHandle
      description: To be added.
    - id: constantList
      type: System.Reflection.Metadata.LocalConstantHandle
      description: To be added.
    - id: startOffset
      type: System.Int32
      description: To be added.
    - id: length
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.LocalScopeHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)
  id: AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
  nameWithType: MetadataBuilder.AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.LocalVariableHandle AddLocalVariable (System.Reflection.Metadata.LocalVariableAttributes attributes, int index, System.Reflection.Metadata.StringHandle name);
    parameters:
    - id: attributes
      type: System.Reflection.Metadata.LocalVariableAttributes
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.LocalVariableHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)
  id: AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
  nameWithType: MetadataBuilder.AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ManifestResourceHandle AddManifestResource (System.Reflection.ManifestResourceAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, uint offset);
    parameters:
    - id: attributes
      type: System.Reflection.ManifestResourceAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: implementation
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: offset
      type: System.UInt32
      description: To be added.
    return:
      type: System.Reflection.Metadata.ManifestResourceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  id: AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMarshallingDescriptor(EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMarshallingDescriptor(EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(EntityHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddMarshallingDescriptor (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.BlobHandle descriptor);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: descriptor
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  id: AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMemberReference(EntityHandle, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMemberReference(EntityHandle, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(EntityHandle, StringHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.MemberReferenceHandle AddMemberReference (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: parent
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.MemberReferenceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)
  id: AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodDebugInformation(DocumentHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMethodDebugInformation(DocumentHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(DocumentHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation (System.Reflection.Metadata.DocumentHandle document, System.Reflection.Metadata.BlobHandle sequencePoints);
    parameters:
    - id: document
      type: System.Reflection.Metadata.DocumentHandle
      description: To be added.
    - id: sequencePoints
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.MethodDebugInformationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)
  id: AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
  nameWithType: MetadataBuilder.AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition (System.Reflection.MethodAttributes attributes, System.Reflection.MethodImplAttributes implAttributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature, int bodyOffset, System.Reflection.Metadata.ParameterHandle parameterList);
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: implAttributes
      type: System.Reflection.MethodImplAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    - id: bodyOffset
      type: System.Int32
      description: To be added.
    - id: parameterList
      type: System.Reflection.Metadata.ParameterHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle methodBody, System.Reflection.Metadata.EntityHandle methodDeclaration);
    parameters:
    - id: type
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: methodBody
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: methodDeclaration
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.MethodImplementationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)
  id: AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
  nameWithType: MetadataBuilder.AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddMethodImport (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.MethodImportAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.ModuleReferenceHandle module);
    parameters:
    - id: method
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodImportAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: module
      type: System.Reflection.Metadata.ModuleReferenceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)
  id: AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddMethodSemantics (System.Reflection.Metadata.EntityHandle association, System.Reflection.MethodSemanticsAttributes semantics, System.Reflection.Metadata.MethodDefinitionHandle methodDefinition);
    parameters:
    - id: association
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: semantics
      type: System.Reflection.MethodSemanticsAttributes
      description: To be added.
    - id: methodDefinition
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  id: AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddMethodSpecification(EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMethodSpecification(EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(EntityHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification (System.Reflection.Metadata.EntityHandle method, System.Reflection.Metadata.BlobHandle instantiation);
    parameters:
    - id: method
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: instantiation
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.MethodSpecificationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)
  id: AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
  nameWithType: MetadataBuilder.AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ModuleDefinitionHandle AddModule (int generation, System.Reflection.Metadata.StringHandle moduleName, System.Reflection.Metadata.GuidHandle mvid, System.Reflection.Metadata.GuidHandle encId, System.Reflection.Metadata.GuidHandle encBaseId);
    parameters:
    - id: generation
      type: System.Int32
      description: To be added.
    - id: moduleName
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: mvid
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    - id: encId
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    - id: encBaseId
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.ModuleDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)
  id: AddModuleReference(System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddModuleReference(StringHandle)
  nameWithType: MetadataBuilder.AddModuleReference(StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(StringHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference (System.Reflection.Metadata.StringHandle moduleName);
    parameters:
    - id: moduleName
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.ModuleReferenceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)
  id: AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
  nameWithType: MetadataBuilder.AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddNestedType (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.TypeDefinitionHandle enclosingType);
    parameters:
    - id: type
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: enclosingType
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  id: AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddParameter(ParameterAttributes, StringHandle, Int32)
  nameWithType: MetadataBuilder.AddParameter(ParameterAttributes, StringHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(ParameterAttributes, StringHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ParameterHandle AddParameter (System.Reflection.ParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int sequenceNumber);
    parameters:
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: sequenceNumber
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.ParameterHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  id: AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddProperty(PropertyAttributes, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddProperty(PropertyAttributes, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(PropertyAttributes, StringHandle, BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.PropertyDefinitionHandle AddProperty (System.Reflection.PropertyAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: attributes
      type: System.Reflection.PropertyAttributes
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.PropertyDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)
  id: AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
  nameWithType: MetadataBuilder.AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddPropertyMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.PropertyDefinitionHandle propertyList);
    parameters:
    - id: declaringType
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: propertyList
      type: System.Reflection.Metadata.PropertyDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)
  id: AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddStandaloneSignature(BlobHandle)
  nameWithType: MetadataBuilder.AddStandaloneSignature(BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature (System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.StandaloneSignatureHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  id: AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddStateMachineMethod (System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod);
    parameters:
    - id: moveNextMethod
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
    - id: kickoffMethod
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  id: AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle baseType, System.Reflection.Metadata.FieldDefinitionHandle fieldList, System.Reflection.Metadata.MethodDefinitionHandle methodList);
    parameters:
    - id: attributes
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: namespace
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: baseType
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: fieldList
      type: System.Reflection.Metadata.FieldDefinitionHandle
      description: To be added.
    - id: methodList
      type: System.Reflection.Metadata.MethodDefinitionHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)
  id: AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
  nameWithType: MetadataBuilder.AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void AddTypeLayout (System.Reflection.Metadata.TypeDefinitionHandle type, ushort packingSize, uint size);
    parameters:
    - id: type
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: packingSize
      type: System.UInt16
      description: To be added.
    - id: size
      type: System.UInt32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)
  id: AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddTypeReference(EntityHandle, StringHandle, StringHandle)
  nameWithType: MetadataBuilder.AddTypeReference(EntityHandle, StringHandle, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(EntityHandle, StringHandle, StringHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.TypeReferenceHandle AddTypeReference (System.Reflection.Metadata.EntityHandle resolutionScope, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name);
    parameters:
    - id: resolutionScope
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: namespace
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    - id: name
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.TypeReferenceHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)
  id: AddTypeSpecification(System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: AddTypeSpecification(BlobHandle)
  nameWithType: MetadataBuilder.AddTypeSpecification(BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(BlobHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification (System.Reflection.Metadata.BlobHandle signature);
    parameters:
    - id: signature
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.TypeSpecificationHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)
  id: GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddBlob(BlobBuilder)
  nameWithType: MetadataBuilder.GetOrAddBlob(BlobBuilder)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(BlobBuilder)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Reflection.Metadata.BlobBuilder value);
    parameters:
    - id: value
      type: System.Reflection.Metadata.BlobBuilder
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])
  id: GetOrAddBlob(System.Byte[])
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddBlob(Byte[])
  nameWithType: MetadataBuilder.GetOrAddBlob(Byte[])
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(Byte[])
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddBlob (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})
  id: GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddBlob(ImmutableArray<Byte>)
  nameWithType: MetadataBuilder.GetOrAddBlob(ImmutableArray<Byte>)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(ImmutableArray<Byte>)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Collections.Immutable.ImmutableArray<byte> value);
    parameters:
    - id: value
      type: System.Collections.Immutable.ImmutableArray{System.Byte}
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)
  id: GetOrAddBlobUTF16(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddBlobUTF16(String)
  nameWithType: MetadataBuilder.GetOrAddBlobUTF16(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(String)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16 (string value);
    parameters:
    - id: value
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)
  id: GetOrAddBlobUTF8(System.String,System.Boolean)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddBlobUTF8(String, Boolean)
  nameWithType: MetadataBuilder.GetOrAddBlobUTF8(String, Boolean)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(String, Boolean)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8 (string value, bool allowUnpairedSurrogates = true);
    parameters:
    - id: value
      type: System.String
      description: To be added.
    - id: allowUnpairedSurrogates
      type: System.Boolean
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)
  id: GetOrAddConstantBlob(System.Object)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddConstantBlob(Object)
  nameWithType: MetadataBuilder.GetOrAddConstantBlob(Object)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(Object)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)
  id: GetOrAddDocumentName(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddDocumentName(String)
  nameWithType: MetadataBuilder.GetOrAddDocumentName(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(String)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobHandle GetOrAddDocumentName (string value);
    parameters:
    - id: value
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Metadata.BlobHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)
  id: GetOrAddGuid(System.Guid)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddGuid(Guid)
  nameWithType: MetadataBuilder.GetOrAddGuid(Guid)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(Guid)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.GuidHandle GetOrAddGuid (Guid guid);
    parameters:
    - id: guid
      type: System.Guid
      description: To be added.
    return:
      type: System.Reflection.Metadata.GuidHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)
  id: GetOrAddString(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddString(String)
  nameWithType: MetadataBuilder.GetOrAddString(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(String)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.StringHandle GetOrAddString (string value);
    parameters:
    - id: value
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Metadata.StringHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)
  id: GetOrAddUserString(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetOrAddUserString(String)
  nameWithType: MetadataBuilder.GetOrAddUserString(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(String)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.UserStringHandle GetOrAddUserString (string value);
    parameters:
    - id: value
      type: System.String
      description: To be added.
    return:
      type: System.Reflection.Metadata.UserStringHandle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetRowCount(TableIndex)
  nameWithType: MetadataBuilder.GetRowCount(TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(TableIndex)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public int GetRowCount (System.Reflection.Metadata.Ecma335.TableIndex table);
    parameters:
    - id: table
      type: System.Reflection.Metadata.Ecma335.TableIndex
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts
  id: GetRowCounts
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: GetRowCounts()
  nameWithType: MetadataBuilder.GetRowCounts()
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Collections.Immutable.ImmutableArray<int> GetRowCounts ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.Int32}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid
  id: ReserveGuid
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: ReserveGuid()
  nameWithType: MetadataBuilder.ReserveGuid()
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ReservedBlob<System.Reflection.Metadata.GuidHandle> ReserveGuid ();
    parameters: []
    return:
      type: System.Reflection.Metadata.ReservedBlob{System.Reflection.Metadata.GuidHandle}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)
  id: ReserveUserString(System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: ReserveUserString(Int32)
  nameWithType: MetadataBuilder.ReserveUserString(Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.ReservedBlob<System.Reflection.Metadata.UserStringHandle> ReserveUserString (int length);
    parameters:
    - id: length
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.ReservedBlob{System.Reflection.Metadata.UserStringHandle}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)
  id: SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: SetCapacity(HeapIndex, Int32)
  nameWithType: MetadataBuilder.SetCapacity(HeapIndex, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(HeapIndex, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void SetCapacity (System.Reflection.Metadata.Ecma335.HeapIndex heap, int byteCount);
    parameters:
    - id: heap
      type: System.Reflection.Metadata.Ecma335.HeapIndex
      description: To be added.
    - id: byteCount
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)
  id: SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  langs:
  - csharp
  name: SetCapacity(TableIndex, Int32)
  nameWithType: MetadataBuilder.SetCapacity(TableIndex, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(TableIndex, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public void SetCapacity (System.Reflection.Metadata.Ecma335.TableIndex table, int rowCount);
    parameters:
    - id: table
      type: System.Reflection.Metadata.Ecma335.TableIndex
      description: To be added.
    - id: rowCount
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: MetadataBuilder(Int32, Int32, Int32, Int32)
  nameWithType: MetadataBuilder.MetadataBuilder(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.MetadataBuilder(Int32, Int32, Int32, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
  nameWithType: MetadataBuilder.AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, AssemblyHashAlgorithm)
- uid: System.Reflection.Metadata.AssemblyDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: AssemblyDefinitionHandle
  nameWithType: AssemblyDefinitionHandle
  fullName: System.Reflection.Metadata.AssemblyDefinitionHandle
- uid: System.Reflection.Metadata.StringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: StringHandle
  nameWithType: StringHandle
  fullName: System.Reflection.Metadata.StringHandle
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: BlobHandle
  nameWithType: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
- uid: System.Reflection.AssemblyFlags
  parent: System.Reflection
  isExternal: false
  name: AssemblyFlags
  nameWithType: AssemblyFlags
  fullName: System.Reflection.AssemblyFlags
- uid: System.Reflection.AssemblyHashAlgorithm
  parent: System.Reflection
  isExternal: false
  name: AssemblyHashAlgorithm
  nameWithType: AssemblyHashAlgorithm
  fullName: System.Reflection.AssemblyHashAlgorithm
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssemblyFile(StringHandle, BlobHandle, Boolean)
  nameWithType: MetadataBuilder.AddAssemblyFile(StringHandle, BlobHandle, Boolean)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(StringHandle, BlobHandle, Boolean)
- uid: System.Reflection.Metadata.AssemblyFileHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: AssemblyFileHandle
  nameWithType: AssemblyFileHandle
  fullName: System.Reflection.Metadata.AssemblyFileHandle
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
  nameWithType: MetadataBuilder.AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(StringHandle, Version, StringHandle, BlobHandle, AssemblyFlags, BlobHandle)
- uid: System.Reflection.Metadata.AssemblyReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: AssemblyReferenceHandle
  nameWithType: AssemblyReferenceHandle
  fullName: System.Reflection.Metadata.AssemblyReferenceHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddConstant(EntityHandle, Object)
  nameWithType: MetadataBuilder.AddConstant(EntityHandle, Object)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(EntityHandle, Object)
- uid: System.Reflection.Metadata.ConstantHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ConstantHandle
  nameWithType: ConstantHandle
  fullName: System.Reflection.Metadata.ConstantHandle
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(EntityHandle, EntityHandle, BlobHandle)
- uid: System.Reflection.Metadata.CustomAttributeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: CustomAttributeHandle
  nameWithType: CustomAttributeHandle
  fullName: System.Reflection.Metadata.CustomAttributeHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(EntityHandle, GuidHandle, BlobHandle)
- uid: System.Reflection.Metadata.CustomDebugInformationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: CustomDebugInformationHandle
  nameWithType: CustomDebugInformationHandle
  fullName: System.Reflection.Metadata.CustomDebugInformationHandle
- uid: System.Reflection.Metadata.GuidHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: GuidHandle
  nameWithType: GuidHandle
  fullName: System.Reflection.Metadata.GuidHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
  nameWithType: MetadataBuilder.AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(EntityHandle, DeclarativeSecurityAction, BlobHandle)
- uid: System.Reflection.Metadata.DeclarativeSecurityAttributeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: DeclarativeSecurityAttributeHandle
  nameWithType: DeclarativeSecurityAttributeHandle
  fullName: System.Reflection.Metadata.DeclarativeSecurityAttributeHandle
- uid: System.Reflection.DeclarativeSecurityAction
  parent: System.Reflection
  isExternal: false
  name: DeclarativeSecurityAction
  nameWithType: DeclarativeSecurityAction
  fullName: System.Reflection.DeclarativeSecurityAction
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
  nameWithType: MetadataBuilder.AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(BlobHandle, GuidHandle, BlobHandle, GuidHandle)
- uid: System.Reflection.Metadata.DocumentHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: DocumentHandle
  nameWithType: DocumentHandle
  fullName: System.Reflection.Metadata.DocumentHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEncLogEntry(EntityHandle, EditAndContinueOperation)
  nameWithType: MetadataBuilder.AddEncLogEntry(EntityHandle, EditAndContinueOperation)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(EntityHandle, EditAndContinueOperation)
- uid: System.Reflection.Metadata.Ecma335.EditAndContinueOperation
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: EditAndContinueOperation
  nameWithType: EditAndContinueOperation
  fullName: System.Reflection.Metadata.Ecma335.EditAndContinueOperation
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEncMapEntry(EntityHandle)
  nameWithType: MetadataBuilder.AddEncMapEntry(EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(EntityHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEvent(EventAttributes, StringHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddEvent(EventAttributes, StringHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(EventAttributes, StringHandle, EntityHandle)
- uid: System.Reflection.Metadata.EventDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: EventDefinitionHandle
  nameWithType: EventDefinitionHandle
  fullName: System.Reflection.Metadata.EventDefinitionHandle
- uid: System.Reflection.EventAttributes
  parent: System.Reflection
  isExternal: false
  name: EventAttributes
  nameWithType: EventAttributes
  fullName: System.Reflection.EventAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
  nameWithType: MetadataBuilder.AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(TypeDefinitionHandle, EventDefinitionHandle)
- uid: System.Reflection.Metadata.TypeDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeDefinitionHandle
  nameWithType: TypeDefinitionHandle
  fullName: System.Reflection.Metadata.TypeDefinitionHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
  nameWithType: MetadataBuilder.AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(TypeAttributes, StringHandle, StringHandle, EntityHandle, Int32)
- uid: System.Reflection.Metadata.ExportedTypeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ExportedTypeHandle
  nameWithType: ExportedTypeHandle
  fullName: System.Reflection.Metadata.ExportedTypeHandle
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(FieldAttributes, StringHandle, BlobHandle)
- uid: System.Reflection.Metadata.FieldDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: FieldDefinitionHandle
  nameWithType: FieldDefinitionHandle
  fullName: System.Reflection.Metadata.FieldDefinitionHandle
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldLayout(FieldDefinitionHandle, Int32)
  nameWithType: MetadataBuilder.AddFieldLayout(FieldDefinitionHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(FieldDefinitionHandle, Int32)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
  nameWithType: MetadataBuilder.AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(FieldDefinitionHandle, Int32)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
  nameWithType: MetadataBuilder.AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(EntityHandle, GenericParameterAttributes, StringHandle, Int32)
- uid: System.Reflection.Metadata.GenericParameterHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: GenericParameterHandle
  nameWithType: GenericParameterHandle
  fullName: System.Reflection.Metadata.GenericParameterHandle
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(GenericParameterHandle, EntityHandle)
- uid: System.Reflection.Metadata.GenericParameterConstraintHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: GenericParameterConstraintHandle
  nameWithType: GenericParameterConstraintHandle
  fullName: System.Reflection.Metadata.GenericParameterConstraintHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddImportScope(ImportScopeHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddImportScope(ImportScopeHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(ImportScopeHandle, BlobHandle)
- uid: System.Reflection.Metadata.ImportScopeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ImportScopeHandle
  nameWithType: ImportScopeHandle
  fullName: System.Reflection.Metadata.ImportScopeHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(TypeDefinitionHandle, EntityHandle)
- uid: System.Reflection.Metadata.InterfaceImplementationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: InterfaceImplementationHandle
  nameWithType: InterfaceImplementationHandle
  fullName: System.Reflection.Metadata.InterfaceImplementationHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalConstant(StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddLocalConstant(StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(StringHandle, BlobHandle)
- uid: System.Reflection.Metadata.LocalConstantHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: LocalConstantHandle
  nameWithType: LocalConstantHandle
  fullName: System.Reflection.Metadata.LocalConstantHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
  nameWithType: MetadataBuilder.AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(MethodDefinitionHandle, ImportScopeHandle, LocalVariableHandle, LocalConstantHandle, Int32, Int32)
- uid: System.Reflection.Metadata.LocalScopeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: LocalScopeHandle
  nameWithType: LocalScopeHandle
  fullName: System.Reflection.Metadata.LocalScopeHandle
- uid: System.Reflection.Metadata.MethodDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: MethodDefinitionHandle
  nameWithType: MethodDefinitionHandle
  fullName: System.Reflection.Metadata.MethodDefinitionHandle
- uid: System.Reflection.Metadata.LocalVariableHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: LocalVariableHandle
  nameWithType: LocalVariableHandle
  fullName: System.Reflection.Metadata.LocalVariableHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
  nameWithType: MetadataBuilder.AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(LocalVariableAttributes, Int32, StringHandle)
- uid: System.Reflection.Metadata.LocalVariableAttributes
  parent: System.Reflection.Metadata
  isExternal: false
  name: LocalVariableAttributes
  nameWithType: LocalVariableAttributes
  fullName: System.Reflection.Metadata.LocalVariableAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
  nameWithType: MetadataBuilder.AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(ManifestResourceAttributes, StringHandle, EntityHandle, UInt32)
- uid: System.Reflection.Metadata.ManifestResourceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ManifestResourceHandle
  nameWithType: ManifestResourceHandle
  fullName: System.Reflection.Metadata.ManifestResourceHandle
- uid: System.Reflection.ManifestResourceAttributes
  parent: System.Reflection
  isExternal: false
  name: ManifestResourceAttributes
  nameWithType: ManifestResourceAttributes
  fullName: System.Reflection.ManifestResourceAttributes
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMarshallingDescriptor(EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMarshallingDescriptor(EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(EntityHandle, BlobHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMemberReference(EntityHandle, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMemberReference(EntityHandle, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(EntityHandle, StringHandle, BlobHandle)
- uid: System.Reflection.Metadata.MemberReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: MemberReferenceHandle
  nameWithType: MemberReferenceHandle
  fullName: System.Reflection.Metadata.MemberReferenceHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodDebugInformation(DocumentHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMethodDebugInformation(DocumentHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(DocumentHandle, BlobHandle)
- uid: System.Reflection.Metadata.MethodDebugInformationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: MethodDebugInformationHandle
  nameWithType: MethodDebugInformationHandle
  fullName: System.Reflection.Metadata.MethodDebugInformationHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
  nameWithType: MetadataBuilder.AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(MethodAttributes, MethodImplAttributes, StringHandle, BlobHandle, Int32, ParameterHandle)
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Reflection.Metadata.ParameterHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ParameterHandle
  nameWithType: ParameterHandle
  fullName: System.Reflection.Metadata.ParameterHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
  nameWithType: MetadataBuilder.AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(TypeDefinitionHandle, EntityHandle, EntityHandle)
- uid: System.Reflection.Metadata.MethodImplementationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: MethodImplementationHandle
  nameWithType: MethodImplementationHandle
  fullName: System.Reflection.Metadata.MethodImplementationHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
  nameWithType: MetadataBuilder.AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(MethodDefinitionHandle, MethodImportAttributes, StringHandle, ModuleReferenceHandle)
- uid: System.Reflection.MethodImportAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodImportAttributes
  nameWithType: MethodImportAttributes
  fullName: System.Reflection.MethodImportAttributes
- uid: System.Reflection.Metadata.ModuleReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ModuleReferenceHandle
  nameWithType: ModuleReferenceHandle
  fullName: System.Reflection.Metadata.ModuleReferenceHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(EntityHandle, MethodSemanticsAttributes, MethodDefinitionHandle)
- uid: System.Reflection.MethodSemanticsAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodSemanticsAttributes
  nameWithType: MethodSemanticsAttributes
  fullName: System.Reflection.MethodSemanticsAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodSpecification(EntityHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddMethodSpecification(EntityHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(EntityHandle, BlobHandle)
- uid: System.Reflection.Metadata.MethodSpecificationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: MethodSpecificationHandle
  nameWithType: MethodSpecificationHandle
  fullName: System.Reflection.Metadata.MethodSpecificationHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
  nameWithType: MetadataBuilder.AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(Int32, StringHandle, GuidHandle, GuidHandle, GuidHandle)
- uid: System.Reflection.Metadata.ModuleDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ModuleDefinitionHandle
  nameWithType: ModuleDefinitionHandle
  fullName: System.Reflection.Metadata.ModuleDefinitionHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddModuleReference(StringHandle)
  nameWithType: MetadataBuilder.AddModuleReference(StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(StringHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
  nameWithType: MetadataBuilder.AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(TypeDefinitionHandle, TypeDefinitionHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddParameter(ParameterAttributes, StringHandle, Int32)
  nameWithType: MetadataBuilder.AddParameter(ParameterAttributes, StringHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(ParameterAttributes, StringHandle, Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddProperty(PropertyAttributes, StringHandle, BlobHandle)
  nameWithType: MetadataBuilder.AddProperty(PropertyAttributes, StringHandle, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(PropertyAttributes, StringHandle, BlobHandle)
- uid: System.Reflection.Metadata.PropertyDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: PropertyDefinitionHandle
  nameWithType: PropertyDefinitionHandle
  fullName: System.Reflection.Metadata.PropertyDefinitionHandle
- uid: System.Reflection.PropertyAttributes
  parent: System.Reflection
  isExternal: false
  name: PropertyAttributes
  nameWithType: PropertyAttributes
  fullName: System.Reflection.PropertyAttributes
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
  nameWithType: MetadataBuilder.AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(TypeDefinitionHandle, PropertyDefinitionHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddStandaloneSignature(BlobHandle)
  nameWithType: MetadataBuilder.AddStandaloneSignature(BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(BlobHandle)
- uid: System.Reflection.Metadata.StandaloneSignatureHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: StandaloneSignatureHandle
  nameWithType: StandaloneSignatureHandle
  fullName: System.Reflection.Metadata.StandaloneSignatureHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(MethodDefinitionHandle, MethodDefinitionHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
  nameWithType: MetadataBuilder.AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(TypeAttributes, StringHandle, StringHandle, EntityHandle, FieldDefinitionHandle, MethodDefinitionHandle)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
  nameWithType: MetadataBuilder.AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(TypeDefinitionHandle, UInt16, UInt32)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeReference(EntityHandle, StringHandle, StringHandle)
  nameWithType: MetadataBuilder.AddTypeReference(EntityHandle, StringHandle, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(EntityHandle, StringHandle, StringHandle)
- uid: System.Reflection.Metadata.TypeReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeReferenceHandle
  nameWithType: TypeReferenceHandle
  fullName: System.Reflection.Metadata.TypeReferenceHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeSpecification(BlobHandle)
  nameWithType: MetadataBuilder.AddTypeSpecification(BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(BlobHandle)
- uid: System.Reflection.Metadata.TypeSpecificationHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeSpecificationHandle
  nameWithType: TypeSpecificationHandle
  fullName: System.Reflection.Metadata.TypeSpecificationHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlob(BlobBuilder)
  nameWithType: MetadataBuilder.GetOrAddBlob(BlobBuilder)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(BlobBuilder)
- uid: System.Reflection.Metadata.BlobBuilder
  parent: System.Reflection.Metadata
  isExternal: false
  name: BlobBuilder
  nameWithType: BlobBuilder
  fullName: System.Reflection.Metadata.BlobBuilder
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlob(Byte[])
  nameWithType: MetadataBuilder.GetOrAddBlob(Byte[])
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlob(ImmutableArray<Byte>)
  nameWithType: MetadataBuilder.GetOrAddBlob(ImmutableArray<Byte>)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(ImmutableArray<Byte>)
- uid: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
- uid: System.Collections.Immutable.ImmutableArray{System.Byte}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<Byte>
  nameWithType: ImmutableArray<Byte>
  fullName: System.Collections.Immutable.ImmutableArray<System.Byte>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlobUTF16(String)
  nameWithType: MetadataBuilder.GetOrAddBlobUTF16(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlobUTF8(String, Boolean)
  nameWithType: MetadataBuilder.GetOrAddBlobUTF8(String, Boolean)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(String, Boolean)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddConstantBlob(Object)
  nameWithType: MetadataBuilder.GetOrAddConstantBlob(Object)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(Object)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddDocumentName(String)
  nameWithType: MetadataBuilder.GetOrAddDocumentName(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(String)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddGuid(Guid)
  nameWithType: MetadataBuilder.GetOrAddGuid(Guid)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(Guid)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddString(String)
  nameWithType: MetadataBuilder.GetOrAddString(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(String)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddUserString(String)
  nameWithType: MetadataBuilder.GetOrAddUserString(String)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(String)
- uid: System.Reflection.Metadata.UserStringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: UserStringHandle
  nameWithType: UserStringHandle
  fullName: System.Reflection.Metadata.UserStringHandle
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetRowCount(TableIndex)
  nameWithType: MetadataBuilder.GetRowCount(TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(TableIndex)
- uid: System.Reflection.Metadata.Ecma335.TableIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: TableIndex
  nameWithType: TableIndex
  fullName: System.Reflection.Metadata.Ecma335.TableIndex
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetRowCounts()
  nameWithType: MetadataBuilder.GetRowCounts()
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts()
- uid: System.Collections.Immutable.ImmutableArray{System.Int32}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<Int32>
  nameWithType: ImmutableArray<Int32>
  fullName: System.Collections.Immutable.ImmutableArray<System.Int32>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: ReserveGuid()
  nameWithType: MetadataBuilder.ReserveGuid()
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid()
- uid: System.Reflection.Metadata.ReservedBlob`1
  name: ReservedBlob<THandle>
  nameWithType: ReservedBlob<THandle>
  fullName: System.Reflection.Metadata.ReservedBlob<THandle>
- uid: System.Reflection.Metadata.ReservedBlob{System.Reflection.Metadata.GuidHandle}
  parent: System.Reflection.Metadata
  isExternal: false
  name: ReservedBlob<GuidHandle>
  nameWithType: ReservedBlob<GuidHandle>
  fullName: System.Reflection.Metadata.ReservedBlob<System.Reflection.Metadata.GuidHandle>
  spec.csharp:
  - uid: System.Reflection.Metadata.ReservedBlob`1
    name: ReservedBlob
    nameWithType: ReservedBlob
    fullName: System.Reflection.Metadata.ReservedBlob
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.GuidHandle
    name: GuidHandle
    nameWithType: GuidHandle
    fullName: System.Reflection.Metadata.GuidHandle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: ReserveUserString(Int32)
  nameWithType: MetadataBuilder.ReserveUserString(Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(Int32)
- uid: System.Reflection.Metadata.ReservedBlob{System.Reflection.Metadata.UserStringHandle}
  parent: System.Reflection.Metadata
  isExternal: false
  name: ReservedBlob<UserStringHandle>
  nameWithType: ReservedBlob<UserStringHandle>
  fullName: System.Reflection.Metadata.ReservedBlob<System.Reflection.Metadata.UserStringHandle>
  spec.csharp:
  - uid: System.Reflection.Metadata.ReservedBlob`1
    name: ReservedBlob
    nameWithType: ReservedBlob
    fullName: System.Reflection.Metadata.ReservedBlob
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.UserStringHandle
    name: UserStringHandle
    nameWithType: UserStringHandle
    fullName: System.Reflection.Metadata.UserStringHandle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: SetCapacity(HeapIndex, Int32)
  nameWithType: MetadataBuilder.SetCapacity(HeapIndex, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(HeapIndex, Int32)
- uid: System.Reflection.Metadata.Ecma335.HeapIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: HeapIndex
  nameWithType: HeapIndex
  fullName: System.Reflection.Metadata.Ecma335.HeapIndex
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: SetCapacity(TableIndex, Int32)
  nameWithType: MetadataBuilder.SetCapacity(TableIndex, Int32)
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(TableIndex, Int32)
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: MetadataBuilder
  nameWithType: MetadataBuilder.MetadataBuilder
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.MetadataBuilder
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssembly
  nameWithType: MetadataBuilder.AddAssembly
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssemblyFile
  nameWithType: MetadataBuilder.AddAssemblyFile
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddAssemblyReference
  nameWithType: MetadataBuilder.AddAssemblyReference
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddConstant
  nameWithType: MetadataBuilder.AddConstant
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddCustomAttribute
  nameWithType: MetadataBuilder.AddCustomAttribute
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddCustomDebugInformation
  nameWithType: MetadataBuilder.AddCustomDebugInformation
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddDeclarativeSecurityAttribute
  nameWithType: MetadataBuilder.AddDeclarativeSecurityAttribute
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddDocument
  nameWithType: MetadataBuilder.AddDocument
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEncLogEntry
  nameWithType: MetadataBuilder.AddEncLogEntry
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEncMapEntry
  nameWithType: MetadataBuilder.AddEncMapEntry
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEvent
  nameWithType: MetadataBuilder.AddEvent
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddEventMap
  nameWithType: MetadataBuilder.AddEventMap
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddExportedType
  nameWithType: MetadataBuilder.AddExportedType
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldDefinition
  nameWithType: MetadataBuilder.AddFieldDefinition
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldLayout
  nameWithType: MetadataBuilder.AddFieldLayout
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddFieldRelativeVirtualAddress
  nameWithType: MetadataBuilder.AddFieldRelativeVirtualAddress
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddGenericParameter
  nameWithType: MetadataBuilder.AddGenericParameter
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddGenericParameterConstraint
  nameWithType: MetadataBuilder.AddGenericParameterConstraint
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddImportScope
  nameWithType: MetadataBuilder.AddImportScope
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddInterfaceImplementation
  nameWithType: MetadataBuilder.AddInterfaceImplementation
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalConstant
  nameWithType: MetadataBuilder.AddLocalConstant
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalScope
  nameWithType: MetadataBuilder.AddLocalScope
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddLocalVariable
  nameWithType: MetadataBuilder.AddLocalVariable
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddManifestResource
  nameWithType: MetadataBuilder.AddManifestResource
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMarshallingDescriptor
  nameWithType: MetadataBuilder.AddMarshallingDescriptor
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMemberReference
  nameWithType: MetadataBuilder.AddMemberReference
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodDebugInformation
  nameWithType: MetadataBuilder.AddMethodDebugInformation
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodDefinition
  nameWithType: MetadataBuilder.AddMethodDefinition
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodImplementation
  nameWithType: MetadataBuilder.AddMethodImplementation
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodImport
  nameWithType: MetadataBuilder.AddMethodImport
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodSemantics
  nameWithType: MetadataBuilder.AddMethodSemantics
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddMethodSpecification
  nameWithType: MetadataBuilder.AddMethodSpecification
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddModule
  nameWithType: MetadataBuilder.AddModule
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddModuleReference
  nameWithType: MetadataBuilder.AddModuleReference
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddNestedType
  nameWithType: MetadataBuilder.AddNestedType
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddParameter
  nameWithType: MetadataBuilder.AddParameter
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddProperty
  nameWithType: MetadataBuilder.AddProperty
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddPropertyMap
  nameWithType: MetadataBuilder.AddPropertyMap
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddStandaloneSignature
  nameWithType: MetadataBuilder.AddStandaloneSignature
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddStateMachineMethod
  nameWithType: MetadataBuilder.AddStateMachineMethod
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeDefinition
  nameWithType: MetadataBuilder.AddTypeDefinition
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeLayout
  nameWithType: MetadataBuilder.AddTypeLayout
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeReference
  nameWithType: MetadataBuilder.AddTypeReference
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: AddTypeSpecification
  nameWithType: MetadataBuilder.AddTypeSpecification
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlob
  nameWithType: MetadataBuilder.GetOrAddBlob
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlobUTF16
  nameWithType: MetadataBuilder.GetOrAddBlobUTF16
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddBlobUTF8
  nameWithType: MetadataBuilder.GetOrAddBlobUTF8
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddConstantBlob
  nameWithType: MetadataBuilder.GetOrAddConstantBlob
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddDocumentName
  nameWithType: MetadataBuilder.GetOrAddDocumentName
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddGuid
  nameWithType: MetadataBuilder.GetOrAddGuid
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddString
  nameWithType: MetadataBuilder.GetOrAddString
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetOrAddUserString
  nameWithType: MetadataBuilder.GetOrAddUserString
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetRowCount
  nameWithType: MetadataBuilder.GetRowCount
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: GetRowCounts
  nameWithType: MetadataBuilder.GetRowCounts
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: ReserveGuid
  nameWithType: MetadataBuilder.ReserveGuid
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: ReserveUserString
  nameWithType: MetadataBuilder.ReserveUserString
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity*
  parent: System.Reflection.Metadata.Ecma335.MetadataBuilder
  isExternal: false
  name: SetCapacity
  nameWithType: MetadataBuilder.SetCapacity
  fullName: System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataBuilder.xml
