### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeClass
  commentId: T:Mono.CodeGeneration.CodeClass
  id: CodeClass
  children:
  - Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String)
  - Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateConstructor(System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateConstructor(System.Reflection.MethodAttributes,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type)
  - Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])
  - Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])
  - Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateStaticMethod(System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.CreateType
  - Mono.CodeGeneration.CodeClass.CreateVirtualMethod(System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])
  - Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  - Mono.CodeGeneration.CodeClass.DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  - Mono.CodeGeneration.CodeClass.DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  - Mono.CodeGeneration.CodeClass.GetDefaultConstructor
  - Mono.CodeGeneration.CodeClass.GetStaticConstructor
  - Mono.CodeGeneration.CodeClass.ImplementMethod(System.Reflection.MethodInfo)
  - Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.Reflection.MethodInfo)
  - Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.String)
  - Mono.CodeGeneration.CodeClass.PrintCode
  - Mono.CodeGeneration.CodeClass.PrintCode(Mono.CodeGeneration.CodeWriter)
  - Mono.CodeGeneration.CodeClass.TypeBuilder
  langs:
  - csharp
  name: CodeClass
  nameWithType: CodeClass
  fullName: Mono.CodeGeneration.CodeClass
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public class CodeClass
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String)
  commentId: M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String)
  id: '#ctor(System.Reflection.Emit.ModuleBuilder,System.String)'
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CodeClass(ModuleBuilder, String)
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String)
  fullName: CodeClass.CodeClass(ModuleBuilder, String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name);
    parameters:
    - id: mb
      type: System.Reflection.Emit.ModuleBuilder
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])
  id: '#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])'
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CodeClass(ModuleBuilder, String, Type, Type[])
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String, Type, Type[])
  fullName: CodeClass.CodeClass(ModuleBuilder, String, Type, Type[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name, Type baseType, Type[] interfaces);
    parameters:
    - id: mb
      type: System.Reflection.Emit.ModuleBuilder
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: baseType
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: '#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])'
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
  fullName: CodeClass.CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeClass (System.Reflection.Emit.ModuleBuilder mb, string name, System.Reflection.TypeAttributes attr, Type baseType, Type[] interfaces);
    parameters:
    - id: mb
      type: System.Reflection.Emit.ModuleBuilder
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: baseType
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateConstructor(System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateConstructor(System.Type[])
  id: CreateConstructor(System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateConstructor(Type[])
  nameWithType: CodeClass.CreateConstructor(Type[])
  fullName: CodeClass.CreateConstructor(Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateConstructor (Type[] parameters);
    parameters:
    - id: parameters
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateConstructor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateConstructor(System.Reflection.MethodAttributes,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateConstructor(System.Reflection.MethodAttributes,System.Type[])
  id: CreateConstructor(System.Reflection.MethodAttributes,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateConstructor(MethodAttributes, Type[])
  nameWithType: CodeClass.CreateConstructor(MethodAttributes, Type[])
  fullName: CodeClass.CreateConstructor(MethodAttributes, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateConstructor (System.Reflection.MethodAttributes attributes, Type[] parameters);
    parameters:
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: parameters
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateConstructor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type)
  commentId: M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type)
  id: CreateCustomAttribute(System.Type)
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateCustomAttribute(Type)
  nameWithType: CodeClass.CreateCustomAttribute(Type)
  fullName: CodeClass.CreateCustomAttribute(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeCustomAttribute
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateCustomAttribute*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])
  id: CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
  nameWithType: CodeClass.CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
  fullName: CodeClass.CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType, Type[] ctorArgTypes, Mono.CodeGeneration.CodeLiteral[] ctorArgs, System.Reflection.FieldInfo[] fields, Mono.CodeGeneration.CodeLiteral[] fieldValues);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: ctorArgTypes
      type: System.Type[]
      description: To be added.
    - id: ctorArgs
      type: Mono.CodeGeneration.CodeLiteral[]
      description: To be added.
    - id: fields
      type: System.Reflection.FieldInfo[]
      description: To be added.
    - id: fieldValues
      type: Mono.CodeGeneration.CodeLiteral[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeCustomAttribute
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateCustomAttribute*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])
  id: CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
  nameWithType: CodeClass.CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
  fullName: CodeClass.CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeCustomAttribute CreateCustomAttribute (Type attributeType, Type[] ctorArgTypes, object[] ctorArgs, string[] namedArgFieldNames, object[] namedArgValues);
    parameters:
    - id: attributeType
      type: System.Type
      description: To be added.
    - id: ctorArgTypes
      type: System.Type[]
      description: To be added.
    - id: ctorArgs
      type: System.Object[]
      description: To be added.
    - id: namedArgFieldNames
      type: System.String[]
      description: To be added.
    - id: namedArgValues
      type: System.Object[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeCustomAttribute
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateCustomAttribute*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Type,System.Type[])
  id: CreateMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateMethod(String, Type, Type[])
  fullName: CodeClass.CreateMethod(String, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateMethod (string name, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  id: CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateMethod(String, MethodAttributes, Type, Type[])
  nameWithType: CodeClass.CreateMethod(String, MethodAttributes, Type, Type[])
  fullName: CodeClass.CreateMethod(String, MethodAttributes, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Type[])
  id: CreateProperty(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateProperty(String, Type, Type[])
  nameWithType: CodeClass.CreateProperty(String, Type, Type[])
  fullName: CodeClass.CreateProperty(String, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeProperty CreateProperty (string name, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeProperty
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateProperty*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])
  id: CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateProperty(String, Type, MethodAttributes, Type[])
  nameWithType: CodeClass.CreateProperty(String, Type, MethodAttributes, Type[])
  fullName: CodeClass.CreateProperty(String, Type, MethodAttributes, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeProperty CreateProperty (string name, Type returnType, System.Reflection.MethodAttributes methodAttributes, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: methodAttributes
      type: System.Reflection.MethodAttributes
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeProperty
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateProperty*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateStaticMethod(System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateStaticMethod(System.String,System.Type,System.Type[])
  id: CreateStaticMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateStaticMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateStaticMethod(String, Type, Type[])
  fullName: CodeClass.CreateStaticMethod(String, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateStaticMethod (string name, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateStaticMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateType
  commentId: M:Mono.CodeGeneration.CodeClass.CreateType
  id: CreateType
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateType()
  nameWithType: CodeClass.CreateType()
  fullName: CodeClass.CreateType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Type CreateType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateType*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateVirtualMethod(System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeClass.CreateVirtualMethod(System.String,System.Type,System.Type[])
  id: CreateVirtualMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: CreateVirtualMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateVirtualMethod(String, Type, Type[])
  fullName: CodeClass.CreateVirtualMethod(String, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod CreateVirtualMethod (string name, Type returnType, Type[] parameterTypes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: returnType
      type: System.Type
      description: To be added.
    - id: parameterTypes
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.CreateVirtualMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])
  commentId: M:Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])
  id: DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: DefineField(String, Type, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineField(String, Type, CodeCustomAttribute[])
  fullName: CodeClass.DefineField(String, Type, CodeCustomAttribute[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeFieldReference DefineField (string name, Type type, Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: customAttributes
      type: Mono.CodeGeneration.CodeCustomAttribute[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeFieldReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.DefineField*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  commentId: M:Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  id: DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeFieldReference DefineField (string name, Type type, System.Reflection.FieldAttributes attrs, Mono.CodeGeneration.CodeExpression initialValue, Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: attrs
      type: System.Reflection.FieldAttributes
      description: To be added.
    - id: initialValue
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: customAttributes
      type: Mono.CodeGeneration.CodeCustomAttribute[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeFieldReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.DefineField*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  commentId: M:Mono.CodeGeneration.CodeClass.DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  id: DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: DefineStaticField(CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineStaticField(CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineStaticField(CodeExpression, CodeCustomAttribute[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeFieldReference DefineStaticField (Mono.CodeGeneration.CodeExpression initialValue, Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);
    parameters:
    - id: initialValue
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: customAttributes
      type: Mono.CodeGeneration.CodeCustomAttribute[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeFieldReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.DefineStaticField*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  commentId: M:Mono.CodeGeneration.CodeClass.DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  id: DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeFieldReference DefineStaticField (string name, Type type, Mono.CodeGeneration.CodeExpression initialValue, Mono.CodeGeneration.CodeCustomAttribute[] customAttributes);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: initialValue
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: customAttributes
      type: Mono.CodeGeneration.CodeCustomAttribute[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeFieldReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.DefineStaticField*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.GetDefaultConstructor
  commentId: M:Mono.CodeGeneration.CodeClass.GetDefaultConstructor
  id: GetDefaultConstructor
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: GetDefaultConstructor()
  nameWithType: CodeClass.GetDefaultConstructor()
  fullName: CodeClass.GetDefaultConstructor()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod GetDefaultConstructor ();
    parameters: []
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.GetDefaultConstructor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.GetStaticConstructor
  commentId: M:Mono.CodeGeneration.CodeClass.GetStaticConstructor
  id: GetStaticConstructor
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: GetStaticConstructor()
  nameWithType: CodeClass.GetStaticConstructor()
  fullName: CodeClass.GetStaticConstructor()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod GetStaticConstructor ();
    parameters: []
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.GetStaticConstructor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Reflection.MethodInfo)
  commentId: M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Reflection.MethodInfo)
  id: ImplementMethod(System.Reflection.MethodInfo)
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: ImplementMethod(MethodInfo)
  nameWithType: CodeClass.ImplementMethod(MethodInfo)
  fullName: CodeClass.ImplementMethod(MethodInfo)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod ImplementMethod (System.Reflection.MethodInfo basem);
    parameters:
    - id: basem
      type: System.Reflection.MethodInfo
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.ImplementMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.Reflection.MethodInfo)
  commentId: M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.Reflection.MethodInfo)
  id: ImplementMethod(System.Type,System.Reflection.MethodInfo)
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: ImplementMethod(Type, MethodInfo)
  nameWithType: CodeClass.ImplementMethod(Type, MethodInfo)
  fullName: CodeClass.ImplementMethod(Type, MethodInfo)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod ImplementMethod (Type baseType, System.Reflection.MethodInfo basem);
    parameters:
    - id: baseType
      type: System.Type
      description: To be added.
    - id: basem
      type: System.Reflection.MethodInfo
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.ImplementMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.String)
  commentId: M:Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.String)
  id: ImplementMethod(System.Type,System.String)
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: ImplementMethod(Type, String)
  nameWithType: CodeClass.ImplementMethod(Type, String)
  fullName: CodeClass.ImplementMethod(Type, String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeMethod ImplementMethod (Type baseType, string methodName);
    parameters:
    - id: baseType
      type: System.Type
      description: To be added.
    - id: methodName
      type: System.String
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.ImplementMethod*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.PrintCode
  commentId: M:Mono.CodeGeneration.CodeClass.PrintCode
  id: PrintCode
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: PrintCode()
  nameWithType: CodeClass.PrintCode()
  fullName: CodeClass.PrintCode()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public string PrintCode ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.PrintCode(Mono.CodeGeneration.CodeWriter)
  commentId: M:Mono.CodeGeneration.CodeClass.PrintCode(Mono.CodeGeneration.CodeWriter)
  id: PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: PrintCode(CodeWriter)
  nameWithType: CodeClass.PrintCode(CodeWriter)
  fullName: CodeClass.PrintCode(CodeWriter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void PrintCode (Mono.CodeGeneration.CodeWriter cw);
    parameters:
    - id: cw
      type: Mono.CodeGeneration.CodeWriter
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.TypeBuilder
  commentId: P:Mono.CodeGeneration.CodeClass.TypeBuilder
  id: TypeBuilder
  parent: Mono.CodeGeneration.CodeClass
  langs:
  - csharp
  name: TypeBuilder
  nameWithType: CodeClass.TypeBuilder
  fullName: CodeClass.TypeBuilder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public System.Reflection.Emit.TypeBuilder TypeBuilder { get; }
    return:
      type: System.Reflection.Emit.TypeBuilder
      description: To be added.
  overload: Mono.CodeGeneration.CodeClass.TypeBuilder*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CodeClass(ModuleBuilder, String)
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String)
  fullName: CodeClass.CodeClass(ModuleBuilder, String)
- uid: System.Reflection.Emit.ModuleBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CodeClass(ModuleBuilder, String, Type, Type[])
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String, Type, Type[])
  fullName: CodeClass.CodeClass(ModuleBuilder, String, Type, Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeClass.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
  nameWithType: CodeClass.CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
  fullName: CodeClass.CodeClass(ModuleBuilder, String, TypeAttributes, Type, Type[])
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: Mono.CodeGeneration.CodeClass.CreateConstructor(System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateConstructor(Type[])
  nameWithType: CodeClass.CreateConstructor(Type[])
  fullName: CodeClass.CreateConstructor(Type[])
- uid: Mono.CodeGeneration.CodeMethod
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeMethod
  nameWithType: CodeMethod
  fullName: Mono.CodeGeneration.CodeMethod
- uid: Mono.CodeGeneration.CodeClass.CreateConstructor(System.Reflection.MethodAttributes,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateConstructor(MethodAttributes, Type[])
  nameWithType: CodeClass.CreateConstructor(MethodAttributes, Type[])
  fullName: CodeClass.CreateConstructor(MethodAttributes, Type[])
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: false
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateCustomAttribute(Type)
  nameWithType: CodeClass.CreateCustomAttribute(Type)
  fullName: CodeClass.CreateCustomAttribute(Type)
- uid: Mono.CodeGeneration.CodeCustomAttribute
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeCustomAttribute
  nameWithType: CodeCustomAttribute
  fullName: Mono.CodeGeneration.CodeCustomAttribute
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],Mono.CodeGeneration.CodeLiteral[],System.Reflection.FieldInfo[],Mono.CodeGeneration.CodeLiteral[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
  nameWithType: CodeClass.CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
  fullName: CodeClass.CreateCustomAttribute(Type, Type[], CodeLiteral[], FieldInfo[], CodeLiteral[])
- uid: Mono.CodeGeneration.CodeLiteral
  name: CodeLiteral
  nameWithType: CodeLiteral
  fullName: Mono.CodeGeneration.CodeLiteral
- uid: Mono.CodeGeneration.CodeLiteral[]
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeLiteral[]
  nameWithType: CodeLiteral[]
  fullName: Mono.CodeGeneration.CodeLiteral[]
  spec.csharp:
  - uid: Mono.CodeGeneration.CodeLiteral
    name: CodeLiteral
    nameWithType: CodeLiteral
    fullName: Mono.CodeGeneration.CodeLiteral
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.FieldInfo
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: false
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: System.Reflection.FieldInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute(System.Type,System.Type[],System.Object[],System.String[],System.Object[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
  nameWithType: CodeClass.CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
  fullName: CodeClass.CreateCustomAttribute(Type, Type[], Object[], String[], Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateMethod(String, Type, Type[])
  fullName: CodeClass.CreateMethod(String, Type, Type[])
- uid: Mono.CodeGeneration.CodeClass.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateMethod(String, MethodAttributes, Type, Type[])
  nameWithType: CodeClass.CreateMethod(String, MethodAttributes, Type, Type[])
  fullName: CodeClass.CreateMethod(String, MethodAttributes, Type, Type[])
- uid: Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateProperty(String, Type, Type[])
  nameWithType: CodeClass.CreateProperty(String, Type, Type[])
  fullName: CodeClass.CreateProperty(String, Type, Type[])
- uid: Mono.CodeGeneration.CodeProperty
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeProperty
  nameWithType: CodeProperty
  fullName: Mono.CodeGeneration.CodeProperty
- uid: Mono.CodeGeneration.CodeClass.CreateProperty(System.String,System.Type,System.Reflection.MethodAttributes,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateProperty(String, Type, MethodAttributes, Type[])
  nameWithType: CodeClass.CreateProperty(String, Type, MethodAttributes, Type[])
  fullName: CodeClass.CreateProperty(String, Type, MethodAttributes, Type[])
- uid: Mono.CodeGeneration.CodeClass.CreateStaticMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateStaticMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateStaticMethod(String, Type, Type[])
  fullName: CodeClass.CreateStaticMethod(String, Type, Type[])
- uid: Mono.CodeGeneration.CodeClass.CreateType
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateType()
  nameWithType: CodeClass.CreateType()
  fullName: CodeClass.CreateType()
- uid: Mono.CodeGeneration.CodeClass.CreateVirtualMethod(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateVirtualMethod(String, Type, Type[])
  nameWithType: CodeClass.CreateVirtualMethod(String, Type, Type[])
  fullName: CodeClass.CreateVirtualMethod(String, Type, Type[])
- uid: Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineField(String, Type, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineField(String, Type, CodeCustomAttribute[])
  fullName: CodeClass.DefineField(String, Type, CodeCustomAttribute[])
- uid: Mono.CodeGeneration.CodeFieldReference
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeFieldReference
  nameWithType: CodeFieldReference
  fullName: Mono.CodeGeneration.CodeFieldReference
- uid: Mono.CodeGeneration.CodeCustomAttribute[]
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeCustomAttribute[]
  nameWithType: CodeCustomAttribute[]
  fullName: Mono.CodeGeneration.CodeCustomAttribute[]
  spec.csharp:
  - uid: Mono.CodeGeneration.CodeCustomAttribute
    name: CodeCustomAttribute
    nameWithType: CodeCustomAttribute
    fullName: Mono.CodeGeneration.CodeCustomAttribute
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeClass.DefineField(System.String,System.Type,System.Reflection.FieldAttributes,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineField(String, Type, FieldAttributes, CodeExpression, CodeCustomAttribute[])
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: false
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.CodeClass.DefineStaticField(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineStaticField(CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineStaticField(CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineStaticField(CodeExpression, CodeCustomAttribute[])
- uid: Mono.CodeGeneration.CodeClass.DefineStaticField(System.String,System.Type,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeCustomAttribute[])
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
  nameWithType: CodeClass.DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
  fullName: CodeClass.DefineStaticField(String, Type, CodeExpression, CodeCustomAttribute[])
- uid: Mono.CodeGeneration.CodeClass.GetDefaultConstructor
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: GetDefaultConstructor()
  nameWithType: CodeClass.GetDefaultConstructor()
  fullName: CodeClass.GetDefaultConstructor()
- uid: Mono.CodeGeneration.CodeClass.GetStaticConstructor
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: GetStaticConstructor()
  nameWithType: CodeClass.GetStaticConstructor()
  fullName: CodeClass.GetStaticConstructor()
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Reflection.MethodInfo)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: ImplementMethod(MethodInfo)
  nameWithType: CodeClass.ImplementMethod(MethodInfo)
  fullName: CodeClass.ImplementMethod(MethodInfo)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.Reflection.MethodInfo)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: ImplementMethod(Type, MethodInfo)
  nameWithType: CodeClass.ImplementMethod(Type, MethodInfo)
  fullName: CodeClass.ImplementMethod(Type, MethodInfo)
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod(System.Type,System.String)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: ImplementMethod(Type, String)
  nameWithType: CodeClass.ImplementMethod(Type, String)
  fullName: CodeClass.ImplementMethod(Type, String)
- uid: Mono.CodeGeneration.CodeClass.PrintCode
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: PrintCode()
  nameWithType: CodeClass.PrintCode()
  fullName: CodeClass.PrintCode()
- uid: Mono.CodeGeneration.CodeClass.PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: PrintCode(CodeWriter)
  nameWithType: CodeClass.PrintCode(CodeWriter)
  fullName: CodeClass.PrintCode(CodeWriter)
- uid: Mono.CodeGeneration.CodeWriter
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Mono.CodeGeneration.CodeWriter
- uid: Mono.CodeGeneration.CodeClass.TypeBuilder
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: TypeBuilder
  nameWithType: CodeClass.TypeBuilder
  fullName: CodeClass.TypeBuilder
- uid: System.Reflection.Emit.TypeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: TypeBuilder
  nameWithType: TypeBuilder
  fullName: System.Reflection.Emit.TypeBuilder
- uid: Mono.CodeGeneration.CodeClass.#ctor*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CodeClass
  nameWithType: CodeClass.CodeClass
  fullName: CodeClass.CodeClass
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateConstructor*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateConstructor
  nameWithType: CodeClass.CreateConstructor
  fullName: CodeClass.CreateConstructor
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateCustomAttribute*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateCustomAttribute
  nameWithType: CodeClass.CreateCustomAttribute
  fullName: CodeClass.CreateCustomAttribute
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateMethod*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateMethod
  nameWithType: CodeClass.CreateMethod
  fullName: CodeClass.CreateMethod
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateProperty*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateProperty
  nameWithType: CodeClass.CreateProperty
  fullName: CodeClass.CreateProperty
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateStaticMethod*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateStaticMethod
  nameWithType: CodeClass.CreateStaticMethod
  fullName: CodeClass.CreateStaticMethod
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateType*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateType
  nameWithType: CodeClass.CreateType
  fullName: CodeClass.CreateType
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.CreateVirtualMethod*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: CreateVirtualMethod
  nameWithType: CodeClass.CreateVirtualMethod
  fullName: CodeClass.CreateVirtualMethod
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineField*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineField
  nameWithType: CodeClass.DefineField
  fullName: CodeClass.DefineField
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.DefineStaticField*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: DefineStaticField
  nameWithType: CodeClass.DefineStaticField
  fullName: CodeClass.DefineStaticField
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.GetDefaultConstructor*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: GetDefaultConstructor
  nameWithType: CodeClass.GetDefaultConstructor
  fullName: CodeClass.GetDefaultConstructor
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.GetStaticConstructor*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: GetStaticConstructor
  nameWithType: CodeClass.GetStaticConstructor
  fullName: CodeClass.GetStaticConstructor
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.ImplementMethod*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: ImplementMethod
  nameWithType: CodeClass.ImplementMethod
  fullName: CodeClass.ImplementMethod
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.PrintCode*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: PrintCode
  nameWithType: CodeClass.PrintCode
  fullName: CodeClass.PrintCode
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
- uid: Mono.CodeGeneration.CodeClass.TypeBuilder*
  parent: Mono.CodeGeneration.CodeClass
  isExternal: false
  name: TypeBuilder
  nameWithType: CodeClass.TypeBuilder
  fullName: CodeClass.TypeBuilder
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeClass.xml
