### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ListenActivity
  commentId: T:System.Workflow.Activities.ListenActivity
  id: ListenActivity
  children:
  - System.Workflow.Activities.ListenActivity.#ctor
  - System.Workflow.Activities.ListenActivity.#ctor(System.String)
  - System.Workflow.Activities.ListenActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ListenActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ListenActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ListenActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ListenActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  langs:
  - csharp
  name: ListenActivity
  nameWithType: ListenActivity
  fullName: System.Workflow.Activities.ListenActivity
  type: Class
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: Makes the workflow wait for any one of several possible events before the activity proceeds. This class cannot be inherited.
  remarks: "> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The <xref:System.Workflow.Activities.ListenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.ListenActivity> can contain other activities. The <xref:System.Workflow.Activities.ListenActivity> can only contain <xref:System.Workflow.Activities.EventDrivenActivity> activities and must have a minimum of two child activities.  \n  \n The <xref:System.Workflow.Activities.ListenActivity> can contain many branches and each branch is waiting for a particular event to occur before running. Each branch is event driven and the event that occurs runs the corresponding branch first. All other branches cancel and stop listening for events.  \n  \n The <xref:System.Workflow.Activities.ListenActivity> cannot be used in state machine workflows."
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ListenActivity), "Resources.Listen.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ListenValidator))]

      public sealed class ListenActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  implements:
  - System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  attributes:
  - type: System.Drawing.ToolboxBitmapAttribute
  - type: System.ObsoleteAttribute
  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.#ctor
  commentId: M:System.Workflow.Activities.ListenActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: ListenActivity()
  nameWithType: ListenActivity.ListenActivity()
  fullName: ListenActivity.ListenActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: Initializes a new instance of the <xref href="System.Workflow.Activities.ListenActivity"></xref> class.
  syntax:
    content: public ListenActivity ();
    parameters: []
  overload: System.Workflow.Activities.ListenActivity.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.#ctor(System.String)
  commentId: M:System.Workflow.Activities.ListenActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: ListenActivity(String)
  nameWithType: ListenActivity.ListenActivity(String)
  fullName: ListenActivity.ListenActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: Initializes a new instance of the <xref href="System.Workflow.Activities.ListenActivity"></xref> class using the name of the activity.
  syntax:
    content: public ListenActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: The user-defined name of the activity.
  overload: System.Workflow.Activities.ListenActivity.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  commentId: M:System.Workflow.Activities.ListenActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ListenActivity.Cancel(ActivityExecutionContext)
  fullName: ListenActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.Cancel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  commentId: M:System.Workflow.Activities.ListenActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ListenActivity.Execute(ActivityExecutionContext)
  fullName: ListenActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  commentId: M:System.Workflow.Activities.ListenActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)
  nameWithType: ListenActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)
  fullName: ListenActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.OnActivityChangeAdd*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  commentId: M:System.Workflow.Activities.ListenActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)
  nameWithType: ListenActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)
  fullName: ListenActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.OnActivityChangeRemove*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnClosed(System.IServiceProvider)
  commentId: M:System.Workflow.Activities.ListenActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: ListenActivity.OnClosed(IServiceProvider)
  fullName: ListenActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.OnClosed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  commentId: M:System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ListenActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: ListenActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
  overload: System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  commentId: M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ListenActivity
  langs:
  - csharp
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
  nameWithType: ListenActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
  fullName: ListenActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: Defines the processing procedure when the subscribed-to event occurs.
  syntax:
    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: The object that raised the event.
    - id: e
      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
      description: The previously typed event arguments.
  overload: System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
references:
- uid: System.Workflow.ComponentModel.CompositeActivity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.Activities.ListenActivity.#ctor
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: ListenActivity()
  nameWithType: ListenActivity.ListenActivity()
  fullName: ListenActivity.ListenActivity()
- uid: System.Workflow.Activities.ListenActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: ListenActivity(String)
  nameWithType: ListenActivity.ListenActivity(String)
  fullName: ListenActivity.ListenActivity(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ListenActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ListenActivity.Cancel(ActivityExecutionContext)
  fullName: ListenActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ListenActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ListenActivity.Execute(ActivityExecutionContext)
  fullName: ListenActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)
  nameWithType: ListenActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)
  fullName: ListenActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)
  nameWithType: ListenActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)
  fullName: ListenActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)
- uid: System.Workflow.Activities.ListenActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: ListenActivity.OnClosed(IServiceProvider)
  fullName: ListenActivity.OnClosed(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: false
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ListenActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: ListenActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
  nameWithType: ListenActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
  fullName: ListenActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatusChangedEventArgs
  nameWithType: ActivityExecutionStatusChangedEventArgs
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
- uid: System.Workflow.Activities.ListenActivity.#ctor*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: ListenActivity
  nameWithType: ListenActivity.ListenActivity
  fullName: ListenActivity.ListenActivity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.Cancel*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: Cancel
  nameWithType: ListenActivity.Cancel
  fullName: ListenActivity.Cancel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.Execute*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: Execute
  nameWithType: ListenActivity.Execute
  fullName: ListenActivity.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeAdd*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: ListenActivity.OnActivityChangeAdd
  fullName: ListenActivity.OnActivityChangeAdd
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnActivityChangeRemove*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: ListenActivity.OnActivityChangeRemove
  fullName: ListenActivity.OnActivityChangeRemove
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnClosed*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnClosed
  nameWithType: ListenActivity.OnClosed
  fullName: ListenActivity.OnClosed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.OnWorkflowChangesCompleted*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: ListenActivity.OnWorkflowChangesCompleted
  fullName: ListenActivity.OnWorkflowChangesCompleted
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent*
  parent: System.Workflow.Activities.ListenActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  nameWithType: ListenActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  fullName: ListenActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ListenActivity.xml
- uid: System.Workflow.ComponentModel.IActivityEventListener`1
  name: IActivityEventListener<T>
  nameWithType: IActivityEventListener<T>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: System.Workflow.ComponentModel.IActivityEventListener
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
