### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector
  commentId: T:System.Numerics.Vector
  id: Vector
  children:
  - System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.IsHardwareAccelerated
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  - System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  - System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  - System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  - System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  - System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  langs:
  - csharp
  name: Vector
  nameWithType: Vector
  fullName: System.Numerics.Vector
  type: Class
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static class Vector
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  id: Abs``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Abs<T>(Vector<T>)
  nameWithType: Vector.Abs<T>(Vector<T>)
  fullName: System.Numerics.Vector.Abs<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Abs<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Abs``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Add<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Add<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Add<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Add<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Add``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AndNot<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.AndNot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.AndNot<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> AndNot<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.AndNot``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  id: AsVectorByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorByte<T>(Vector<T>)
  nameWithType: Vector.AsVectorByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorByte<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<byte> AsVectorByte<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Byte}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorByte``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  id: AsVectorDouble``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorDouble<T>(Vector<T>)
  nameWithType: Vector.AsVectorDouble<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorDouble<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<double> AsVectorDouble<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Double}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorDouble``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  id: AsVectorInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorInt16<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt16<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<short> AsVectorInt16<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int16}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorInt16``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  id: AsVectorInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorInt32<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt32<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<int> AsVectorInt32<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorInt32``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  id: AsVectorInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorInt64<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt64<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<long> AsVectorInt64<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorInt64``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  id: AsVectorSByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorSByte<T>(Vector<T>)
  nameWithType: Vector.AsVectorSByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSByte<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<sbyte> AsVectorSByte<T> (System.Numerics.Vector<T> value) where T : struct;
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.SByte}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorSByte``1*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  id: AsVectorSingle``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorSingle<T>(Vector<T>)
  nameWithType: Vector.AsVectorSingle<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSingle<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<float> AsVectorSingle<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Single}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorSingle``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  id: AsVectorUInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorUInt16<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt16<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<ushort> AsVectorUInt16<T> (System.Numerics.Vector<T> value) where T : struct;
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt16}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorUInt16``1*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  id: AsVectorUInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorUInt32<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt32<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<uint> AsVectorUInt32<T> (System.Numerics.Vector<T> value) where T : struct;
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt32}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorUInt32``1*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  id: AsVectorUInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: AsVectorUInt64<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt64<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<ulong> AsVectorUInt64<T> (System.Numerics.Vector<T> value) where T : struct;
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt64}
      description: To be added.
  overload: System.Numerics.Vector.AsVectorUInt64``1*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: BitwiseAnd<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.BitwiseAnd<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseAnd<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> BitwiseAnd<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.BitwiseAnd``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: BitwiseOr<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.BitwiseOr<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseOr<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> BitwiseOr<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.BitwiseOr``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  nameWithType: Vector.ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<double> ConditionalSelect (System.Numerics.Vector<long> condition, System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: condition
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Double}
      description: To be added.
  overload: System.Numerics.Vector.ConditionalSelect*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  nameWithType: Vector.ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<float> ConditionalSelect (System.Numerics.Vector<int> condition, System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: condition
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Single}
      description: To be added.
  overload: System.Numerics.Vector.ConditionalSelect*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  nameWithType: Vector.ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> ConditionalSelect<T> (System.Numerics.Vector<T> condition, System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: condition
      type: System.Numerics.Vector`1
      description: To be added.
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.ConditionalSelect``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Divide<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Divide<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Divide<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Divide<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Divide``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Dot<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Dot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Dot<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static T Dot<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Numerics.Vector.Dot``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Equals(Vector<Double>, Vector<Double>)
  nameWithType: Vector.Equals(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.Equals(Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> Equals (System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Equals(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.Equals(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.Equals(Vector<Int32>, Vector<Int32>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> Equals (System.Numerics.Vector<int> left, System.Numerics.Vector<int> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Equals(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.Equals(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.Equals(Vector<Int64>, Vector<Int64>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> Equals (System.Numerics.Vector<long> left, System.Numerics.Vector<long> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Equals(Vector<Single>, Vector<Single>)
  nameWithType: Vector.Equals(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.Equals(Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> Equals (System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Equals<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Equals<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Equals<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Equals<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Equals``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: EqualsAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.EqualsAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAll<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool EqualsAll<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.EqualsAll``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: EqualsAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.EqualsAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAny<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool EqualsAny<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.EqualsAny``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThan(Vector<Double>, Vector<Double>)
  nameWithType: Vector.GreaterThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> GreaterThan (System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThan(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.GreaterThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Int32>, Vector<Int32>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> GreaterThan (System.Numerics.Vector<int> left, System.Numerics.Vector<int> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThan(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.GreaterThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Int64>, Vector<Int64>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> GreaterThan (System.Numerics.Vector<long> left, System.Numerics.Vector<long> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThan(Vector<Single>, Vector<Single>)
  nameWithType: Vector.GreaterThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> GreaterThan (System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThan<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThan<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> GreaterThan<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.GreaterThan``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAll<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanAll<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanAll``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAny<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanAny<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanAny``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> GreaterThanOrEqual (System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> GreaterThanOrEqual (System.Numerics.Vector<int> left, System.Numerics.Vector<int> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> GreaterThanOrEqual (System.Numerics.Vector<long> left, System.Numerics.Vector<long> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> GreaterThanOrEqual (System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> GreaterThanOrEqual<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqual``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanOrEqualAll<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqualAll``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool GreaterThanOrEqualAny<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.GreaterThanOrEqualAny``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.IsHardwareAccelerated
  commentId: P:System.Numerics.Vector.IsHardwareAccelerated
  id: IsHardwareAccelerated
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: IsHardwareAccelerated
  nameWithType: Vector.IsHardwareAccelerated
  fullName: System.Numerics.Vector.IsHardwareAccelerated
  type: Property
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static bool IsHardwareAccelerated { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.IsHardwareAccelerated*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThan(Vector<Double>, Vector<Double>)
  nameWithType: Vector.LessThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThan(Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> LessThan (System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.LessThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThan(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.LessThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThan(Vector<Int32>, Vector<Int32>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> LessThan (System.Numerics.Vector<int> left, System.Numerics.Vector<int> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.LessThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThan(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.LessThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThan(Vector<Int64>, Vector<Int64>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> LessThan (System.Numerics.Vector<long> left, System.Numerics.Vector<long> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.LessThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThan(Vector<Single>, Vector<Single>)
  nameWithType: Vector.LessThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThan(Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> LessThan (System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.LessThan*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThan<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThan<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> LessThan<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.LessThan``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAll<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanAll<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.LessThanAll``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAny<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanAny<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.LessThanAny``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  id: LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqual(Vector<Single>, Vector<Single>)
  nameWithType: Vector.LessThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Single>, Vector<Single>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> LessThanOrEqual (System.Numerics.Vector<float> left, System.Numerics.Vector<float> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Single}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  id: LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> LessThanOrEqual (System.Numerics.Vector<long> left, System.Numerics.Vector<long> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  id: LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqual(Vector<Double>, Vector<Double>)
  nameWithType: Vector.LessThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Double>, Vector<Double>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> LessThanOrEqual (System.Numerics.Vector<double> left, System.Numerics.Vector<double> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Double}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  id: LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> LessThanOrEqual (System.Numerics.Vector<int> left, System.Numerics.Vector<int> right);
    parameters:
    - id: left
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    - id: right
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqual*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqual<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqual<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> LessThanOrEqual<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqual``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanOrEqualAll<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqualAll``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static bool LessThanOrEqualAny<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector.LessThanOrEqualAny``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Max<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Max<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Max<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Max<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Max``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Min<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Min<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Min<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Min<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Min``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Multiply<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Multiply<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Multiply<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Multiply``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  commentId: M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  id: Multiply``1(System.Numerics.Vector{``0},``0)
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Multiply<T>(Vector<T>, T)
  nameWithType: Vector.Multiply<T>(Vector<T>, T)
  fullName: System.Numerics.Vector.Multiply<T>(Vector<T>, T)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Multiply<T> (System.Numerics.Vector<T> left, T right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: T
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Multiply``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  id: Multiply``1(``0,System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Multiply<T>(T, Vector<T>)
  nameWithType: Vector.Multiply<T>(T, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(T, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Multiply<T> (T left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: T
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Multiply``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  id: Negate``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Negate<T>(Vector<T>)
  nameWithType: Vector.Negate<T>(Vector<T>)
  fullName: System.Numerics.Vector.Negate<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Negate<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Negate``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  id: OnesComplement``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: OnesComplement<T>(Vector<T>)
  nameWithType: Vector.OnesComplement<T>(Vector<T>)
  fullName: System.Numerics.Vector.OnesComplement<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> OnesComplement<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.OnesComplement``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  id: SquareRoot``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: SquareRoot<T>(Vector<T>)
  nameWithType: Vector.SquareRoot<T>(Vector<T>)
  fullName: System.Numerics.Vector.SquareRoot<T>(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> SquareRoot<T> (System.Numerics.Vector<T> value) where T : struct;'
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.SquareRoot``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Subtract<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Subtract<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Subtract<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Subtract<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Subtract``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  commentId: M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  id: Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  langs:
  - csharp
  name: Xor<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Xor<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Xor<T>(Vector<T>, Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public static System.Numerics.Vector<T> Xor<T> (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right) where T : struct;'
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector.Xor``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Abs<T>(Vector<T>)
  nameWithType: Vector.Abs<T>(Vector<T>)
  fullName: System.Numerics.Vector.Abs<T>(Vector<T>)
- uid: System.Numerics.Vector`1
  parent: System.Numerics
  isExternal: false
  name: Vector<T>
  nameWithType: Vector<T>
  fullName: System.Numerics.Vector<T>
- uid: System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Add<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Add<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Add<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AndNot<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.AndNot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.AndNot<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorByte<T>(Vector<T>)
  nameWithType: Vector.AsVectorByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorByte<T>(Vector<T>)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Numerics.Vector{System.Byte}
  parent: System.Numerics
  isExternal: false
  name: Vector<Byte>
  nameWithType: Vector<Byte>
  fullName: System.Numerics.Vector<System.Byte>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorDouble<T>(Vector<T>)
  nameWithType: Vector.AsVectorDouble<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorDouble<T>(Vector<T>)
- uid: System.Double
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Numerics.Vector{System.Double}
  parent: System.Numerics
  isExternal: false
  name: Vector<Double>
  nameWithType: Vector<Double>
  fullName: System.Numerics.Vector<System.Double>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt16<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt16<T>(Vector<T>)
- uid: System.Int16
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Numerics.Vector{System.Int16}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int16>
  nameWithType: Vector<Int16>
  fullName: System.Numerics.Vector<System.Int16>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt32<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt32<T>(Vector<T>)
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector{System.Int32}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int32>
  nameWithType: Vector<Int32>
  fullName: System.Numerics.Vector<System.Int32>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt64<T>(Vector<T>)
  nameWithType: Vector.AsVectorInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorInt64<T>(Vector<T>)
- uid: System.Int64
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Numerics.Vector{System.Int64}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int64>
  nameWithType: Vector<Int64>
  fullName: System.Numerics.Vector<System.Int64>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorSByte<T>(Vector<T>)
  nameWithType: Vector.AsVectorSByte<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSByte<T>(Vector<T>)
- uid: System.SByte
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Numerics.Vector{System.SByte}
  parent: System.Numerics
  isExternal: false
  name: Vector<SByte>
  nameWithType: Vector<SByte>
  fullName: System.Numerics.Vector<System.SByte>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorSingle<T>(Vector<T>)
  nameWithType: Vector.AsVectorSingle<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorSingle<T>(Vector<T>)
- uid: System.Single
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector{System.Single}
  parent: System.Numerics
  isExternal: false
  name: Vector<Single>
  nameWithType: Vector<Single>
  fullName: System.Numerics.Vector<System.Single>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt16<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt16<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt16<T>(Vector<T>)
- uid: System.UInt16
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Numerics.Vector{System.UInt16}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt16>
  nameWithType: Vector<UInt16>
  fullName: System.Numerics.Vector<System.UInt16>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt32<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt32<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt32<T>(Vector<T>)
- uid: System.UInt32
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Numerics.Vector{System.UInt32}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt32>
  nameWithType: Vector<UInt32>
  fullName: System.Numerics.Vector<System.UInt32>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt64<T>(Vector<T>)
  nameWithType: Vector.AsVectorUInt64<T>(Vector<T>)
  fullName: System.Numerics.Vector.AsVectorUInt64<T>(Vector<T>)
- uid: System.UInt64
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Numerics.Vector{System.UInt64}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt64>
  nameWithType: Vector<UInt64>
  fullName: System.Numerics.Vector<System.UInt64>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: BitwiseAnd<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.BitwiseAnd<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseAnd<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: BitwiseOr<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.BitwiseOr<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.BitwiseOr<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  nameWithType: Vector.ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.ConditionalSelect(Vector<Int64>, Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  nameWithType: Vector.ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.ConditionalSelect(Vector<Int32>, Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  nameWithType: Vector.ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.ConditionalSelect<T>(Vector<T>, Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Divide<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Divide<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Divide<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Dot<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Dot<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Dot<T>(Vector<T>, Vector<T>)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals(Vector<Double>, Vector<Double>)
  nameWithType: Vector.Equals(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.Equals(Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.Equals(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.Equals(Vector<Int32>, Vector<Int32>)
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.Equals(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.Equals(Vector<Int64>, Vector<Int64>)
- uid: System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals(Vector<Single>, Vector<Single>)
  nameWithType: Vector.Equals(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.Equals(Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Equals<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Equals<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: EqualsAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.EqualsAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAll<T>(Vector<T>, Vector<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: EqualsAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.EqualsAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.EqualsAny<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan(Vector<Double>, Vector<Double>)
  nameWithType: Vector.GreaterThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.GreaterThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Int32>, Vector<Int32>)
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.GreaterThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Int64>, Vector<Int64>)
- uid: System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan(Vector<Single>, Vector<Single>)
  nameWithType: Vector.GreaterThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThan(Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThan<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAll<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanAny<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Int32>, Vector<Int32>)
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Int64>, Vector<Int64>)
- uid: System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  nameWithType: Vector.GreaterThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual(Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqual<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAll<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.GreaterThanOrEqualAny<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.IsHardwareAccelerated
  parent: System.Numerics.Vector
  isExternal: false
  name: IsHardwareAccelerated
  nameWithType: Vector.IsHardwareAccelerated
  fullName: System.Numerics.Vector.IsHardwareAccelerated
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan(Vector<Double>, Vector<Double>)
  nameWithType: Vector.LessThan(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThan(Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.LessThan(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThan(Vector<Int32>, Vector<Int32>)
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.LessThan(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThan(Vector<Int64>, Vector<Int64>)
- uid: System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan(Vector<Single>, Vector<Single>)
  nameWithType: Vector.LessThan(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThan(Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThan<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThan<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAll<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanAny<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual(Vector<Single>, Vector<Single>)
  nameWithType: Vector.LessThanOrEqual(Vector<Single>, Vector<Single>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Single>, Vector<Single>)
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  nameWithType: Vector.LessThanOrEqual(Vector<Int64>, Vector<Int64>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Int64>, Vector<Int64>)
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual(Vector<Double>, Vector<Double>)
  nameWithType: Vector.LessThanOrEqual(Vector<Double>, Vector<Double>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Double>, Vector<Double>)
- uid: System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  nameWithType: Vector.LessThanOrEqual(Vector<Int32>, Vector<Int32>)
  fullName: System.Numerics.Vector.LessThanOrEqual(Vector<Int32>, Vector<Int32>)
- uid: System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqual<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqual<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAll<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.LessThanOrEqualAny<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Max<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Max<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Max<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Min<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Min<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Min<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Multiply<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Multiply<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)
  parent: System.Numerics.Vector
  isExternal: false
  name: Multiply<T>(Vector<T>, T)
  nameWithType: Vector.Multiply<T>(Vector<T>, T)
  fullName: System.Numerics.Vector.Multiply<T>(Vector<T>, T)
- uid: System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Multiply<T>(T, Vector<T>)
  nameWithType: Vector.Multiply<T>(T, Vector<T>)
  fullName: System.Numerics.Vector.Multiply<T>(T, Vector<T>)
- uid: System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Negate<T>(Vector<T>)
  nameWithType: Vector.Negate<T>(Vector<T>)
  fullName: System.Numerics.Vector.Negate<T>(Vector<T>)
- uid: System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: OnesComplement<T>(Vector<T>)
  nameWithType: Vector.OnesComplement<T>(Vector<T>)
  fullName: System.Numerics.Vector.OnesComplement<T>(Vector<T>)
- uid: System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: SquareRoot<T>(Vector<T>)
  nameWithType: Vector.SquareRoot<T>(Vector<T>)
  fullName: System.Numerics.Vector.SquareRoot<T>(Vector<T>)
- uid: System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Subtract<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Subtract<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Subtract<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})
  parent: System.Numerics.Vector
  isExternal: false
  name: Xor<T>(Vector<T>, Vector<T>)
  nameWithType: Vector.Xor<T>(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector.Xor<T>(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector.Abs``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Abs<T>
  nameWithType: Vector.Abs<T>
  fullName: System.Numerics.Vector.Abs<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Add``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Add<T>
  nameWithType: Vector.Add<T>
  fullName: System.Numerics.Vector.Add<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AndNot``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AndNot<T>
  nameWithType: Vector.AndNot<T>
  fullName: System.Numerics.Vector.AndNot<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorByte``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorByte<T>
  nameWithType: Vector.AsVectorByte<T>
  fullName: System.Numerics.Vector.AsVectorByte<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorDouble``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorDouble<T>
  nameWithType: Vector.AsVectorDouble<T>
  fullName: System.Numerics.Vector.AsVectorDouble<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt16``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt16<T>
  nameWithType: Vector.AsVectorInt16<T>
  fullName: System.Numerics.Vector.AsVectorInt16<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt32``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt32<T>
  nameWithType: Vector.AsVectorInt32<T>
  fullName: System.Numerics.Vector.AsVectorInt32<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorInt64``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorInt64<T>
  nameWithType: Vector.AsVectorInt64<T>
  fullName: System.Numerics.Vector.AsVectorInt64<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorSByte``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorSByte<T>
  nameWithType: Vector.AsVectorSByte<T>
  fullName: System.Numerics.Vector.AsVectorSByte<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorSingle``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorSingle<T>
  nameWithType: Vector.AsVectorSingle<T>
  fullName: System.Numerics.Vector.AsVectorSingle<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt16``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt16<T>
  nameWithType: Vector.AsVectorUInt16<T>
  fullName: System.Numerics.Vector.AsVectorUInt16<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt32``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt32<T>
  nameWithType: Vector.AsVectorUInt32<T>
  fullName: System.Numerics.Vector.AsVectorUInt32<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.AsVectorUInt64``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: AsVectorUInt64<T>
  nameWithType: Vector.AsVectorUInt64<T>
  fullName: System.Numerics.Vector.AsVectorUInt64<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.BitwiseAnd``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: BitwiseAnd<T>
  nameWithType: Vector.BitwiseAnd<T>
  fullName: System.Numerics.Vector.BitwiseAnd<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.BitwiseOr``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: BitwiseOr<T>
  nameWithType: Vector.BitwiseOr<T>
  fullName: System.Numerics.Vector.BitwiseOr<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.ConditionalSelect*
  parent: System.Numerics.Vector
  isExternal: false
  name: ConditionalSelect
  nameWithType: Vector.ConditionalSelect
  fullName: System.Numerics.Vector.ConditionalSelect
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.ConditionalSelect``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: ConditionalSelect<T>
  nameWithType: Vector.ConditionalSelect<T>
  fullName: System.Numerics.Vector.ConditionalSelect<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Divide``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Divide<T>
  nameWithType: Vector.Divide<T>
  fullName: System.Numerics.Vector.Divide<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Dot``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Dot<T>
  nameWithType: Vector.Dot<T>
  fullName: System.Numerics.Vector.Dot<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals*
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals
  nameWithType: Vector.Equals
  fullName: System.Numerics.Vector.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Equals``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Equals<T>
  nameWithType: Vector.Equals<T>
  fullName: System.Numerics.Vector.Equals<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.EqualsAll``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: EqualsAll<T>
  nameWithType: Vector.EqualsAll<T>
  fullName: System.Numerics.Vector.EqualsAll<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.EqualsAny``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: EqualsAny<T>
  nameWithType: Vector.EqualsAny<T>
  fullName: System.Numerics.Vector.EqualsAny<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan
  nameWithType: Vector.GreaterThan
  fullName: System.Numerics.Vector.GreaterThan
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThan``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThan<T>
  nameWithType: Vector.GreaterThan<T>
  fullName: System.Numerics.Vector.GreaterThan<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanAll``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanAll<T>
  nameWithType: Vector.GreaterThanAll<T>
  fullName: System.Numerics.Vector.GreaterThanAll<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanAny``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanAny<T>
  nameWithType: Vector.GreaterThanAny<T>
  fullName: System.Numerics.Vector.GreaterThanAny<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: Vector.GreaterThanOrEqual
  fullName: System.Numerics.Vector.GreaterThanOrEqual
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqual``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqual<T>
  nameWithType: Vector.GreaterThanOrEqual<T>
  fullName: System.Numerics.Vector.GreaterThanOrEqual<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqualAll``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqualAll<T>
  nameWithType: Vector.GreaterThanOrEqualAll<T>
  fullName: System.Numerics.Vector.GreaterThanOrEqualAll<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.GreaterThanOrEqualAny``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: GreaterThanOrEqualAny<T>
  nameWithType: Vector.GreaterThanOrEqualAny<T>
  fullName: System.Numerics.Vector.GreaterThanOrEqualAny<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.IsHardwareAccelerated*
  parent: System.Numerics.Vector
  isExternal: false
  name: IsHardwareAccelerated
  nameWithType: Vector.IsHardwareAccelerated
  fullName: System.Numerics.Vector.IsHardwareAccelerated
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan
  nameWithType: Vector.LessThan
  fullName: System.Numerics.Vector.LessThan
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThan``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThan<T>
  nameWithType: Vector.LessThan<T>
  fullName: System.Numerics.Vector.LessThan<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanAll``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanAll<T>
  nameWithType: Vector.LessThanAll<T>
  fullName: System.Numerics.Vector.LessThanAll<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanAny``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanAny<T>
  nameWithType: Vector.LessThanAny<T>
  fullName: System.Numerics.Vector.LessThanAny<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual
  nameWithType: Vector.LessThanOrEqual
  fullName: System.Numerics.Vector.LessThanOrEqual
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqual``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqual<T>
  nameWithType: Vector.LessThanOrEqual<T>
  fullName: System.Numerics.Vector.LessThanOrEqual<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqualAll``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqualAll<T>
  nameWithType: Vector.LessThanOrEqualAll<T>
  fullName: System.Numerics.Vector.LessThanOrEqualAll<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.LessThanOrEqualAny``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: LessThanOrEqualAny<T>
  nameWithType: Vector.LessThanOrEqualAny<T>
  fullName: System.Numerics.Vector.LessThanOrEqualAny<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Max``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Max<T>
  nameWithType: Vector.Max<T>
  fullName: System.Numerics.Vector.Max<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Min``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Min<T>
  nameWithType: Vector.Min<T>
  fullName: System.Numerics.Vector.Min<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Multiply``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Multiply<T>
  nameWithType: Vector.Multiply<T>
  fullName: System.Numerics.Vector.Multiply<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Negate``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Negate<T>
  nameWithType: Vector.Negate<T>
  fullName: System.Numerics.Vector.Negate<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.OnesComplement``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: OnesComplement<T>
  nameWithType: Vector.OnesComplement<T>
  fullName: System.Numerics.Vector.OnesComplement<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.SquareRoot``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: SquareRoot<T>
  nameWithType: Vector.SquareRoot<T>
  fullName: System.Numerics.Vector.SquareRoot<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Subtract``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Subtract<T>
  nameWithType: Vector.Subtract<T>
  fullName: System.Numerics.Vector.Subtract<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
- uid: System.Numerics.Vector.Xor``1*
  parent: System.Numerics.Vector
  isExternal: false
  name: Xor<T>
  nameWithType: Vector.Xor<T>
  fullName: System.Numerics.Vector.Xor<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector.xml
