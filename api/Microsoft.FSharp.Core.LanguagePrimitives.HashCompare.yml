### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  commentId: T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  id: LanguagePrimitives.HashCompare
  children:
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)
  - Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)
  langs:
  - csharp
  name: LanguagePrimitives.HashCompare
  nameWithType: LanguagePrimitives.HashCompare
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      public static class LanguagePrimitives.HashCompare
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  id: FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastCompareTuple2<T1,T2> (System.Collections.IComparer comparer, Tuple<T1,T2> tuple1, Tuple<T1,T2> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`2
      description: To be added.
    - id: tuple2
      type: System.Tuple`2
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  id: FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastCompareTuple3<T1,T2,T3> (System.Collections.IComparer comparer, Tuple<T1,T2,T3> tuple1, Tuple<T1,T2,T3> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`3
      description: To be added.
    - id: tuple2
      type: System.Tuple`3
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  id: FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastCompareTuple4<T1,T2,T3,T4> (System.Collections.IComparer comparer, Tuple<T1,T2,T3,T4> tuple1, Tuple<T1,T2,T3,T4> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`4
      description: To be added.
    - id: tuple2
      type: System.Tuple`4
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  id: FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastCompareTuple5<T1,T2,T3,T4,T5> (System.Collections.IComparer comparer, Tuple<T1,T2,T3,T4,T5> tuple1, Tuple<T1,T2,T3,T4,T5> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`5
      description: To be added.
    - id: tuple2
      type: System.Tuple`5
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  id: FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool FastEqualsTuple2<T1,T2> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2> tuple1, Tuple<T1,T2> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`2
      description: To be added.
    - id: tuple2
      type: System.Tuple`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  id: FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool FastEqualsTuple3<T1,T2,T3> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3> tuple1, Tuple<T1,T2,T3> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`3
      description: To be added.
    - id: tuple2
      type: System.Tuple`3
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  id: FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool FastEqualsTuple4<T1,T2,T3,T4> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3,T4> tuple1, Tuple<T1,T2,T3,T4> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`4
      description: To be added.
    - id: tuple2
      type: System.Tuple`4
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  id: FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool FastEqualsTuple5<T1,T2,T3,T4,T5> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3,T4,T5> tuple1, Tuple<T1,T2,T3,T4,T5> tuple2);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple1
      type: System.Tuple`5
      description: To be added.
    - id: tuple2
      type: System.Tuple`5
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})
  id: FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastHashTuple2<T1,T2> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2> tuple);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple
      type: System.Tuple`2
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})
  id: FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastHashTuple3<T1,T2,T3> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3> tuple);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple
      type: System.Tuple`3
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})
  id: FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastHashTuple4<T1,T2,T3,T4> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3,T4> tuple);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple
      type: System.Tuple`4
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})
  id: FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int FastHashTuple5<T1,T2,T3,T4,T5> (System.Collections.IEqualityComparer comparer, Tuple<T1,T2,T3,T4,T5> tuple);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: tuple
      type: System.Tuple`5
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)
  id: GenericComparisonIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericComparisonIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int GenericComparisonIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)
  id: GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int GenericComparisonWithComparerIntrinsic<T> (System.Collections.IComparer comp, T x, T y);
    parameters:
    - id: comp
      type: System.Collections.IComparer
      description: To be added.
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)
  id: GenericEqualityERIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericEqualityERIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericEqualityERIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)
  id: GenericEqualityIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericEqualityIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericEqualityIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)
  id: GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericEqualityWithComparerIntrinsic<T> (System.Collections.IEqualityComparer comp, T x, T y);
    parameters:
    - id: comp
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)
  id: GenericGreaterOrEqualIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericGreaterOrEqualIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericGreaterOrEqualIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)
  id: GenericGreaterThanIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericGreaterThanIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericGreaterThanIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)
  id: GenericHashIntrinsic``1(``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericHashIntrinsic<T>(T)
  nameWithType: LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>(T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int GenericHashIntrinsic<T> (T input);
    parameters:
    - id: input
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)
  id: GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int GenericHashWithComparerIntrinsic<T> (System.Collections.IEqualityComparer comp, T input);
    parameters:
    - id: comp
      type: System.Collections.IEqualityComparer
      description: To be added.
    - id: input
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)
  id: GenericLessOrEqualIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericLessOrEqualIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericLessOrEqualIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)
  id: GenericLessThanIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: GenericLessThanIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool GenericLessThanIntrinsic<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)
  id: LimitedGenericHashIntrinsic``1(System.Int32,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: LimitedGenericHashIntrinsic<T>(Int32, T)
  nameWithType: LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>(Int32, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>(Int32, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int LimitedGenericHashIntrinsic<T> (int limit, T input);
    parameters:
    - id: limit
      type: System.Int32
      description: To be added.
    - id: input
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)
  id: PhysicalEqualityIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: PhysicalEqualityIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static bool PhysicalEqualityIntrinsic<T> (T x, T y) where T : class;
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)
  commentId: M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)
  id: PhysicalHashIntrinsic``1(``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  langs:
  - csharp
  name: PhysicalHashIntrinsic<T>(T)
  nameWithType: LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>(T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)]

      public static int PhysicalHashIntrinsic<T> (T input) where T : class;
    parameters:
    - id: input
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>(IComparer, Tuple<T1,T2>, Tuple<T1,T2>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Tuple`2
  parent: System
  isExternal: false
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>(IComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
- uid: System.Tuple`3
  parent: System
  isExternal: false
  name: Tuple<T1,T2,T3>
  nameWithType: Tuple<T1,T2,T3>
  fullName: System.Tuple<T1,T2,T3>
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>(IComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
- uid: System.Tuple`4
  parent: System
  isExternal: false
  name: Tuple<T1,T2,T3,T4>
  nameWithType: Tuple<T1,T2,T3,T4>
  fullName: System.Tuple<T1,T2,T3,T4>
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>(IComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
- uid: System.Tuple`5
  parent: System
  isExternal: false
  name: Tuple<T1,T2,T3,T4,T5>
  nameWithType: Tuple<T1,T2,T3,T4,T5>
  fullName: System.Tuple<T1,T2,T3,T4,T5>
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>, Tuple<T1,T2>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>, Tuple<T1,T2,T3>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>, Tuple<T1,T2,T3,T4>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>, Tuple<T1,T2,T3,T4,T5>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>(IEqualityComparer, Tuple<T1,T2>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>(IEqualityComparer, Tuple<T1,T2,T3>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>(IEqualityComparer, Tuple<T1,T2,T3,T4>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>(IEqualityComparer, Tuple<T1,T2,T3,T4,T5>)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericComparisonIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>(T, T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>(IComparer, T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityERIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>(IEqualityComparer, T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericGreaterOrEqualIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericGreaterThanIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericHashIntrinsic<T>(T)
  nameWithType: LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>(T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>(T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>(IEqualityComparer, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericLessOrEqualIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericLessThanIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: LimitedGenericHashIntrinsic<T>(Int32, T)
  nameWithType: LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>(Int32, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>(Int32, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: PhysicalEqualityIntrinsic<T>(T, T)
  nameWithType: LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>(T, T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>(T, T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: PhysicalHashIntrinsic<T>(T)
  nameWithType: LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>(T)
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>(T)
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple2<T1,T2>
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple3<T1,T2,T3>
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple4<T1,T2,T3,T4>
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4<T1,T2,T3,T4>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastCompareTuple5<T1,T2,T3,T4,T5>
  nameWithType: LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5<T1,T2,T3,T4,T5>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple2<T1,T2>
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple3<T1,T2,T3>
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple4<T1,T2,T3,T4>
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4<T1,T2,T3,T4>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastEqualsTuple5<T1,T2,T3,T4,T5>
  nameWithType: LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5<T1,T2,T3,T4,T5>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple2<T1,T2>
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple3<T1,T2,T3>
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple4<T1,T2,T3,T4>
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4<T1,T2,T3,T4>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: FastHashTuple5<T1,T2,T3,T4,T5>
  nameWithType: LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5<T1,T2,T3,T4,T5>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericComparisonIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericComparisonWithComparerIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityERIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericEqualityWithComparerIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericGreaterOrEqualIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericGreaterThanIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericHashIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericHashWithComparerIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericLessOrEqualIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: GenericLessThanIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: LimitedGenericHashIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: PhysicalEqualityIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
- uid: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1*
  parent: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare
  isExternal: false
  name: PhysicalHashIntrinsic<T>
  nameWithType: LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>
  fullName: Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/LanguagePrimitives+HashCompare.xml
