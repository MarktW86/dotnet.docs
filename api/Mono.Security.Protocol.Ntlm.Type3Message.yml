### YamlMime:ManagedReference
items:
- uid: Mono.Security.Protocol.Ntlm.Type3Message
  commentId: T:Mono.Security.Protocol.Ntlm.Type3Message
  id: Type3Message
  children:
  - Mono.Security.Protocol.Ntlm.Type3Message.#ctor
  - Mono.Security.Protocol.Ntlm.Type3Message.#ctor(Mono.Security.Protocol.Ntlm.Type2Message)
  - Mono.Security.Protocol.Ntlm.Type3Message.#ctor(System.Byte[])
  - Mono.Security.Protocol.Ntlm.Type3Message.Challenge
  - Mono.Security.Protocol.Ntlm.Type3Message.Decode(System.Byte[])
  - Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel
  - Mono.Security.Protocol.Ntlm.Type3Message.Domain
  - Mono.Security.Protocol.Ntlm.Type3Message.Finalize
  - Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
  - Mono.Security.Protocol.Ntlm.Type3Message.Host
  - Mono.Security.Protocol.Ntlm.Type3Message.Level
  - Mono.Security.Protocol.Ntlm.Type3Message.LM
  - Mono.Security.Protocol.Ntlm.Type3Message.NT
  - Mono.Security.Protocol.Ntlm.Type3Message.Password
  - Mono.Security.Protocol.Ntlm.Type3Message.Username
  langs:
  - csharp
  name: Type3Message
  nameWithType: Type3Message
  fullName: Mono.Security.Protocol.Ntlm.Type3Message
  type: Class
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: 'public class Type3Message : Mono.Security.Protocol.Ntlm.MessageBase'
  inheritance:
  - System.Object
  - Mono.Security.Protocol.Ntlm.MessageBase
  implements: []
  inheritedMembers:
  - Mono.Security.Protocol.Ntlm.MessageBase.CheckHeader(System.Byte[])
  - Mono.Security.Protocol.Ntlm.MessageBase.Flags
  - Mono.Security.Protocol.Ntlm.MessageBase.PrepareMessage(System.Int32)
  - Mono.Security.Protocol.Ntlm.MessageBase.Type
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.#ctor
  id: '#ctor'
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Type3Message()
  nameWithType: Type3Message.Type3Message()
  fullName: Type3Message.Type3Message()
  type: Constructor
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: >-
      [System.Obsolete("Use of this API is highly discouraged, it selects legacy-mode LM/NTLM authentication, which sends your password in very weak encryption over the wire even if the server supports the more secure NTLMv2 / NTLMv2 Session. You need to use the new `Type3Message (Type2Message)' constructor to use the more secure NTLMv2 / NTLMv2 Session authentication modes. These require the Type 2 message from the server to compute the response.")]

      public Type3Message ();
    parameters: []
  overload: Mono.Security.Protocol.Ntlm.Type3Message.#ctor*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor(Mono.Security.Protocol.Ntlm.Type2Message)
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.#ctor(Mono.Security.Protocol.Ntlm.Type2Message)
  id: '#ctor(Mono.Security.Protocol.Ntlm.Type2Message)'
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Type3Message(Type2Message)
  nameWithType: Type3Message.Type3Message(Type2Message)
  fullName: Type3Message.Type3Message(Type2Message)
  type: Constructor
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public Type3Message (Mono.Security.Protocol.Ntlm.Type2Message type2);
    parameters:
    - id: type2
      type: Mono.Security.Protocol.Ntlm.Type2Message
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor(System.Byte[])
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Type3Message(Byte[])
  nameWithType: Type3Message.Type3Message(Byte[])
  fullName: Type3Message.Type3Message(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public Type3Message (byte[] message);
    parameters:
    - id: message
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Challenge
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Challenge
  id: Challenge
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Challenge
  nameWithType: Type3Message.Challenge
  fullName: Type3Message.Challenge
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: >-
      [System.Obsolete("Use of this API is highly discouraged, it selects legacy-mode LM/NTLM authentication, which sends your password in very weak encryption over the wire even if the server supports the more secure NTLMv2 / NTLMv2 Session. You need to use the new `Type3Message (Type2Message)' constructor to use the more secure NTLMv2 / NTLMv2 Session authentication modes. These require the Type 2 message from the server to compute the response.")]

      public byte[] Challenge { get; set; }
    return:
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Challenge*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Decode(System.Byte[])
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: Type3Message.Decode(Byte[])
  fullName: Type3Message.Decode(Byte[])
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: protected override void Decode (byte[] message);
    parameters:
    - id: message
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Decode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel
  id: DefaultAuthLevel
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: DefaultAuthLevel
  nameWithType: Type3Message.DefaultAuthLevel
  fullName: Type3Message.DefaultAuthLevel
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: >-
      [System.Obsolete("Use NtlmSettings.DefaultAuthLevel")]

      public static Mono.Security.Protocol.Ntlm.NtlmAuthLevel DefaultAuthLevel { get; set; }
    return:
      type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Domain
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Domain
  id: Domain
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Domain
  nameWithType: Type3Message.Domain
  fullName: Type3Message.Domain
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Domain*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Finalize
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.Finalize
  id: Finalize
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Finalize()
  nameWithType: Type3Message.Finalize()
  fullName: Type3Message.Finalize()
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: ~Type3Message ();
    parameters: []
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Finalize*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
  commentId: M:Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
  id: GetBytes
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: GetBytes()
  nameWithType: Type3Message.GetBytes()
  fullName: Type3Message.GetBytes()
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public override byte[] GetBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Host
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Host
  id: Host
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Host
  nameWithType: Type3Message.Host
  fullName: Type3Message.Host
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Host*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Level
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Level
  id: Level
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Level
  nameWithType: Type3Message.Level
  fullName: Type3Message.Level
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public Mono.Security.Protocol.Ntlm.NtlmAuthLevel Level { get; set; }
    return:
      type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Level*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.LM
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.LM
  id: LM
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: LM
  nameWithType: Type3Message.LM
  fullName: Type3Message.LM
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public byte[] LM { get; }
    return:
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.LM*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.NT
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.NT
  id: NT
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: NT
  nameWithType: Type3Message.NT
  fullName: Type3Message.NT
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public byte[] NT { get; set; }
    return:
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.NT*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Password
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Password
  id: Password
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Password
  nameWithType: Type3Message.Password
  fullName: Type3Message.Password
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Password*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Username
  commentId: P:Mono.Security.Protocol.Ntlm.Type3Message.Username
  id: Username
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  langs:
  - csharp
  name: Username
  nameWithType: Type3Message.Username
  fullName: Type3Message.Username
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Protocol.Ntlm
  syntax:
    content: public string Username { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: Mono.Security.Protocol.Ntlm.Type3Message.Username*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
references:
- uid: Mono.Security.Protocol.Ntlm.MessageBase
  parent: Mono.Security.Protocol.Ntlm
  isExternal: false
  name: MessageBase
  nameWithType: MessageBase
  fullName: Mono.Security.Protocol.Ntlm.MessageBase
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Type3Message()
  nameWithType: Type3Message.Type3Message()
  fullName: Type3Message.Type3Message()
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor(Mono.Security.Protocol.Ntlm.Type2Message)
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Type3Message(Type2Message)
  nameWithType: Type3Message.Type3Message(Type2Message)
  fullName: Type3Message.Type3Message(Type2Message)
- uid: Mono.Security.Protocol.Ntlm.Type2Message
  parent: Mono.Security.Protocol.Ntlm
  isExternal: false
  name: Type2Message
  nameWithType: Type2Message
  fullName: Mono.Security.Protocol.Ntlm.Type2Message
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor(System.Byte[])
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Type3Message(Byte[])
  nameWithType: Type3Message.Type3Message(Byte[])
  fullName: Type3Message.Type3Message(Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Challenge
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Challenge
  nameWithType: Type3Message.Challenge
  fullName: Type3Message.Challenge
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Decode(System.Byte[])
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Decode(Byte[])
  nameWithType: Type3Message.Decode(Byte[])
  fullName: Type3Message.Decode(Byte[])
- uid: Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: DefaultAuthLevel
  nameWithType: Type3Message.DefaultAuthLevel
  fullName: Type3Message.DefaultAuthLevel
- uid: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
  parent: Mono.Security.Protocol.Ntlm
  isExternal: false
  name: NtlmAuthLevel
  nameWithType: NtlmAuthLevel
  fullName: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Domain
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Domain
  nameWithType: Type3Message.Domain
  fullName: Type3Message.Domain
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Finalize
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Finalize()
  nameWithType: Type3Message.Finalize()
  fullName: Type3Message.Finalize()
- uid: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: GetBytes()
  nameWithType: Type3Message.GetBytes()
  fullName: Type3Message.GetBytes()
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Host
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Host
  nameWithType: Type3Message.Host
  fullName: Type3Message.Host
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Level
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Level
  nameWithType: Type3Message.Level
  fullName: Type3Message.Level
- uid: Mono.Security.Protocol.Ntlm.Type3Message.LM
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: LM
  nameWithType: Type3Message.LM
  fullName: Type3Message.LM
- uid: Mono.Security.Protocol.Ntlm.Type3Message.NT
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: NT
  nameWithType: Type3Message.NT
  fullName: Type3Message.NT
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Password
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Password
  nameWithType: Type3Message.Password
  fullName: Type3Message.Password
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Username
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Username
  nameWithType: Type3Message.Username
  fullName: Type3Message.Username
- uid: Mono.Security.Protocol.Ntlm.Type3Message.#ctor*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Type3Message
  nameWithType: Type3Message.Type3Message
  fullName: Type3Message.Type3Message
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Challenge*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Challenge
  nameWithType: Type3Message.Challenge
  fullName: Type3Message.Challenge
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Decode*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Decode
  nameWithType: Type3Message.Decode
  fullName: Type3Message.Decode
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.DefaultAuthLevel*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: DefaultAuthLevel
  nameWithType: Type3Message.DefaultAuthLevel
  fullName: Type3Message.DefaultAuthLevel
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Domain*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Domain
  nameWithType: Type3Message.Domain
  fullName: Type3Message.Domain
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Finalize*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Finalize
  nameWithType: Type3Message.Finalize
  fullName: Type3Message.Finalize
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: GetBytes
  nameWithType: Type3Message.GetBytes
  fullName: Type3Message.GetBytes
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Host*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Host
  nameWithType: Type3Message.Host
  fullName: Type3Message.Host
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Level*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Level
  nameWithType: Type3Message.Level
  fullName: Type3Message.Level
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.LM*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: LM
  nameWithType: Type3Message.LM
  fullName: Type3Message.LM
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.NT*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: NT
  nameWithType: Type3Message.NT
  fullName: Type3Message.NT
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Password*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Password
  nameWithType: Type3Message.Password
  fullName: Type3Message.Password
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
- uid: Mono.Security.Protocol.Ntlm.Type3Message.Username*
  parent: Mono.Security.Protocol.Ntlm.Type3Message
  isExternal: false
  name: Username
  nameWithType: Type3Message.Username
  fullName: Type3Message.Username
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Protocol.Ntlm/Type3Message.xml
