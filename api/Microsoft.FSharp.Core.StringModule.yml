### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.StringModule
  commentId: T:Microsoft.FSharp.Core.StringModule
  id: StringModule
  children:
  - Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)
  - Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  - Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  - Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  - Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})
  - Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)
  - Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)
  - Microsoft.FSharp.Core.StringModule.Length(System.String)
  - Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)
  - Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)
  - Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)
  langs:
  - csharp
  name: StringModule
  nameWithType: StringModule
  fullName: Microsoft.FSharp.Core.StringModule
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      [Microsoft.FSharp.Core.CompilationRepresentation(Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix)]

      [Microsoft.FSharp.Core.RequireQualifiedAccess]

      public static class StringModule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompilationRepresentationAttribute
  - type: Microsoft.FSharp.Core.RequireQualifiedAccessAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)
  id: Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Collect(FSharpFunc<Char,String>, String)
  nameWithType: StringModule.Collect(FSharpFunc<Char,String>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Collect(FSharpFunc<Char,String>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("collect")]

      public static string Collect (Microsoft.FSharp.Core.FSharpFunc<char,string> mapping, string str);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Collect*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Concat(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Concat(String, IEnumerable<String>)
  nameWithType: StringModule.Concat(String, IEnumerable<String>)
  fullName: Microsoft.FSharp.Core.StringModule.Concat(String, IEnumerable<String>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("concat")]

      public static string Concat (string sep, System.Collections.Generic.IEnumerable<string> strings);
    parameters:
    - id: sep
      type: System.String
      description: To be added.
    - id: strings
      type: System.Collections.Generic.IEnumerable{System.String}
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Concat*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  id: Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Exists(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.Exists(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Exists(FSharpFunc<Char,Boolean>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("exists")]

      public static bool Exists (Microsoft.FSharp.Core.FSharpFunc<char,bool> predicate, string str);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Exists*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  id: Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Filter(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.Filter(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Filter(FSharpFunc<Char,Boolean>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("filter")]

      public static string Filter (Microsoft.FSharp.Core.FSharpFunc<char,bool> predicate, string str);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Filter*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  id: ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: ForAll(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.ForAll(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.ForAll(FSharpFunc<Char,Boolean>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("forall")]

      public static bool ForAll (Microsoft.FSharp.Core.FSharpFunc<char,bool> predicate, string str);
    parameters:
    - id: predicate
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.ForAll*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})
  commentId: M:Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})
  id: Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Initialize(Int32, FSharpFunc<Int32,String>)
  nameWithType: StringModule.Initialize(Int32, FSharpFunc<Int32,String>)
  fullName: Microsoft.FSharp.Core.StringModule.Initialize(Int32, FSharpFunc<Int32,String>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("init")]

      public static string Initialize (int count, Microsoft.FSharp.Core.FSharpFunc<int,string> initializer);
    parameters:
    - id: count
      type: System.Int32
      description: To be added.
    - id: initializer
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String}
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Initialize*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)
  id: Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Iterate(FSharpFunc<Char,Unit>, String)
  nameWithType: StringModule.Iterate(FSharpFunc<Char,Unit>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Iterate(FSharpFunc<Char,Unit>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("iter")]

      public static void Iterate (Microsoft.FSharp.Core.FSharpFunc<char,Microsoft.FSharp.Core.Unit> action, string str);
    parameters:
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Iterate*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)
  id: IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
  nameWithType: StringModule.IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
  fullName: Microsoft.FSharp.Core.StringModule.IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("iteri")]

      public static void IterateIndexed (Microsoft.FSharp.Core.FSharpFunc<int,Microsoft.FSharp.Core.FSharpFunc<char,Microsoft.FSharp.Core.Unit>> action, string str);
    parameters:
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.IterateIndexed*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Length(System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Length(System.String)
  id: Length(System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Length(String)
  nameWithType: StringModule.Length(String)
  fullName: Microsoft.FSharp.Core.StringModule.Length(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("length")]

      public static int Length (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Length*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)
  id: Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Map(FSharpFunc<Char,Char>, String)
  nameWithType: StringModule.Map(FSharpFunc<Char,Char>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Map(FSharpFunc<Char,Char>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("map")]

      public static string Map (Microsoft.FSharp.Core.FSharpFunc<char,char> mapping, string str);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Map*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)
  id: MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
  nameWithType: StringModule.MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
  fullName: Microsoft.FSharp.Core.StringModule.MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("mapi")]

      public static string MapIndexed (Microsoft.FSharp.Core.FSharpFunc<int,Microsoft.FSharp.Core.FSharpFunc<char,char>> mapping, string str);
    parameters:
    - id: mapping
      type: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}}
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.MapIndexed*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)
  commentId: M:Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)
  id: Replicate(System.Int32,System.String)
  parent: Microsoft.FSharp.Core.StringModule
  langs:
  - csharp
  name: Replicate(Int32, String)
  nameWithType: StringModule.Replicate(Int32, String)
  fullName: Microsoft.FSharp.Core.StringModule.Replicate(Int32, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("replicate")]

      public static string Replicate (int count, string str);
    parameters:
    - id: count
      type: System.Int32
      description: To be added.
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.StringModule.Replicate*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Collect(FSharpFunc<Char,String>, String)
  nameWithType: StringModule.Collect(FSharpFunc<Char,String>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Collect(FSharpFunc<Char,String>, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: System.Char
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Char,String>
  nameWithType: FSharpFunc<Char,String>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Char,System.String>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Concat(String, IEnumerable<String>)
  nameWithType: StringModule.Concat(String, IEnumerable<String>)
  fullName: Microsoft.FSharp.Core.StringModule.Concat(String, IEnumerable<String>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Exists(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.Exists(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Exists(FSharpFunc<Char,Boolean>, String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Char,Boolean>
  nameWithType: FSharpFunc<Char,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Char,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Filter(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.Filter(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Filter(FSharpFunc<Char,Boolean>, String)
- uid: Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: ForAll(FSharpFunc<Char,Boolean>, String)
  nameWithType: StringModule.ForAll(FSharpFunc<Char,Boolean>, String)
  fullName: Microsoft.FSharp.Core.StringModule.ForAll(FSharpFunc<Char,Boolean>, String)
- uid: Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Initialize(Int32, FSharpFunc<Int32,String>)
  nameWithType: StringModule.Initialize(Int32, FSharpFunc<Int32,String>)
  fullName: Microsoft.FSharp.Core.StringModule.Initialize(Int32, FSharpFunc<Int32,String>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,String>
  nameWithType: FSharpFunc<Int32,String>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,System.String>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Iterate(FSharpFunc<Char,Unit>, String)
  nameWithType: StringModule.Iterate(FSharpFunc<Char,Unit>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Iterate(FSharpFunc<Char,Unit>, String)
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Char,Unit>
  nameWithType: FSharpFunc<Char,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Char,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
  nameWithType: StringModule.IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
  fullName: Microsoft.FSharp.Core.StringModule.IterateIndexed(FSharpFunc<Int32,FSharpFunc<Char,Unit>>, String)
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,FSharpFunc<Char,Unit>>
  nameWithType: FSharpFunc<Int32,FSharpFunc<Char,Unit>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,Microsoft.FSharp.Core.FSharpFunc<System.Char,Microsoft.FSharp.Core.Unit>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Length(System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Length(String)
  nameWithType: StringModule.Length(String)
  fullName: Microsoft.FSharp.Core.StringModule.Length(String)
- uid: Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Map(FSharpFunc<Char,Char>, String)
  nameWithType: StringModule.Map(FSharpFunc<Char,Char>, String)
  fullName: Microsoft.FSharp.Core.StringModule.Map(FSharpFunc<Char,Char>, String)
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Char,Char>
  nameWithType: FSharpFunc<Char,Char>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Char,System.Char>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
  nameWithType: StringModule.MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
  fullName: Microsoft.FSharp.Core.StringModule.MapIndexed(FSharpFunc<Int32,FSharpFunc<Char,Char>>, String)
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Int32,FSharpFunc<Char,Char>>
  nameWithType: FSharpFunc<Int32,FSharpFunc<Char,Char>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Int32,Microsoft.FSharp.Core.FSharpFunc<System.Char,System.Char>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Replicate(Int32, String)
  nameWithType: StringModule.Replicate(Int32, String)
  fullName: Microsoft.FSharp.Core.StringModule.Replicate(Int32, String)
- uid: Microsoft.FSharp.Core.StringModule.Collect*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Collect
  nameWithType: StringModule.Collect
  fullName: Microsoft.FSharp.Core.StringModule.Collect
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Concat*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Concat
  nameWithType: StringModule.Concat
  fullName: Microsoft.FSharp.Core.StringModule.Concat
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Exists*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Exists
  nameWithType: StringModule.Exists
  fullName: Microsoft.FSharp.Core.StringModule.Exists
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Filter*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Filter
  nameWithType: StringModule.Filter
  fullName: Microsoft.FSharp.Core.StringModule.Filter
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.ForAll*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: ForAll
  nameWithType: StringModule.ForAll
  fullName: Microsoft.FSharp.Core.StringModule.ForAll
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Initialize*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Initialize
  nameWithType: StringModule.Initialize
  fullName: Microsoft.FSharp.Core.StringModule.Initialize
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Iterate*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Iterate
  nameWithType: StringModule.Iterate
  fullName: Microsoft.FSharp.Core.StringModule.Iterate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.IterateIndexed*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: IterateIndexed
  nameWithType: StringModule.IterateIndexed
  fullName: Microsoft.FSharp.Core.StringModule.IterateIndexed
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Length*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Length
  nameWithType: StringModule.Length
  fullName: Microsoft.FSharp.Core.StringModule.Length
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Map*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Map
  nameWithType: StringModule.Map
  fullName: Microsoft.FSharp.Core.StringModule.Map
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.MapIndexed*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: MapIndexed
  nameWithType: StringModule.MapIndexed
  fullName: Microsoft.FSharp.Core.StringModule.MapIndexed
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
- uid: Microsoft.FSharp.Core.StringModule.Replicate*
  parent: Microsoft.FSharp.Core.StringModule
  isExternal: false
  name: Replicate
  nameWithType: StringModule.Replicate
  fullName: Microsoft.FSharp.Core.StringModule.Replicate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/StringModule.xml
