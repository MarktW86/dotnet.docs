### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.Operators
  commentId: T:Microsoft.FSharp.Core.Operators
  id: Operators
  children:
  - Microsoft.FSharp.Core.Operators.Abs``1(``0)
  - Microsoft.FSharp.Core.Operators.Acos``1(``0)
  - Microsoft.FSharp.Core.Operators.Asin``1(``0)
  - Microsoft.FSharp.Core.Operators.Atan``1(``0)
  - Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)
  - Microsoft.FSharp.Core.Operators.Box``1(``0)
  - Microsoft.FSharp.Core.Operators.Ceiling``1(``0)
  - Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.ConsoleError``1
  - Microsoft.FSharp.Core.Operators.ConsoleIn``1
  - Microsoft.FSharp.Core.Operators.ConsoleOut``1
  - Microsoft.FSharp.Core.Operators.Cos``1(``0)
  - Microsoft.FSharp.Core.Operators.Cosh``1(``0)
  - Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})
  - Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  - Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)
  - Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)
  - Microsoft.FSharp.Core.Operators.Exp``1(``0)
  - Microsoft.FSharp.Core.Operators.Failure(System.String)
  - Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)
  - Microsoft.FSharp.Core.Operators.FailWith``1(System.String)
  - Microsoft.FSharp.Core.Operators.Floor``1(``0)
  - Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})
  - Microsoft.FSharp.Core.Operators.Hash``1(``0)
  - Microsoft.FSharp.Core.Operators.Identity``1(``0)
  - Microsoft.FSharp.Core.Operators.Ignore``1(``0)
  - Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  - Microsoft.FSharp.Core.Operators.Infinity
  - Microsoft.FSharp.Core.Operators.InfinitySingle
  - Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)
  - Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)
  - Microsoft.FSharp.Core.Operators.IsNull``1(``0)
  - Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})
  - Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)
  - Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})
  - Microsoft.FSharp.Core.Operators.Log``1(``0)
  - Microsoft.FSharp.Core.Operators.Log10``1(``0)
  - Microsoft.FSharp.Core.Operators.Max``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.Min``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.NaN
  - Microsoft.FSharp.Core.Operators.NaNSingle
  - Microsoft.FSharp.Core.Operators.Not(System.Boolean)
  - Microsoft.FSharp.Core.Operators.NullArg``1(System.String)
  - Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})
  - Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)
  - Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})
  - Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})
  - Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)
  - Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})
  - Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)
  - Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)
  - Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)
  - Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  - Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)
  - Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  - Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})
  - Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})
  - Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)
  - Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)
  - Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)
  - Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)
  - Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)
  - Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)
  - Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)
  - Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)
  - Microsoft.FSharp.Core.Operators.Ref``1(``0)
  - Microsoft.FSharp.Core.Operators.Reraise``1
  - Microsoft.FSharp.Core.Operators.Rethrow``1
  - Microsoft.FSharp.Core.Operators.Round``1(``0)
  - Microsoft.FSharp.Core.Operators.Sign``1(``0)
  - Microsoft.FSharp.Core.Operators.Sin``1(``0)
  - Microsoft.FSharp.Core.Operators.Sinh``1(``0)
  - Microsoft.FSharp.Core.Operators.SizeOf``1
  - Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})
  - Microsoft.FSharp.Core.Operators.Sqrt``2(``0)
  - Microsoft.FSharp.Core.Operators.Tan``1(``0)
  - Microsoft.FSharp.Core.Operators.Tanh``1(``0)
  - Microsoft.FSharp.Core.Operators.ToByte``1(``0)
  - Microsoft.FSharp.Core.Operators.ToChar``1(``0)
  - Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)
  - Microsoft.FSharp.Core.Operators.ToDouble``1(``0)
  - Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)
  - Microsoft.FSharp.Core.Operators.ToInt``1(``0)
  - Microsoft.FSharp.Core.Operators.ToInt16``1(``0)
  - Microsoft.FSharp.Core.Operators.ToInt32``1(``0)
  - Microsoft.FSharp.Core.Operators.ToInt64``1(``0)
  - Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)
  - Microsoft.FSharp.Core.Operators.ToSByte``1(``0)
  - Microsoft.FSharp.Core.Operators.ToSingle``1(``0)
  - Microsoft.FSharp.Core.Operators.ToString``1(``0)
  - Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)
  - Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)
  - Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)
  - Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)
  - Microsoft.FSharp.Core.Operators.Truncate``1(``0)
  - Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)
  - Microsoft.FSharp.Core.Operators.TypeDefOf``1
  - Microsoft.FSharp.Core.Operators.TypeOf``1
  - Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)
  - Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  langs:
  - csharp
  name: Operators
  nameWithType: Operators
  fullName: Microsoft.FSharp.Core.Operators
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AutoOpen]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      public static class Operators
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AutoOpenAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Abs``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Abs``1(``0)
  id: Abs``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Abs<T>(T)
  nameWithType: Operators.Abs<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Abs<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("abs")]

      public static T Abs<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Abs``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Acos``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Acos``1(``0)
  id: Acos``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Acos<T>(T)
  nameWithType: Operators.Acos<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Acos<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("acos")]

      public static T Acos<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Acos``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Asin``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Asin``1(``0)
  id: Asin``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Asin<T>(T)
  nameWithType: Operators.Asin<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Asin<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("asin")]

      public static T Asin<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Asin``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Atan``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Atan``1(``0)
  id: Atan``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Atan<T>(T)
  nameWithType: Operators.Atan<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Atan<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("atan")]

      public static T Atan<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Atan``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)
  id: Atan2``2(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Atan2<T1,T2>(T1, T1)
  nameWithType: Operators.Atan2<T1,T2>(T1, T1)
  fullName: Microsoft.FSharp.Core.Operators.Atan2<T1,T2>(T1, T1)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("atan2")]

      public static T2 Atan2<T1,T2> (T1 y, T1 x);
    parameters:
    - id: y
      type: T1
      description: To be added.
    - id: x
      type: T1
      description: To be added.
    return:
      type: T2
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Atan2``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Box``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Box``1(``0)
  id: Box``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Box<T>(T)
  nameWithType: Operators.Box<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Box<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("box")]

      public static object Box<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Box``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ceiling``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)
  id: Ceiling``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Ceiling<T>(T)
  nameWithType: Operators.Ceiling<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ceiling<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("ceil")]

      public static T Ceiling<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Ceiling``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)
  id: Compare``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Compare<T>(T, T)
  nameWithType: Operators.Compare<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Compare<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("compare")]

      public static int Compare<T> (T e1, T e2);
    parameters:
    - id: e1
      type: T
      description: To be added.
    - id: e2
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Compare``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleError``1
  commentId: M:Microsoft.FSharp.Core.Operators.ConsoleError``1
  id: ConsoleError``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ConsoleError<T>()
  nameWithType: Operators.ConsoleError<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleError<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("stderr")]

      public static System.IO.TextWriter ConsoleError<T> ();
    parameters: []
    return:
      type: System.IO.TextWriter
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ConsoleError``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleIn``1
  commentId: M:Microsoft.FSharp.Core.Operators.ConsoleIn``1
  id: ConsoleIn``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ConsoleIn<T>()
  nameWithType: Operators.ConsoleIn<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleIn<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("stdin")]

      public static System.IO.TextReader ConsoleIn<T> ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ConsoleIn``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleOut``1
  commentId: M:Microsoft.FSharp.Core.Operators.ConsoleOut``1
  id: ConsoleOut``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ConsoleOut<T>()
  nameWithType: Operators.ConsoleOut<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleOut<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("stdout")]

      public static System.IO.TextWriter ConsoleOut<T> ();
    parameters: []
    return:
      type: System.IO.TextWriter
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ConsoleOut``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Cos``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Cos``1(``0)
  id: Cos``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Cos<T>(T)
  nameWithType: Operators.Cos<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Cos<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("cos")]

      public static T Cos<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Cos``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Cosh``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)
  id: Cosh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Cosh<T>(T)
  nameWithType: Operators.Cosh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Cosh<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("cosh")]

      public static T Cosh<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Cosh``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateSequence``1(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: CreateSequence<T>(IEnumerable<T>)
  nameWithType: Operators.CreateSequence<T>(IEnumerable<T>)
  fullName: Microsoft.FSharp.Core.Operators.CreateSequence<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("seq")]

      public static System.Collections.Generic.IEnumerable<T> CreateSequence<T> (System.Collections.Generic.IEnumerable<T> sequence);
    parameters:
    - id: sequence
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.CreateSequence``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  commentId: M:Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  id: Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Decrement(FSharpRef<Int32>)
  nameWithType: Operators.Decrement(FSharpRef<Int32>)
  fullName: Microsoft.FSharp.Core.Operators.Decrement(FSharpRef<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("decr")]

      public static void Decrement (Microsoft.FSharp.Core.FSharpRef<int> cell);
    parameters:
    - id: cell
      type: Microsoft.FSharp.Core.FSharpRef{System.Int32}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Decrement*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)
  commentId: M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)
  id: DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: DefaultArg<T>(FSharpOption<T>, T)
  nameWithType: Operators.DefaultArg<T>(FSharpOption<T>, T)
  fullName: Microsoft.FSharp.Core.Operators.DefaultArg<T>(FSharpOption<T>, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("defaultArg")]

      public static T DefaultArg<T> (Microsoft.FSharp.Core.FSharpOption<T> arg, T defaultValue);
    parameters:
    - id: arg
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
    - id: defaultValue
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.DefaultArg``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)
  commentId: M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)
  id: Exit``1(System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Exit<T>(Int32)
  nameWithType: Operators.Exit<T>(Int32)
  fullName: Microsoft.FSharp.Core.Operators.Exit<T>(Int32)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("exit")]

      public static T Exit<T> (int exitcode);
    parameters:
    - id: exitcode
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Exit``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Exp``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Exp``1(``0)
  id: Exp``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Exp<T>(T)
  nameWithType: Operators.Exp<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Exp<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("exp")]

      public static T Exp<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Exp``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Failure(System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.Failure(System.String)
  id: Failure(System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Failure(String)
  nameWithType: Operators.Failure(String)
  fullName: Microsoft.FSharp.Core.Operators.Failure(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Exception Failure (string message);
    parameters:
    - id: message
      type: System.String
      description: To be added.
    return:
      type: System.Exception
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Failure*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)
  commentId: M:Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)
  id: FailurePattern(System.Exception)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: FailurePattern(Exception)
  nameWithType: Operators.FailurePattern(Exception)
  fullName: Microsoft.FSharp.Core.Operators.FailurePattern(Exception)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Failure|_|")]

      public static Microsoft.FSharp.Core.FSharpOption<string> FailurePattern (Exception error);
    parameters:
    - id: error
      type: System.Exception
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{System.String}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.FailurePattern*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.FailWith``1(System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)
  id: FailWith``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: FailWith<T>(String)
  nameWithType: Operators.FailWith<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.FailWith<T>(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("failwith")]

      public static T FailWith<T> (string message);
    parameters:
    - id: message
      type: System.String
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.FailWith``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Floor``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Floor``1(``0)
  id: Floor``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Floor<T>(T)
  nameWithType: Operators.Floor<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Floor<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("floor")]

      public static T Floor<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Floor``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})
  id: Fst``2(System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Fst<T1,T2>(Tuple<T1,T2>)
  nameWithType: Operators.Fst<T1,T2>(Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.Fst<T1,T2>(Tuple<T1,T2>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("fst")]

      public static T1 Fst<T1,T2> (Tuple<T1,T2> tuple);
    parameters:
    - id: tuple
      type: System.Tuple`2
      description: To be added.
    return:
      type: T1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Fst``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Hash``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Hash``1(``0)
  id: Hash``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Hash<T>(T)
  nameWithType: Operators.Hash<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Hash<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("hash")]

      public static int Hash<T> (T obj);
    parameters:
    - id: obj
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Hash``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Identity``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Identity``1(``0)
  id: Identity``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Identity<T>(T)
  nameWithType: Operators.Identity<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Identity<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("id")]

      public static T Identity<T> (T x);
    parameters:
    - id: x
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Identity``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ignore``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)
  id: Ignore``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Ignore<T>(T)
  nameWithType: Operators.Ignore<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ignore<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("ignore")]

      public static void Ignore<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Ignore``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  commentId: M:Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  id: Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Increment(FSharpRef<Int32>)
  nameWithType: Operators.Increment(FSharpRef<Int32>)
  fullName: Microsoft.FSharp.Core.Operators.Increment(FSharpRef<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("incr")]

      public static void Increment (Microsoft.FSharp.Core.FSharpRef<int> cell);
    parameters:
    - id: cell
      type: Microsoft.FSharp.Core.FSharpRef{System.Int32}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Increment*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Infinity
  commentId: P:Microsoft.FSharp.Core.Operators.Infinity
  id: Infinity
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Infinity
  nameWithType: Operators.Infinity
  fullName: Microsoft.FSharp.Core.Operators.Infinity
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompiledName("Infinity")]

      [get: System.Diagnostics.DebuggerNonUserCode]

      public static double Infinity { get; }
    return:
      type: System.Double
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Infinity*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: 'get: System.Diagnostics.DebuggerNonUserCode'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InfinitySingle
  commentId: P:Microsoft.FSharp.Core.Operators.InfinitySingle
  id: InfinitySingle
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: InfinitySingle
  nameWithType: Operators.InfinitySingle
  fullName: Microsoft.FSharp.Core.Operators.InfinitySingle
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompiledName("InfinitySingle")]

      [get: System.Diagnostics.DebuggerNonUserCode]

      public static float InfinitySingle { get; }
    return:
      type: System.Single
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.InfinitySingle*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: 'get: System.Diagnostics.DebuggerNonUserCode'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)
  id: InvalidArg``1(System.String,System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: InvalidArg<T>(String, String)
  nameWithType: Operators.InvalidArg<T>(String, String)
  fullName: Microsoft.FSharp.Core.Operators.InvalidArg<T>(String, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("invalidArg")]

      public static T InvalidArg<T> (string argumentName, string message);
    parameters:
    - id: argumentName
      type: System.String
      description: To be added.
    - id: message
      type: System.String
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.InvalidArg``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)
  id: InvalidOp``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: InvalidOp<T>(String)
  nameWithType: Operators.InvalidOp<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.InvalidOp<T>(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("invalidOp")]

      public static T InvalidOp<T> (string message);
    parameters:
    - id: message
      type: System.String
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.InvalidOp``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.IsNull``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)
  id: IsNull``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: IsNull<T>(T)
  nameWithType: Operators.IsNull<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.IsNull<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("isNull")]

      public static bool IsNull<T> (T value) where T : class;
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.IsNull``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})
  id: KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
  nameWithType: Operators.KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
  fullName: Microsoft.FSharp.Core.Operators.KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|KeyValue|")]

      public static Tuple<TKey,TValue> KeyValuePattern<TKey,TValue> (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);
    parameters:
    - id: keyValuePair
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Tuple{TKey,TValue}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.KeyValuePattern``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)
  id: limitedHash``1(System.Int32,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: limitedHash<T>(Int32, T)
  nameWithType: Operators.limitedHash<T>(Int32, T)
  fullName: Microsoft.FSharp.Core.Operators.limitedHash<T>(Int32, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static int limitedHash<T> (int limit, T obj);
    parameters:
    - id: limit
      type: System.Int32
      description: To be added.
    - id: obj
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.limitedHash``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})
  id: Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
  nameWithType: Operators.Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
  fullName: Microsoft.FSharp.Core.Operators.Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("lock")]

      public static T Lock<TLock,T> (TLock lockObject, Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,T> action) where TLock : class;
    parameters:
    - id: lockObject
      type: TLock
      description: To be added.
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Lock``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Log``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Log``1(``0)
  id: Log``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Log<T>(T)
  nameWithType: Operators.Log<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Log<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("log")]

      public static T Log<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Log``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Log10``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Log10``1(``0)
  id: Log10``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Log10<T>(T)
  nameWithType: Operators.Log10<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Log10<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("log10")]

      public static T Log10<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Log10``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Max``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)
  id: Max``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Max<T>(T, T)
  nameWithType: Operators.Max<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Max<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("max")]

      public static T Max<T> (T e1, T e2);
    parameters:
    - id: e1
      type: T
      description: To be added.
    - id: e2
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Max``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Min``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)
  id: Min``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Min<T>(T, T)
  nameWithType: Operators.Min<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Min<T>(T, T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("min")]

      public static T Min<T> (T e1, T e2);
    parameters:
    - id: e1
      type: T
      description: To be added.
    - id: e2
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Min``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NaN
  commentId: P:Microsoft.FSharp.Core.Operators.NaN
  id: NaN
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: NaN
  nameWithType: Operators.NaN
  fullName: Microsoft.FSharp.Core.Operators.NaN
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompiledName("NaN")]

      [get: System.Diagnostics.DebuggerNonUserCode]

      public static double NaN { get; }
    return:
      type: System.Double
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.NaN*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: 'get: System.Diagnostics.DebuggerNonUserCode'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NaNSingle
  commentId: P:Microsoft.FSharp.Core.Operators.NaNSingle
  id: NaNSingle
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: NaNSingle
  nameWithType: Operators.NaNSingle
  fullName: Microsoft.FSharp.Core.Operators.NaNSingle
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompiledName("NaNSingle")]

      [get: System.Diagnostics.DebuggerNonUserCode]

      public static float NaNSingle { get; }
    return:
      type: System.Single
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.NaNSingle*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: 'get: System.Diagnostics.DebuggerNonUserCode'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Not(System.Boolean)
  commentId: M:Microsoft.FSharp.Core.Operators.Not(System.Boolean)
  id: Not(System.Boolean)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Not(Boolean)
  nameWithType: Operators.Not(Boolean)
  fullName: Microsoft.FSharp.Core.Operators.Not(Boolean)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("not")]

      public static bool Not (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Not*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NullArg``1(System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)
  id: NullArg``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: NullArg<T>(String)
  nameWithType: Operators.NullArg<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.NullArg<T>(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("nullArg")]

      public static T NullArg<T> (string argumentName);
    parameters:
    - id: argumentName
      type: System.String
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.NullArg``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)
  id: op_Addition``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Addition<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Addition<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Addition<T1,T2,T3>(T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static T3 op_Addition<T1,T2,T3> (T1 x, T2 y);
    parameters:
    - id: x
      type: T1
      description: To be added.
    - id: y
      type: T2
      description: To be added.
    return:
      type: T3
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Addition``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})
  commentId: M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})
  id: op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Append<T>(FSharpList<T>, FSharpList<T>)
  nameWithType: Operators.op_Append<T>(FSharpList<T>, FSharpList<T>)
  fullName: Microsoft.FSharp.Core.Operators.op_Append<T>(FSharpList<T>, FSharpList<T>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static Microsoft.FSharp.Collections.FSharpList<T> op_Append<T> (Microsoft.FSharp.Collections.FSharpList<T> list1, Microsoft.FSharp.Collections.FSharpList<T> list2);
    parameters:
    - id: list1
      type: Microsoft.FSharp.Collections.FSharpList`1
      description: To be added.
    - id: list2
      type: Microsoft.FSharp.Collections.FSharpList`1
      description: To be added.
    return:
      type: Microsoft.FSharp.Collections.FSharpList`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Append``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)
  id: op_BitwiseAnd``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_BitwiseAnd<T>(T, T)
  nameWithType: Operators.op_BitwiseAnd<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseAnd<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_BitwiseAnd<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)
  id: op_BitwiseOr``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_BitwiseOr<T>(T, T)
  nameWithType: Operators.op_BitwiseOr<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseOr<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_BitwiseOr<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_BitwiseOr``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)
  id: op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_ColonEquals<T>(FSharpRef<T>, T)
  nameWithType: Operators.op_ColonEquals<T>(FSharpRef<T>, T)
  fullName: Microsoft.FSharp.Core.Operators.op_ColonEquals<T>(FSharpRef<T>, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static void op_ColonEquals<T> (Microsoft.FSharp.Core.FSharpRef<T> cell, T value);
    parameters:
    - id: cell
      type: Microsoft.FSharp.Core.FSharpRef`1
      description: To be added.
    - id: value
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_ColonEquals``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})
  commentId: M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})
  id: op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
  nameWithType: Operators.op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static Microsoft.FSharp.Core.FSharpFunc<T1,T3> op_ComposeLeft<T2,T3,T1> (Microsoft.FSharp.Core.FSharpFunc<T2,T3> func2, Microsoft.FSharp.Core.FSharpFunc<T1,T2> func1);
    parameters:
    - id: func2
      type: Microsoft.FSharp.Core.FSharpFunc{T2,T3}
      description: To be added.
    - id: func1
      type: Microsoft.FSharp.Core.FSharpFunc{T1,T2}
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpFunc{T1,T3}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_ComposeLeft``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})
  commentId: M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})
  id: op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
  nameWithType: Operators.op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static Microsoft.FSharp.Core.FSharpFunc<T1,T3> op_ComposeRight<T1,T2,T3> (Microsoft.FSharp.Core.FSharpFunc<T1,T2> func1, Microsoft.FSharp.Core.FSharpFunc<T2,T3> func2);
    parameters:
    - id: func1
      type: Microsoft.FSharp.Core.FSharpFunc{T1,T2}
      description: To be added.
    - id: func2
      type: Microsoft.FSharp.Core.FSharpFunc{T2,T3}
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpFunc{T1,T3}
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_ComposeRight``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)
  id: op_Concatenate(System.String,System.String)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Concatenate(String, String)
  nameWithType: Operators.op_Concatenate(String, String)
  fullName: Microsoft.FSharp.Core.Operators.op_Concatenate(String, String)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilerMessage("This construct is for ML compatibility. Consider using the '+' operator instead. This may require a type annotation to indicate it acts on strings. This message can be disabled using '--nowarn:62' or '#nowarn "62"'.", 62, IsHidden=true)]

      public static string op_Concatenate (string s1, string s2);
    parameters:
    - id: s1
      type: System.String
      description: To be added.
    - id: s2
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Concatenate*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilerMessageAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})
  commentId: M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})
  id: op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Dereference<T>(FSharpRef<T>)
  nameWithType: Operators.op_Dereference<T>(FSharpRef<T>)
  fullName: Microsoft.FSharp.Core.Operators.op_Dereference<T>(FSharpRef<T>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static T op_Dereference<T> (Microsoft.FSharp.Core.FSharpRef<T> cell);
    parameters:
    - id: cell
      type: Microsoft.FSharp.Core.FSharpRef`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Dereference``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)
  id: op_Division``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Division<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Division<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Division<T1,T2,T3>(T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T3 op_Division<T1,T2,T3> (T1 x, T2 y);
    parameters:
    - id: x
      type: T1
      description: To be added.
    - id: y
      type: T2
      description: To be added.
    return:
      type: T3
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Division``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)
  id: op_Equality``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Equality<T>(T, T)
  nameWithType: Operators.op_Equality<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Equality<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_Equality<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Equality``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)
  id: op_ExclusiveOr``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_ExclusiveOr<T>(T, T)
  nameWithType: Operators.op_ExclusiveOr<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_ExclusiveOr<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_ExclusiveOr<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)
  id: op_Exponentiation``2(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Exponentiation<T,TResult>(T, TResult)
  nameWithType: Operators.op_Exponentiation<T,TResult>(T, TResult)
  fullName: Microsoft.FSharp.Core.Operators.op_Exponentiation<T,TResult>(T, TResult)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static T op_Exponentiation<T,TResult> (T x, TResult y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: TResult
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Exponentiation``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)
  id: op_GreaterThan``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_GreaterThan<T>(T, T)
  nameWithType: Operators.op_GreaterThan<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThan<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_GreaterThan<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_GreaterThan``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)
  id: op_GreaterThanOrEqual``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_GreaterThanOrEqual<T>(T, T)
  nameWithType: Operators.op_GreaterThanOrEqual<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_GreaterThanOrEqual<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)
  id: op_Inequality``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Inequality<T>(T, T)
  nameWithType: Operators.op_Inequality<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Inequality<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_Inequality<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Inequality``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)
  commentId: M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)
  id: op_LeftShift``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_LeftShift<T>(T, Int32)
  nameWithType: Operators.op_LeftShift<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.op_LeftShift<T>(T, Int32)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_LeftShift<T> (T value, int shift);
    parameters:
    - id: value
      type: T
      description: To be added.
    - id: shift
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_LeftShift``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)
  id: op_LessThan``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_LessThan<T>(T, T)
  nameWithType: Operators.op_LessThan<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_LessThan<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_LessThan<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_LessThan``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)
  id: op_LessThanOrEqual``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_LessThanOrEqual<T>(T, T)
  nameWithType: Operators.op_LessThanOrEqual<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static bool op_LessThanOrEqual<T> (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)
  id: op_LogicalNot``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_LogicalNot<T>(T)
  nameWithType: Operators.op_LogicalNot<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_LogicalNot<T>(T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_LogicalNot<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_LogicalNot``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)
  id: op_Modulus``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Modulus<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Modulus<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Modulus<T1,T2,T3>(T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T3 op_Modulus<T1,T2,T3> (T1 x, T2 y);
    parameters:
    - id: x
      type: T1
      description: To be added.
    - id: y
      type: T2
      description: To be added.
    return:
      type: T3
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Modulus``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)
  id: op_Multiply``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Multiply<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Multiply<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Multiply<T1,T2,T3>(T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static T3 op_Multiply<T1,T2,T3> (T1 x, T2 y);
    parameters:
    - id: x
      type: T1
      description: To be added.
    - id: y
      type: T2
      description: To be added.
    return:
      type: T3
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Multiply``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)
  id: op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
  nameWithType: Operators.op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeLeft<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<T,TResult> func, T arg1);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    - id: arg1
      type: T
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeLeft``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  id: op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
  nameWithType: Operators.op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeLeft2<T1,T2,TResult> (Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,TResult>> func, T1 arg1, T2 arg2);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,TResult}}
      description: To be added.
    - id: arg1
      type: T1
      description: To be added.
    - id: arg2
      type: T2
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeLeft2``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)
  id: op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
  nameWithType: Operators.op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeLeft3<T1,T2,T3,TResult> (Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,TResult>>> func, T1 arg1, T2 arg2, T3 arg3);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,TResult}}}
      description: To be added.
    - id: arg1
      type: T1
      description: To be added.
    - id: arg2
      type: T2
      description: To be added.
    - id: arg3
      type: T3
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeLeft3``4*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  id: op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
  nameWithType: Operators.op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeRight<T1,TResult> (T1 arg, Microsoft.FSharp.Core.FSharpFunc<T1,TResult> func);
    parameters:
    - id: arg
      type: T1
      description: To be added.
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,TResult}
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeRight``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})
  id: op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
  nameWithType: Operators.op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeRight2<T1,T2,TResult> (T1 arg1, T2 arg2, Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,TResult>> func);
    parameters:
    - id: arg1
      type: T1
      description: To be added.
    - id: arg2
      type: T2
      description: To be added.
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,TResult}}
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeRight2``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})
  commentId: M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})
  id: op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
  nameWithType: Operators.op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static TResult op_PipeRight3<T1,T2,T3,TResult> (T1 arg1, T2 arg2, T3 arg3, Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,TResult>>> func);
    parameters:
    - id: arg1
      type: T1
      description: To be added.
    - id: arg2
      type: T2
      description: To be added.
    - id: arg3
      type: T3
      description: To be added.
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,TResult}}}
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_PipeRight3``4*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)
  id: op_Range``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Range<T>(T, T)
  nameWithType: Operators.op_Range<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Range<T>(T, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<T> op_Range<T> (T start, T finish);
    parameters:
    - id: start
      type: T
      description: To be added.
    - id: finish
      type: T
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Range``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)
  id: op_RangeStep``2(``0,``1,``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_RangeStep<T,TStep>(T, TStep, T)
  nameWithType: Operators.op_RangeStep<T,TStep>(T, TStep, T)
  fullName: Microsoft.FSharp.Core.Operators.op_RangeStep<T,TStep>(T, TStep, T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<T> op_RangeStep<T,TStep> (T start, TStep step, T finish);
    parameters:
    - id: start
      type: T
      description: To be added.
    - id: step
      type: TStep
      description: To be added.
    - id: finish
      type: T
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_RangeStep``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)
  commentId: M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)
  id: op_RightShift``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_RightShift<T>(T, Int32)
  nameWithType: Operators.op_RightShift<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.op_RightShift<T>(T, Int32)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_RightShift<T> (T value, int shift);
    parameters:
    - id: value
      type: T
      description: To be added.
    - id: shift
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_RightShift``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)
  commentId: M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)
  id: op_Subtraction``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_Subtraction<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Subtraction<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Subtraction<T1,T2,T3>(T1, T2)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T3 op_Subtraction<T1,T2,T3> (T1 x, T2 y);
    parameters:
    - id: x
      type: T1
      description: To be added.
    - id: y
      type: T2
      description: To be added.
    return:
      type: T3
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_Subtraction``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)
  id: op_UnaryNegation``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_UnaryNegation<T>(T)
  nameWithType: Operators.op_UnaryNegation<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryNegation<T>(T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_UnaryNegation<T> (T n);
    parameters:
    - id: n
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_UnaryNegation``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)
  id: op_UnaryPlus``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: op_UnaryPlus<T>(T)
  nameWithType: Operators.op_UnaryPlus<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryPlus<T>(T)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T op_UnaryPlus<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.op_UnaryPlus``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)
  commentId: M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)
  id: PowInteger``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: PowInteger<T>(T, Int32)
  nameWithType: Operators.PowInteger<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.PowInteger<T>(T, Int32)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("pown")]

      public static T PowInteger<T> (T x, int n);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: n
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.PowInteger``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)
  commentId: M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)
  id: Raise``1(System.Exception)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Raise<T>(Exception)
  nameWithType: Operators.Raise<T>(Exception)
  fullName: Microsoft.FSharp.Core.Operators.Raise<T>(Exception)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("raise")]

      public static T Raise<T> (Exception exn);
    parameters:
    - id: exn
      type: System.Exception
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Raise``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ref``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Ref``1(``0)
  id: Ref``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Ref<T>(T)
  nameWithType: Operators.Ref<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ref<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("ref")]

      public static Microsoft.FSharp.Core.FSharpRef<T> Ref<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpRef`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Ref``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Reraise``1
  commentId: M:Microsoft.FSharp.Core.Operators.Reraise``1
  id: Reraise``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Reraise<T>()
  nameWithType: Operators.Reraise<T>()
  fullName: Microsoft.FSharp.Core.Operators.Reraise<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("reraise")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static T Reraise<T> ();
    parameters: []
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Reraise``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Rethrow``1
  commentId: M:Microsoft.FSharp.Core.Operators.Rethrow``1
  id: Rethrow``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Rethrow<T>()
  nameWithType: Operators.Rethrow<T>()
  fullName: Microsoft.FSharp.Core.Operators.Rethrow<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("rethrow")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      [System.Obsolete("This function has been renamed to 'reraise'. Please adjust your code to reflect this", true)]

      public static T Rethrow<T> ();
    parameters: []
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Rethrow``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Round``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Round``1(``0)
  id: Round``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Round<T>(T)
  nameWithType: Operators.Round<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Round<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("round")]

      public static T Round<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Round``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sign``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Sign``1(``0)
  id: Sign``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Sign<T>(T)
  nameWithType: Operators.Sign<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sign<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sign")]

      public static int Sign<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Sign``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sin``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Sin``1(``0)
  id: Sin``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Sin<T>(T)
  nameWithType: Operators.Sin<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sin<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sin")]

      public static T Sin<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Sin``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sinh``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)
  id: Sinh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Sinh<T>(T)
  nameWithType: Operators.Sinh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sinh<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sinh")]

      public static T Sinh<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Sinh``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.SizeOf``1
  commentId: M:Microsoft.FSharp.Core.Operators.SizeOf``1
  id: SizeOf``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: SizeOf<T>()
  nameWithType: Operators.SizeOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.SizeOf<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sizeof")]

      [Microsoft.FSharp.Core.RequiresExplicitTypeArguments]

      public static int SizeOf<T> ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.SizeOf``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})
  id: Snd``2(System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Snd<T1,T2>(Tuple<T1,T2>)
  nameWithType: Operators.Snd<T1,T2>(Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.Snd<T1,T2>(Tuple<T1,T2>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("snd")]

      public static T2 Snd<T1,T2> (Tuple<T1,T2> tuple);
    parameters:
    - id: tuple
      type: System.Tuple`2
      description: To be added.
    return:
      type: T2
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Snd``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sqrt``2(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)
  id: Sqrt``2(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Sqrt<T,TResult>(T)
  nameWithType: Operators.Sqrt<T,TResult>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sqrt<T,TResult>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sqrt")]

      public static TResult Sqrt<T,TResult> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Sqrt``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Tan``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Tan``1(``0)
  id: Tan``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Tan<T>(T)
  nameWithType: Operators.Tan<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Tan<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("tan")]

      public static T Tan<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Tan``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Tanh``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)
  id: Tanh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Tanh<T>(T)
  nameWithType: Operators.Tanh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Tanh<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("tanh")]

      public static T Tanh<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Tanh``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToByte``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)
  id: ToByte``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToByte<T>(T)
  nameWithType: Operators.ToByte<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToByte<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("byte")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static byte ToByte<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Byte
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToByte``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToChar``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)
  id: ToChar``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToChar<T>(T)
  nameWithType: Operators.ToChar<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToChar<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("char")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static char ToChar<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Char
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToChar``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)
  id: ToDecimal``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToDecimal<T>(T)
  nameWithType: Operators.ToDecimal<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToDecimal<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("decimal")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static decimal ToDecimal<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Decimal
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToDecimal``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToDouble``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)
  id: ToDouble``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToDouble<T>(T)
  nameWithType: Operators.ToDouble<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToDouble<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("float")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static double ToDouble<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Double
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToDouble``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)
  commentId: M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)
  id: ToEnum``1(System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToEnum<TResult>(Int32)
  nameWithType: Operators.ToEnum<TResult>(Int32)
  fullName: Microsoft.FSharp.Core.Operators.ToEnum<TResult>(Int32)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("enum")]

      public static TResult ToEnum<TResult> (int value);
    parameters:
    - id: value
      type: System.Int32
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToEnum``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)
  id: ToInt``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToInt<T>(T)
  nameWithType: Operators.ToInt<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("int")]

      public static int ToInt<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToInt``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt16``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)
  id: ToInt16``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToInt16<T>(T)
  nameWithType: Operators.ToInt16<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt16<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("int16")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static short ToInt16<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Int16
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToInt16``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt32``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)
  id: ToInt32``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToInt32<T>(T)
  nameWithType: Operators.ToInt32<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt32<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("int32")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static int ToInt32<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToInt32``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt64``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)
  id: ToInt64``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToInt64<T>(T)
  nameWithType: Operators.ToInt64<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt64<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("int64")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static long ToInt64<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToInt64``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)
  id: ToIntPtr``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToIntPtr<T>(T)
  nameWithType: Operators.ToIntPtr<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToIntPtr<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("nativeint")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static IntPtr ToIntPtr<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.IntPtr
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToIntPtr``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToSByte``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)
  id: ToSByte``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToSByte<T>(T)
  nameWithType: Operators.ToSByte<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToSByte<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sbyte")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static sbyte ToSByte<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.SByte
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToSByte``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToSingle``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)
  id: ToSingle``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToSingle<T>(T)
  nameWithType: Operators.ToSingle<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToSingle<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("float32")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static float ToSingle<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToSingle``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToString``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToString``1(``0)
  id: ToString``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToString<T>(T)
  nameWithType: Operators.ToString<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToString<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("string")]

      public static string ToString<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToString``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)
  id: ToUInt16``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToUInt16<T>(T)
  nameWithType: Operators.ToUInt16<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt16<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("uint16")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static ushort ToUInt16<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.UInt16
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToUInt16``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)
  id: ToUInt32``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToUInt32<T>(T)
  nameWithType: Operators.ToUInt32<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt32<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("uint32")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static uint ToUInt32<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.UInt32
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToUInt32``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)
  id: ToUInt64``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToUInt64<T>(T)
  nameWithType: Operators.ToUInt64<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt64<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("uint64")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static ulong ToUInt64<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.UInt64
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToUInt64``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)
  id: ToUIntPtr``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: ToUIntPtr<T>(T)
  nameWithType: Operators.ToUIntPtr<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUIntPtr<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("unativeint")]

      [Microsoft.FSharp.Core.NoDynamicInvocation]

      public static UIntPtr ToUIntPtr<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.UIntPtr
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.ToUIntPtr``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.NoDynamicInvocationAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Truncate``1(``0)
  commentId: M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)
  id: Truncate``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Truncate<T>(T)
  nameWithType: Operators.Truncate<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Truncate<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("truncate")]

      public static T Truncate<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Truncate``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)
  commentId: M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)
  id: TryUnbox``1(System.Object)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: TryUnbox<T>(Object)
  nameWithType: Operators.TryUnbox<T>(Object)
  fullName: Microsoft.FSharp.Core.Operators.TryUnbox<T>(Object)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("tryUnbox")]

      public static Microsoft.FSharp.Core.FSharpOption<T> TryUnbox<T> (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption`1
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.TryUnbox``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TypeDefOf``1
  commentId: M:Microsoft.FSharp.Core.Operators.TypeDefOf``1
  id: TypeDefOf``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: TypeDefOf<T>()
  nameWithType: Operators.TypeDefOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.TypeDefOf<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("typedefof")]

      [Microsoft.FSharp.Core.RequiresExplicitTypeArguments]

      public static Type TypeDefOf<T> ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.TypeDefOf``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TypeOf``1
  commentId: M:Microsoft.FSharp.Core.Operators.TypeOf``1
  id: TypeOf``1
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: TypeOf<T>()
  nameWithType: Operators.TypeOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.TypeOf<T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("typeof")]

      [Microsoft.FSharp.Core.RequiresExplicitTypeArguments]

      public static Type TypeOf<T> ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.TypeOf``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  - type: Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)
  commentId: M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)
  id: Unbox``1(System.Object)
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Unbox<T>(Object)
  nameWithType: Operators.Unbox<T>(Object)
  fullName: Microsoft.FSharp.Core.Operators.Unbox<T>(Object)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("unbox")]

      public static T Unbox<T> (object value);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Unbox``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  commentId: M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  id: Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  langs:
  - csharp
  name: Using<T,TResult>(T, FSharpFunc<T,TResult>)
  nameWithType: Operators.Using<T,TResult>(T, FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.Operators.Using<T,TResult>(T, FSharpFunc<T,TResult>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("using")]

      public static TResult Using<T,TResult> (T resource, Microsoft.FSharp.Core.FSharpFunc<T,TResult> action) where T : IDisposable;
    parameters:
    - id: resource
      type: T
      description: To be added.
    - id: action
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.Operators.Using``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.Operators.Abs``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Abs<T>(T)
  nameWithType: Operators.Abs<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Abs<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.Operators.Acos``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Acos<T>(T)
  nameWithType: Operators.Acos<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Acos<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Asin``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Asin<T>(T)
  nameWithType: Operators.Asin<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Asin<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Atan``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Atan<T>(T)
  nameWithType: Operators.Atan<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Atan<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Atan2<T1,T2>(T1, T1)
  nameWithType: Operators.Atan2<T1,T2>(T1, T1)
  fullName: Microsoft.FSharp.Core.Operators.Atan2<T1,T2>(T1, T1)
- uid: T2
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T1
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: Microsoft.FSharp.Core.Operators.Box``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Box<T>(T)
  nameWithType: Operators.Box<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Box<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Ceiling``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ceiling<T>(T)
  nameWithType: Operators.Ceiling<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ceiling<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Compare<T>(T, T)
  nameWithType: Operators.Compare<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Compare<T>(T, T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Core.Operators.ConsoleError``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleError<T>()
  nameWithType: Operators.ConsoleError<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleError<T>()
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.FSharp.Core.Operators.ConsoleIn``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleIn<T>()
  nameWithType: Operators.ConsoleIn<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleIn<T>()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: Microsoft.FSharp.Core.Operators.ConsoleOut``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleOut<T>()
  nameWithType: Operators.ConsoleOut<T>()
  fullName: Microsoft.FSharp.Core.Operators.ConsoleOut<T>()
- uid: Microsoft.FSharp.Core.Operators.Cos``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Cos<T>(T)
  nameWithType: Operators.Cos<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Cos<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Cosh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Cosh<T>(T)
  nameWithType: Operators.Cosh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Cosh<T>(T)
- uid: Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: CreateSequence<T>(IEnumerable<T>)
  nameWithType: Operators.CreateSequence<T>(IEnumerable<T>)
  fullName: Microsoft.FSharp.Core.Operators.CreateSequence<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Decrement(FSharpRef<Int32>)
  nameWithType: Operators.Decrement(FSharpRef<Int32>)
  fullName: Microsoft.FSharp.Core.Operators.Decrement(FSharpRef<Int32>)
- uid: Microsoft.FSharp.Core.FSharpRef`1
  name: FSharpRef<T>
  nameWithType: FSharpRef<T>
  fullName: Microsoft.FSharp.Core.FSharpRef<T>
- uid: Microsoft.FSharp.Core.FSharpRef{System.Int32}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpRef<Int32>
  nameWithType: FSharpRef<Int32>
  fullName: Microsoft.FSharp.Core.FSharpRef<System.Int32>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpRef`1
    name: FSharpRef
    nameWithType: FSharpRef
    fullName: Microsoft.FSharp.Core.FSharpRef
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: DefaultArg<T>(FSharpOption<T>, T)
  nameWithType: Operators.DefaultArg<T>(FSharpOption<T>, T)
  fullName: Microsoft.FSharp.Core.Operators.DefaultArg<T>(FSharpOption<T>, T)
- uid: Microsoft.FSharp.Core.FSharpOption`1
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Exit<T>(Int32)
  nameWithType: Operators.Exit<T>(Int32)
  fullName: Microsoft.FSharp.Core.Operators.Exit<T>(Int32)
- uid: Microsoft.FSharp.Core.Operators.Exp``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Exp<T>(T)
  nameWithType: Operators.Exp<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Exp<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Failure(System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Failure(String)
  nameWithType: Operators.Failure(String)
  fullName: Microsoft.FSharp.Core.Operators.Failure(String)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: FailurePattern(Exception)
  nameWithType: Operators.FailurePattern(Exception)
  fullName: Microsoft.FSharp.Core.Operators.FailurePattern(Exception)
- uid: Microsoft.FSharp.Core.FSharpOption{System.String}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<String>
  nameWithType: FSharpOption<String>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.String>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.FailWith``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: FailWith<T>(String)
  nameWithType: Operators.FailWith<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.FailWith<T>(String)
- uid: Microsoft.FSharp.Core.Operators.Floor``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Floor<T>(T)
  nameWithType: Operators.Floor<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Floor<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Fst<T1,T2>(Tuple<T1,T2>)
  nameWithType: Operators.Fst<T1,T2>(Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.Fst<T1,T2>(Tuple<T1,T2>)
- uid: System.Tuple`2
  parent: System
  isExternal: false
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: Microsoft.FSharp.Core.Operators.Hash``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Hash<T>(T)
  nameWithType: Operators.Hash<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Hash<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Identity``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Identity<T>(T)
  nameWithType: Operators.Identity<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Identity<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Ignore``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ignore<T>(T)
  nameWithType: Operators.Ignore<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ignore<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Increment(FSharpRef<Int32>)
  nameWithType: Operators.Increment(FSharpRef<Int32>)
  fullName: Microsoft.FSharp.Core.Operators.Increment(FSharpRef<Int32>)
- uid: Microsoft.FSharp.Core.Operators.Infinity
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Infinity
  nameWithType: Operators.Infinity
  fullName: Microsoft.FSharp.Core.Operators.Infinity
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.FSharp.Core.Operators.InfinitySingle
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InfinitySingle
  nameWithType: Operators.InfinitySingle
  fullName: Microsoft.FSharp.Core.Operators.InfinitySingle
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InvalidArg<T>(String, String)
  nameWithType: Operators.InvalidArg<T>(String, String)
  fullName: Microsoft.FSharp.Core.Operators.InvalidArg<T>(String, String)
- uid: Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InvalidOp<T>(String)
  nameWithType: Operators.InvalidOp<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.InvalidOp<T>(String)
- uid: Microsoft.FSharp.Core.Operators.IsNull``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: IsNull<T>(T)
  nameWithType: Operators.IsNull<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.IsNull<T>(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
  nameWithType: Operators.KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
  fullName: Microsoft.FSharp.Core.Operators.KeyValuePattern<TKey,TValue>(KeyValuePair<TKey,TValue>)
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Tuple{TKey,TValue}
  parent: System
  isExternal: false
  name: Tuple<TKey,TValue>
  nameWithType: Tuple<TKey,TValue>
  fullName: System.Tuple<TKey,TValue>
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: limitedHash<T>(Int32, T)
  nameWithType: Operators.limitedHash<T>(Int32, T)
  fullName: Microsoft.FSharp.Core.Operators.limitedHash<T>(Int32, T)
- uid: Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
  nameWithType: Operators.Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
  fullName: Microsoft.FSharp.Core.Operators.Lock<TLock,T>(TLock, FSharpFunc<Unit,T>)
- uid: TLock
  isExternal: true
  name: TLock
  nameWithType: TLock
  fullName: TLock
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,T}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,T>
  nameWithType: FSharpFunc<Unit,T>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,T>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.Log``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Log<T>(T)
  nameWithType: Operators.Log<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Log<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Log10``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Log10<T>(T)
  nameWithType: Operators.Log10<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Log10<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Max``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Max<T>(T, T)
  nameWithType: Operators.Max<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Max<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.Min``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Min<T>(T, T)
  nameWithType: Operators.Min<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.Min<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.NaN
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NaN
  nameWithType: Operators.NaN
  fullName: Microsoft.FSharp.Core.Operators.NaN
- uid: Microsoft.FSharp.Core.Operators.NaNSingle
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NaNSingle
  nameWithType: Operators.NaNSingle
  fullName: Microsoft.FSharp.Core.Operators.NaNSingle
- uid: Microsoft.FSharp.Core.Operators.Not(System.Boolean)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Not(Boolean)
  nameWithType: Operators.Not(Boolean)
  fullName: Microsoft.FSharp.Core.Operators.Not(Boolean)
- uid: Microsoft.FSharp.Core.Operators.NullArg``1(System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NullArg<T>(String)
  nameWithType: Operators.NullArg<T>(String)
  fullName: Microsoft.FSharp.Core.Operators.NullArg<T>(String)
- uid: Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Addition<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Addition<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Addition<T1,T2,T3>(T1, T2)
- uid: T3
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Append<T>(FSharpList<T>, FSharpList<T>)
  nameWithType: Operators.op_Append<T>(FSharpList<T>, FSharpList<T>)
  fullName: Microsoft.FSharp.Core.Operators.op_Append<T>(FSharpList<T>, FSharpList<T>)
- uid: Microsoft.FSharp.Collections.FSharpList`1
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<T>
  nameWithType: FSharpList<T>
  fullName: Microsoft.FSharp.Collections.FSharpList<T>
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_BitwiseAnd<T>(T, T)
  nameWithType: Operators.op_BitwiseAnd<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseAnd<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_BitwiseOr<T>(T, T)
  nameWithType: Operators.op_BitwiseOr<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseOr<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ColonEquals<T>(FSharpRef<T>, T)
  nameWithType: Operators.op_ColonEquals<T>(FSharpRef<T>, T)
  fullName: Microsoft.FSharp.Core.Operators.op_ColonEquals<T>(FSharpRef<T>, T)
- uid: Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
  nameWithType: Operators.op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeLeft<T2,T3,T1>(FSharpFunc<T2,T3>, FSharpFunc<T1,T2>)
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,T3}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,T3>
  nameWithType: FSharpFunc<T1,T3>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,T3>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc{T2,T3}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T2,T3>
  nameWithType: FSharpFunc<T2,T3>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T2,T3>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,T2}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,T2>
  nameWithType: FSharpFunc<T1,T2>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,T2>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
  nameWithType: Operators.op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeRight<T1,T2,T3>(FSharpFunc<T1,T2>, FSharpFunc<T2,T3>)
- uid: Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Concatenate(String, String)
  nameWithType: Operators.op_Concatenate(String, String)
  fullName: Microsoft.FSharp.Core.Operators.op_Concatenate(String, String)
- uid: Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Dereference<T>(FSharpRef<T>)
  nameWithType: Operators.op_Dereference<T>(FSharpRef<T>)
  fullName: Microsoft.FSharp.Core.Operators.op_Dereference<T>(FSharpRef<T>)
- uid: Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Division<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Division<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Division<T1,T2,T3>(T1, T2)
- uid: Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Equality<T>(T, T)
  nameWithType: Operators.op_Equality<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Equality<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ExclusiveOr<T>(T, T)
  nameWithType: Operators.op_ExclusiveOr<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_ExclusiveOr<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Exponentiation<T,TResult>(T, TResult)
  nameWithType: Operators.op_Exponentiation<T,TResult>(T, TResult)
  fullName: Microsoft.FSharp.Core.Operators.op_Exponentiation<T,TResult>(T, TResult)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_GreaterThan<T>(T, T)
  nameWithType: Operators.op_GreaterThan<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThan<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_GreaterThanOrEqual<T>(T, T)
  nameWithType: Operators.op_GreaterThanOrEqual<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Inequality<T>(T, T)
  nameWithType: Operators.op_Inequality<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Inequality<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LeftShift<T>(T, Int32)
  nameWithType: Operators.op_LeftShift<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.op_LeftShift<T>(T, Int32)
- uid: Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LessThan<T>(T, T)
  nameWithType: Operators.op_LessThan<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_LessThan<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LessThanOrEqual<T>(T, T)
  nameWithType: Operators.op_LessThanOrEqual<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LogicalNot<T>(T)
  nameWithType: Operators.op_LogicalNot<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_LogicalNot<T>(T)
- uid: Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Modulus<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Modulus<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Modulus<T1,T2,T3>(T1, T2)
- uid: Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Multiply<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Multiply<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Multiply<T1,T2,T3>(T1, T2)
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
  nameWithType: Operators.op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft<T,TResult>(FSharpFunc<T,TResult>, T)
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
  nameWithType: Operators.op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft2<T1,T2,TResult>(FSharpFunc<T1,FSharpFunc<T2,TResult>>, T1, T2)
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,FSharpFunc<T2,TResult>>
  nameWithType: FSharpFunc<T1,FSharpFunc<T2,TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
  nameWithType: Operators.op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft3<T1,T2,T3,TResult>(FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>, T1, T2, T3)
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,Microsoft.FSharp.Core.FSharpFunc{T2,Microsoft.FSharp.Core.FSharpFunc{T3,TResult}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>
  nameWithType: FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,Microsoft.FSharp.Core.FSharpFunc<T2,Microsoft.FSharp.Core.FSharpFunc<T3,TResult>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
  nameWithType: Operators.op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight<T1,TResult>(T1, FSharpFunc<T1,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc{T1,TResult}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T1,TResult>
  nameWithType: FSharpFunc<T1,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T1,TResult>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
  nameWithType: Operators.op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight2<T1,T2,TResult>(T1, T2, FSharpFunc<T1,FSharpFunc<T2,TResult>>)
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
  nameWithType: Operators.op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight3<T1,T2,T3,TResult>(T1, T2, T3, FSharpFunc<T1,FSharpFunc<T2,FSharpFunc<T3,TResult>>>)
- uid: Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Range<T>(T, T)
  nameWithType: Operators.op_Range<T>(T, T)
  fullName: Microsoft.FSharp.Core.Operators.op_Range<T>(T, T)
- uid: Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_RangeStep<T,TStep>(T, TStep, T)
  nameWithType: Operators.op_RangeStep<T,TStep>(T, TStep, T)
  fullName: Microsoft.FSharp.Core.Operators.op_RangeStep<T,TStep>(T, TStep, T)
- uid: TStep
  isExternal: true
  name: TStep
  nameWithType: TStep
  fullName: TStep
- uid: Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_RightShift<T>(T, Int32)
  nameWithType: Operators.op_RightShift<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.op_RightShift<T>(T, Int32)
- uid: Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Subtraction<T1,T2,T3>(T1, T2)
  nameWithType: Operators.op_Subtraction<T1,T2,T3>(T1, T2)
  fullName: Microsoft.FSharp.Core.Operators.op_Subtraction<T1,T2,T3>(T1, T2)
- uid: Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_UnaryNegation<T>(T)
  nameWithType: Operators.op_UnaryNegation<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryNegation<T>(T)
- uid: Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_UnaryPlus<T>(T)
  nameWithType: Operators.op_UnaryPlus<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryPlus<T>(T)
- uid: Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: PowInteger<T>(T, Int32)
  nameWithType: Operators.PowInteger<T>(T, Int32)
  fullName: Microsoft.FSharp.Core.Operators.PowInteger<T>(T, Int32)
- uid: Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Raise<T>(Exception)
  nameWithType: Operators.Raise<T>(Exception)
  fullName: Microsoft.FSharp.Core.Operators.Raise<T>(Exception)
- uid: Microsoft.FSharp.Core.Operators.Ref``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ref<T>(T)
  nameWithType: Operators.Ref<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Ref<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Reraise``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Reraise<T>()
  nameWithType: Operators.Reraise<T>()
  fullName: Microsoft.FSharp.Core.Operators.Reraise<T>()
- uid: Microsoft.FSharp.Core.Operators.Rethrow``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Rethrow<T>()
  nameWithType: Operators.Rethrow<T>()
  fullName: Microsoft.FSharp.Core.Operators.Rethrow<T>()
- uid: Microsoft.FSharp.Core.Operators.Round``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Round<T>(T)
  nameWithType: Operators.Round<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Round<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Sign``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sign<T>(T)
  nameWithType: Operators.Sign<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sign<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Sin``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sin<T>(T)
  nameWithType: Operators.Sin<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sin<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Sinh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sinh<T>(T)
  nameWithType: Operators.Sinh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sinh<T>(T)
- uid: Microsoft.FSharp.Core.Operators.SizeOf``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: SizeOf<T>()
  nameWithType: Operators.SizeOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.SizeOf<T>()
- uid: Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Snd<T1,T2>(Tuple<T1,T2>)
  nameWithType: Operators.Snd<T1,T2>(Tuple<T1,T2>)
  fullName: Microsoft.FSharp.Core.Operators.Snd<T1,T2>(Tuple<T1,T2>)
- uid: Microsoft.FSharp.Core.Operators.Sqrt``2(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sqrt<T,TResult>(T)
  nameWithType: Operators.Sqrt<T,TResult>(T)
  fullName: Microsoft.FSharp.Core.Operators.Sqrt<T,TResult>(T)
- uid: Microsoft.FSharp.Core.Operators.Tan``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Tan<T>(T)
  nameWithType: Operators.Tan<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Tan<T>(T)
- uid: Microsoft.FSharp.Core.Operators.Tanh``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Tanh<T>(T)
  nameWithType: Operators.Tanh<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Tanh<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToByte``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToByte<T>(T)
  nameWithType: Operators.ToByte<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToByte<T>(T)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.FSharp.Core.Operators.ToChar``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToChar<T>(T)
  nameWithType: Operators.ToChar<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToChar<T>(T)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToDecimal<T>(T)
  nameWithType: Operators.ToDecimal<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToDecimal<T>(T)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Microsoft.FSharp.Core.Operators.ToDouble``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToDouble<T>(T)
  nameWithType: Operators.ToDouble<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToDouble<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToEnum<TResult>(Int32)
  nameWithType: Operators.ToEnum<TResult>(Int32)
  fullName: Microsoft.FSharp.Core.Operators.ToEnum<TResult>(Int32)
- uid: Microsoft.FSharp.Core.Operators.ToInt``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt<T>(T)
  nameWithType: Operators.ToInt<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToInt16``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt16<T>(T)
  nameWithType: Operators.ToInt16<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt16<T>(T)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.FSharp.Core.Operators.ToInt32``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt32<T>(T)
  nameWithType: Operators.ToInt32<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt32<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToInt64``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt64<T>(T)
  nameWithType: Operators.ToInt64<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToInt64<T>(T)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToIntPtr<T>(T)
  nameWithType: Operators.ToIntPtr<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToIntPtr<T>(T)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.FSharp.Core.Operators.ToSByte``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToSByte<T>(T)
  nameWithType: Operators.ToSByte<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToSByte<T>(T)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: Microsoft.FSharp.Core.Operators.ToSingle``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToSingle<T>(T)
  nameWithType: Operators.ToSingle<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToSingle<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToString``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToString<T>(T)
  nameWithType: Operators.ToString<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToString<T>(T)
- uid: Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt16<T>(T)
  nameWithType: Operators.ToUInt16<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt16<T>(T)
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt32<T>(T)
  nameWithType: Operators.ToUInt32<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt32<T>(T)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt64<T>(T)
  nameWithType: Operators.ToUInt64<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUInt64<T>(T)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUIntPtr<T>(T)
  nameWithType: Operators.ToUIntPtr<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.ToUIntPtr<T>(T)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: Microsoft.FSharp.Core.Operators.Truncate``1(``0)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Truncate<T>(T)
  nameWithType: Operators.Truncate<T>(T)
  fullName: Microsoft.FSharp.Core.Operators.Truncate<T>(T)
- uid: Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TryUnbox<T>(Object)
  nameWithType: Operators.TryUnbox<T>(Object)
  fullName: Microsoft.FSharp.Core.Operators.TryUnbox<T>(Object)
- uid: Microsoft.FSharp.Core.Operators.TypeDefOf``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TypeDefOf<T>()
  nameWithType: Operators.TypeDefOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.TypeDefOf<T>()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.FSharp.Core.Operators.TypeOf``1
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TypeOf<T>()
  nameWithType: Operators.TypeOf<T>()
  fullName: Microsoft.FSharp.Core.Operators.TypeOf<T>()
- uid: Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Unbox<T>(Object)
  nameWithType: Operators.Unbox<T>(Object)
  fullName: Microsoft.FSharp.Core.Operators.Unbox<T>(Object)
- uid: Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Using<T,TResult>(T, FSharpFunc<T,TResult>)
  nameWithType: Operators.Using<T,TResult>(T, FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.Operators.Using<T,TResult>(T, FSharpFunc<T,TResult>)
- uid: Microsoft.FSharp.Core.Operators.Abs``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Abs<T>
  nameWithType: Operators.Abs<T>
  fullName: Microsoft.FSharp.Core.Operators.Abs<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Acos``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Acos<T>
  nameWithType: Operators.Acos<T>
  fullName: Microsoft.FSharp.Core.Operators.Acos<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Asin``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Asin<T>
  nameWithType: Operators.Asin<T>
  fullName: Microsoft.FSharp.Core.Operators.Asin<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Atan``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Atan<T>
  nameWithType: Operators.Atan<T>
  fullName: Microsoft.FSharp.Core.Operators.Atan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Atan2``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Atan2<T1,T2>
  nameWithType: Operators.Atan2<T1,T2>
  fullName: Microsoft.FSharp.Core.Operators.Atan2<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Box``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Box<T>
  nameWithType: Operators.Box<T>
  fullName: Microsoft.FSharp.Core.Operators.Box<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ceiling``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ceiling<T>
  nameWithType: Operators.Ceiling<T>
  fullName: Microsoft.FSharp.Core.Operators.Ceiling<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Compare``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Compare<T>
  nameWithType: Operators.Compare<T>
  fullName: Microsoft.FSharp.Core.Operators.Compare<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleError``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleError<T>
  nameWithType: Operators.ConsoleError<T>
  fullName: Microsoft.FSharp.Core.Operators.ConsoleError<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleIn``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleIn<T>
  nameWithType: Operators.ConsoleIn<T>
  fullName: Microsoft.FSharp.Core.Operators.ConsoleIn<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ConsoleOut``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ConsoleOut<T>
  nameWithType: Operators.ConsoleOut<T>
  fullName: Microsoft.FSharp.Core.Operators.ConsoleOut<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Cos``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Cos<T>
  nameWithType: Operators.Cos<T>
  fullName: Microsoft.FSharp.Core.Operators.Cos<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Cosh``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Cosh<T>
  nameWithType: Operators.Cosh<T>
  fullName: Microsoft.FSharp.Core.Operators.Cosh<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.CreateSequence``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: CreateSequence<T>
  nameWithType: Operators.CreateSequence<T>
  fullName: Microsoft.FSharp.Core.Operators.CreateSequence<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Decrement*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Decrement
  nameWithType: Operators.Decrement
  fullName: Microsoft.FSharp.Core.Operators.Decrement
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.DefaultArg``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: DefaultArg<T>
  nameWithType: Operators.DefaultArg<T>
  fullName: Microsoft.FSharp.Core.Operators.DefaultArg<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Exit``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Exit<T>
  nameWithType: Operators.Exit<T>
  fullName: Microsoft.FSharp.Core.Operators.Exit<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Exp``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Exp<T>
  nameWithType: Operators.Exp<T>
  fullName: Microsoft.FSharp.Core.Operators.Exp<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Failure*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Failure
  nameWithType: Operators.Failure
  fullName: Microsoft.FSharp.Core.Operators.Failure
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.FailurePattern*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: FailurePattern
  nameWithType: Operators.FailurePattern
  fullName: Microsoft.FSharp.Core.Operators.FailurePattern
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.FailWith``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: FailWith<T>
  nameWithType: Operators.FailWith<T>
  fullName: Microsoft.FSharp.Core.Operators.FailWith<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Floor``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Floor<T>
  nameWithType: Operators.Floor<T>
  fullName: Microsoft.FSharp.Core.Operators.Floor<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Fst``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Fst<T1,T2>
  nameWithType: Operators.Fst<T1,T2>
  fullName: Microsoft.FSharp.Core.Operators.Fst<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Hash``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Hash<T>
  nameWithType: Operators.Hash<T>
  fullName: Microsoft.FSharp.Core.Operators.Hash<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Identity``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Identity<T>
  nameWithType: Operators.Identity<T>
  fullName: Microsoft.FSharp.Core.Operators.Identity<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ignore``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ignore<T>
  nameWithType: Operators.Ignore<T>
  fullName: Microsoft.FSharp.Core.Operators.Ignore<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Increment*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Increment
  nameWithType: Operators.Increment
  fullName: Microsoft.FSharp.Core.Operators.Increment
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Infinity*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Infinity
  nameWithType: Operators.Infinity
  fullName: Microsoft.FSharp.Core.Operators.Infinity
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InfinitySingle*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InfinitySingle
  nameWithType: Operators.InfinitySingle
  fullName: Microsoft.FSharp.Core.Operators.InfinitySingle
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InvalidArg``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InvalidArg<T>
  nameWithType: Operators.InvalidArg<T>
  fullName: Microsoft.FSharp.Core.Operators.InvalidArg<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.InvalidOp``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: InvalidOp<T>
  nameWithType: Operators.InvalidOp<T>
  fullName: Microsoft.FSharp.Core.Operators.InvalidOp<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.IsNull``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: IsNull<T>
  nameWithType: Operators.IsNull<T>
  fullName: Microsoft.FSharp.Core.Operators.IsNull<T>
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.KeyValuePattern``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: KeyValuePattern<TKey,TValue>
  nameWithType: Operators.KeyValuePattern<TKey,TValue>
  fullName: Microsoft.FSharp.Core.Operators.KeyValuePattern<TKey,TValue>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.limitedHash``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: limitedHash<T>
  nameWithType: Operators.limitedHash<T>
  fullName: Microsoft.FSharp.Core.Operators.limitedHash<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Lock``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Lock<TLock,T>
  nameWithType: Operators.Lock<TLock,T>
  fullName: Microsoft.FSharp.Core.Operators.Lock<TLock,T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Log``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Log<T>
  nameWithType: Operators.Log<T>
  fullName: Microsoft.FSharp.Core.Operators.Log<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Log10``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Log10<T>
  nameWithType: Operators.Log10<T>
  fullName: Microsoft.FSharp.Core.Operators.Log10<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Max``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Max<T>
  nameWithType: Operators.Max<T>
  fullName: Microsoft.FSharp.Core.Operators.Max<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Min``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Min<T>
  nameWithType: Operators.Min<T>
  fullName: Microsoft.FSharp.Core.Operators.Min<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NaN*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NaN
  nameWithType: Operators.NaN
  fullName: Microsoft.FSharp.Core.Operators.NaN
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NaNSingle*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NaNSingle
  nameWithType: Operators.NaNSingle
  fullName: Microsoft.FSharp.Core.Operators.NaNSingle
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Not*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Not
  nameWithType: Operators.Not
  fullName: Microsoft.FSharp.Core.Operators.Not
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.NullArg``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: NullArg<T>
  nameWithType: Operators.NullArg<T>
  fullName: Microsoft.FSharp.Core.Operators.NullArg<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Addition``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Addition<T1,T2,T3>
  nameWithType: Operators.op_Addition<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_Addition<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Append``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Append<T>
  nameWithType: Operators.op_Append<T>
  fullName: Microsoft.FSharp.Core.Operators.op_Append<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_BitwiseAnd<T>
  nameWithType: Operators.op_BitwiseAnd<T>
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseAnd<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_BitwiseOr``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_BitwiseOr<T>
  nameWithType: Operators.op_BitwiseOr<T>
  fullName: Microsoft.FSharp.Core.Operators.op_BitwiseOr<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ColonEquals``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ColonEquals<T>
  nameWithType: Operators.op_ColonEquals<T>
  fullName: Microsoft.FSharp.Core.Operators.op_ColonEquals<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ComposeLeft``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ComposeLeft<T2,T3,T1>
  nameWithType: Operators.op_ComposeLeft<T2,T3,T1>
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeLeft<T2,T3,T1>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ComposeRight``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ComposeRight<T1,T2,T3>
  nameWithType: Operators.op_ComposeRight<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_ComposeRight<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Concatenate*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Concatenate
  nameWithType: Operators.op_Concatenate
  fullName: Microsoft.FSharp.Core.Operators.op_Concatenate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Dereference``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Dereference<T>
  nameWithType: Operators.op_Dereference<T>
  fullName: Microsoft.FSharp.Core.Operators.op_Dereference<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Division``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Division<T1,T2,T3>
  nameWithType: Operators.op_Division<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_Division<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Equality``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Equality<T>
  nameWithType: Operators.op_Equality<T>
  fullName: Microsoft.FSharp.Core.Operators.op_Equality<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_ExclusiveOr<T>
  nameWithType: Operators.op_ExclusiveOr<T>
  fullName: Microsoft.FSharp.Core.Operators.op_ExclusiveOr<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Exponentiation``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Exponentiation<T,TResult>
  nameWithType: Operators.op_Exponentiation<T,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_Exponentiation<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThan``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_GreaterThan<T>
  nameWithType: Operators.op_GreaterThan<T>
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_GreaterThanOrEqual<T>
  nameWithType: Operators.op_GreaterThanOrEqual<T>
  fullName: Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Inequality``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Inequality<T>
  nameWithType: Operators.op_Inequality<T>
  fullName: Microsoft.FSharp.Core.Operators.op_Inequality<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LeftShift``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LeftShift<T>
  nameWithType: Operators.op_LeftShift<T>
  fullName: Microsoft.FSharp.Core.Operators.op_LeftShift<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LessThan``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LessThan<T>
  nameWithType: Operators.op_LessThan<T>
  fullName: Microsoft.FSharp.Core.Operators.op_LessThan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LessThanOrEqual<T>
  nameWithType: Operators.op_LessThanOrEqual<T>
  fullName: Microsoft.FSharp.Core.Operators.op_LessThanOrEqual<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_LogicalNot``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_LogicalNot<T>
  nameWithType: Operators.op_LogicalNot<T>
  fullName: Microsoft.FSharp.Core.Operators.op_LogicalNot<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Modulus``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Modulus<T1,T2,T3>
  nameWithType: Operators.op_Modulus<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_Modulus<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Multiply``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Multiply<T1,T2,T3>
  nameWithType: Operators.op_Multiply<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_Multiply<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft<T,TResult>
  nameWithType: Operators.op_PipeLeft<T,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft2``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft2<T1,T2,TResult>
  nameWithType: Operators.op_PipeLeft2<T1,T2,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft2<T1,T2,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeLeft3``4*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeLeft3<T1,T2,T3,TResult>
  nameWithType: Operators.op_PipeLeft3<T1,T2,T3,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeLeft3<T1,T2,T3,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight<T1,TResult>
  nameWithType: Operators.op_PipeRight<T1,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight<T1,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight2``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight2<T1,T2,TResult>
  nameWithType: Operators.op_PipeRight2<T1,T2,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight2<T1,T2,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_PipeRight3``4*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_PipeRight3<T1,T2,T3,TResult>
  nameWithType: Operators.op_PipeRight3<T1,T2,T3,TResult>
  fullName: Microsoft.FSharp.Core.Operators.op_PipeRight3<T1,T2,T3,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Range``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Range<T>
  nameWithType: Operators.op_Range<T>
  fullName: Microsoft.FSharp.Core.Operators.op_Range<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_RangeStep``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_RangeStep<T,TStep>
  nameWithType: Operators.op_RangeStep<T,TStep>
  fullName: Microsoft.FSharp.Core.Operators.op_RangeStep<T,TStep>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_RightShift``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_RightShift<T>
  nameWithType: Operators.op_RightShift<T>
  fullName: Microsoft.FSharp.Core.Operators.op_RightShift<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_Subtraction``3*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_Subtraction<T1,T2,T3>
  nameWithType: Operators.op_Subtraction<T1,T2,T3>
  fullName: Microsoft.FSharp.Core.Operators.op_Subtraction<T1,T2,T3>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_UnaryNegation``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_UnaryNegation<T>
  nameWithType: Operators.op_UnaryNegation<T>
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryNegation<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.op_UnaryPlus``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: op_UnaryPlus<T>
  nameWithType: Operators.op_UnaryPlus<T>
  fullName: Microsoft.FSharp.Core.Operators.op_UnaryPlus<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.PowInteger``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: PowInteger<T>
  nameWithType: Operators.PowInteger<T>
  fullName: Microsoft.FSharp.Core.Operators.PowInteger<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Raise``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Raise<T>
  nameWithType: Operators.Raise<T>
  fullName: Microsoft.FSharp.Core.Operators.Raise<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Ref``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Ref<T>
  nameWithType: Operators.Ref<T>
  fullName: Microsoft.FSharp.Core.Operators.Ref<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Reraise``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Reraise<T>
  nameWithType: Operators.Reraise<T>
  fullName: Microsoft.FSharp.Core.Operators.Reraise<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Rethrow``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Rethrow<T>
  nameWithType: Operators.Rethrow<T>
  fullName: Microsoft.FSharp.Core.Operators.Rethrow<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Round``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Round<T>
  nameWithType: Operators.Round<T>
  fullName: Microsoft.FSharp.Core.Operators.Round<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sign``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sign<T>
  nameWithType: Operators.Sign<T>
  fullName: Microsoft.FSharp.Core.Operators.Sign<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sin``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sin<T>
  nameWithType: Operators.Sin<T>
  fullName: Microsoft.FSharp.Core.Operators.Sin<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sinh``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sinh<T>
  nameWithType: Operators.Sinh<T>
  fullName: Microsoft.FSharp.Core.Operators.Sinh<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.SizeOf``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: SizeOf<T>
  nameWithType: Operators.SizeOf<T>
  fullName: Microsoft.FSharp.Core.Operators.SizeOf<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Snd``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Snd<T1,T2>
  nameWithType: Operators.Snd<T1,T2>
  fullName: Microsoft.FSharp.Core.Operators.Snd<T1,T2>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Sqrt``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Sqrt<T,TResult>
  nameWithType: Operators.Sqrt<T,TResult>
  fullName: Microsoft.FSharp.Core.Operators.Sqrt<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Tan``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Tan<T>
  nameWithType: Operators.Tan<T>
  fullName: Microsoft.FSharp.Core.Operators.Tan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Tanh``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Tanh<T>
  nameWithType: Operators.Tanh<T>
  fullName: Microsoft.FSharp.Core.Operators.Tanh<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToByte``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToByte<T>
  nameWithType: Operators.ToByte<T>
  fullName: Microsoft.FSharp.Core.Operators.ToByte<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToChar``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToChar<T>
  nameWithType: Operators.ToChar<T>
  fullName: Microsoft.FSharp.Core.Operators.ToChar<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToDecimal``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToDecimal<T>
  nameWithType: Operators.ToDecimal<T>
  fullName: Microsoft.FSharp.Core.Operators.ToDecimal<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToDouble``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToDouble<T>
  nameWithType: Operators.ToDouble<T>
  fullName: Microsoft.FSharp.Core.Operators.ToDouble<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToEnum``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToEnum<TResult>
  nameWithType: Operators.ToEnum<TResult>
  fullName: Microsoft.FSharp.Core.Operators.ToEnum<TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt<T>
  nameWithType: Operators.ToInt<T>
  fullName: Microsoft.FSharp.Core.Operators.ToInt<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt16``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt16<T>
  nameWithType: Operators.ToInt16<T>
  fullName: Microsoft.FSharp.Core.Operators.ToInt16<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt32``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt32<T>
  nameWithType: Operators.ToInt32<T>
  fullName: Microsoft.FSharp.Core.Operators.ToInt32<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToInt64``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToInt64<T>
  nameWithType: Operators.ToInt64<T>
  fullName: Microsoft.FSharp.Core.Operators.ToInt64<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToIntPtr``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToIntPtr<T>
  nameWithType: Operators.ToIntPtr<T>
  fullName: Microsoft.FSharp.Core.Operators.ToIntPtr<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToSByte``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToSByte<T>
  nameWithType: Operators.ToSByte<T>
  fullName: Microsoft.FSharp.Core.Operators.ToSByte<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToSingle``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToSingle<T>
  nameWithType: Operators.ToSingle<T>
  fullName: Microsoft.FSharp.Core.Operators.ToSingle<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToString``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToString<T>
  nameWithType: Operators.ToString<T>
  fullName: Microsoft.FSharp.Core.Operators.ToString<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt16``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt16<T>
  nameWithType: Operators.ToUInt16<T>
  fullName: Microsoft.FSharp.Core.Operators.ToUInt16<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt32``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt32<T>
  nameWithType: Operators.ToUInt32<T>
  fullName: Microsoft.FSharp.Core.Operators.ToUInt32<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUInt64``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUInt64<T>
  nameWithType: Operators.ToUInt64<T>
  fullName: Microsoft.FSharp.Core.Operators.ToUInt64<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.ToUIntPtr``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: ToUIntPtr<T>
  nameWithType: Operators.ToUIntPtr<T>
  fullName: Microsoft.FSharp.Core.Operators.ToUIntPtr<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Truncate``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Truncate<T>
  nameWithType: Operators.Truncate<T>
  fullName: Microsoft.FSharp.Core.Operators.Truncate<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TryUnbox``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TryUnbox<T>
  nameWithType: Operators.TryUnbox<T>
  fullName: Microsoft.FSharp.Core.Operators.TryUnbox<T>
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TypeDefOf``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TypeDefOf<T>
  nameWithType: Operators.TypeDefOf<T>
  fullName: Microsoft.FSharp.Core.Operators.TypeDefOf<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.TypeOf``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: TypeOf<T>
  nameWithType: Operators.TypeOf<T>
  fullName: Microsoft.FSharp.Core.Operators.TypeOf<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Unbox``1*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Unbox<T>
  nameWithType: Operators.Unbox<T>
  fullName: Microsoft.FSharp.Core.Operators.Unbox<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
- uid: Microsoft.FSharp.Core.Operators.Using``2*
  parent: Microsoft.FSharp.Core.Operators
  isExternal: false
  name: Using<T,TResult>
  nameWithType: Operators.Using<T,TResult>
  fullName: Microsoft.FSharp.Core.Operators.Using<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/Operators.xml
