### YamlMime:ManagedReference
items:
- uid: Mono.Security.Interface.IMonoSslStream
  commentId: T:Mono.Security.Interface.IMonoSslStream
  id: IMonoSslStream
  children:
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - Mono.Security.Interface.IMonoSslStream.AuthenticatedStream
  - Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Mono.Security.Interface.IMonoSslStream.CanRead
  - Mono.Security.Interface.IMonoSslStream.CanTimeout
  - Mono.Security.Interface.IMonoSslStream.CanWrite
  - Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus
  - Mono.Security.Interface.IMonoSslStream.CipherAlgorithm
  - Mono.Security.Interface.IMonoSslStream.CipherStrength
  - Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - Mono.Security.Interface.IMonoSslStream.EndRead(System.IAsyncResult)
  - Mono.Security.Interface.IMonoSslStream.EndWrite(System.IAsyncResult)
  - Mono.Security.Interface.IMonoSslStream.Flush
  - Mono.Security.Interface.IMonoSslStream.GetConnectionInfo
  - Mono.Security.Interface.IMonoSslStream.HashAlgorithm
  - Mono.Security.Interface.IMonoSslStream.HashStrength
  - Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate
  - Mono.Security.Interface.IMonoSslStream.IsAuthenticated
  - Mono.Security.Interface.IMonoSslStream.IsEncrypted
  - Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated
  - Mono.Security.Interface.IMonoSslStream.IsServer
  - Mono.Security.Interface.IMonoSslStream.IsSigned
  - Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm
  - Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength
  - Mono.Security.Interface.IMonoSslStream.Length
  - Mono.Security.Interface.IMonoSslStream.LocalCertificate
  - Mono.Security.Interface.IMonoSslStream.Position
  - Mono.Security.Interface.IMonoSslStream.Provider
  - Mono.Security.Interface.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)
  - Mono.Security.Interface.IMonoSslStream.ReadTimeout
  - Mono.Security.Interface.IMonoSslStream.RemoteCertificate
  - Mono.Security.Interface.IMonoSslStream.SetLength(System.Int64)
  - Mono.Security.Interface.IMonoSslStream.SslProtocol
  - Mono.Security.Interface.IMonoSslStream.TransportContext
  - Mono.Security.Interface.IMonoSslStream.Write(System.Byte[])
  - Mono.Security.Interface.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)
  - Mono.Security.Interface.IMonoSslStream.WriteTimeout
  langs:
  - csharp
  name: IMonoSslStream
  nameWithType: IMonoSslStream
  fullName: Mono.Security.Interface.IMonoSslStream
  type: Interface
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: 'public interface IMonoSslStream : IDisposable'
  implements:
  - System.IDisposable
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: IMonoSslStream.AuthenticateAsClient(String)
  fullName: IMonoSslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: IMonoSslStream.AuthenticateAsClientAsync(String)
  fullName: IMonoSslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: IMonoSslStream.AuthenticateAsServer(X509Certificate)
  fullName: IMonoSslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    - id: clientCertificateRequired
      type: System.Boolean
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  commentId: M:Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    - id: clientCertificateRequired
      type: System.Boolean
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticatedStream
  commentId: P:Mono.Security.Interface.IMonoSslStream.AuthenticatedStream
  id: AuthenticatedStream
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: AuthenticatedStream
  nameWithType: IMonoSslStream.AuthenticatedStream
  fullName: IMonoSslStream.AuthenticatedStream
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Net.Security.AuthenticatedStream AuthenticatedStream { get; }
    return:
      type: System.Net.Security.AuthenticatedStream
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.AuthenticatedStream*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: To be added.
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    - id: clientCertificateRequired
      type: System.Boolean
      description: To be added.
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: To be added.
    - id: checkCertificateRevocation
      type: System.Boolean
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginRead*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Mono.Security.Interface.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.BeginWrite*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanRead
  commentId: P:Mono.Security.Interface.IMonoSslStream.CanRead
  id: CanRead
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: IMonoSslStream.CanRead
  fullName: IMonoSslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool CanRead { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CanRead*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanTimeout
  commentId: P:Mono.Security.Interface.IMonoSslStream.CanTimeout
  id: CanTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: IMonoSslStream.CanTimeout
  fullName: IMonoSslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CanTimeout*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanWrite
  commentId: P:Mono.Security.Interface.IMonoSslStream.CanWrite
  id: CanWrite
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: IMonoSslStream.CanWrite
  fullName: IMonoSslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool CanWrite { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CanWrite*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus
  commentId: P:Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: IMonoSslStream.CheckCertRevocationStatus
  fullName: IMonoSslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CipherAlgorithm
  commentId: P:Mono.Security.Interface.IMonoSslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: IMonoSslStream.CipherAlgorithm
  fullName: IMonoSslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CipherAlgorithm*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CipherStrength
  commentId: P:Mono.Security.Interface.IMonoSslStream.CipherStrength
  id: CipherStrength
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: IMonoSslStream.CipherStrength
  fullName: IMonoSslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int CipherStrength { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.CipherStrength*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)
  commentId: M:Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: IMonoSslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: IMonoSslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)
  commentId: M:Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: IMonoSslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: IMonoSslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndRead(System.IAsyncResult)
  commentId: M:Mono.Security.Interface.IMonoSslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: IMonoSslStream.EndRead(IAsyncResult)
  fullName: IMonoSslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.EndRead*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndWrite(System.IAsyncResult)
  commentId: M:Mono.Security.Interface.IMonoSslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: IMonoSslStream.EndWrite(IAsyncResult)
  fullName: IMonoSslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.EndWrite*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Flush
  commentId: M:Mono.Security.Interface.IMonoSslStream.Flush
  id: Flush
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: IMonoSslStream.Flush()
  fullName: IMonoSslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void Flush ();
    parameters: []
  overload: Mono.Security.Interface.IMonoSslStream.Flush*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.GetConnectionInfo
  commentId: M:Mono.Security.Interface.IMonoSslStream.GetConnectionInfo
  id: GetConnectionInfo
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: GetConnectionInfo()
  nameWithType: IMonoSslStream.GetConnectionInfo()
  fullName: IMonoSslStream.GetConnectionInfo()
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public Mono.Security.Interface.MonoTlsConnectionInfo GetConnectionInfo ();
    parameters: []
    return:
      type: Mono.Security.Interface.MonoTlsConnectionInfo
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.GetConnectionInfo*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.HashAlgorithm
  commentId: P:Mono.Security.Interface.IMonoSslStream.HashAlgorithm
  id: HashAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: IMonoSslStream.HashAlgorithm
  fullName: IMonoSslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.HashAlgorithm*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.HashStrength
  commentId: P:Mono.Security.Interface.IMonoSslStream.HashStrength
  id: HashStrength
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: IMonoSslStream.HashStrength
  fullName: IMonoSslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int HashStrength { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.HashStrength*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate
  commentId: P:Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate
  id: InternalLocalCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: InternalLocalCertificate
  nameWithType: IMonoSslStream.InternalLocalCertificate
  fullName: IMonoSslStream.InternalLocalCertificate
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate InternalLocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsAuthenticated
  commentId: P:Mono.Security.Interface.IMonoSslStream.IsAuthenticated
  id: IsAuthenticated
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: IMonoSslStream.IsAuthenticated
  fullName: IMonoSslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.IsAuthenticated*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsEncrypted
  commentId: P:Mono.Security.Interface.IMonoSslStream.IsEncrypted
  id: IsEncrypted
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: IMonoSslStream.IsEncrypted
  fullName: IMonoSslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.IsEncrypted*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated
  commentId: P:Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: IMonoSslStream.IsMutuallyAuthenticated
  fullName: IMonoSslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsServer
  commentId: P:Mono.Security.Interface.IMonoSslStream.IsServer
  id: IsServer
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: IMonoSslStream.IsServer
  fullName: IMonoSslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool IsServer { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.IsServer*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsSigned
  commentId: P:Mono.Security.Interface.IMonoSslStream.IsSigned
  id: IsSigned
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: IMonoSslStream.IsSigned
  fullName: IMonoSslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public bool IsSigned { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.IsSigned*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm
  commentId: P:Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: IMonoSslStream.KeyExchangeAlgorithm
  fullName: IMonoSslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength
  commentId: P:Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: IMonoSslStream.KeyExchangeStrength
  fullName: IMonoSslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Length
  commentId: P:Mono.Security.Interface.IMonoSslStream.Length
  id: Length
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Length
  nameWithType: IMonoSslStream.Length
  fullName: IMonoSslStream.Length
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Length*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.LocalCertificate
  commentId: P:Mono.Security.Interface.IMonoSslStream.LocalCertificate
  id: LocalCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: IMonoSslStream.LocalCertificate
  fullName: IMonoSslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.LocalCertificate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Position
  commentId: P:Mono.Security.Interface.IMonoSslStream.Position
  id: Position
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Position
  nameWithType: IMonoSslStream.Position
  fullName: IMonoSslStream.Position
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public long Position { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Position*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Provider
  commentId: P:Mono.Security.Interface.IMonoSslStream.Provider
  id: Provider
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Provider
  nameWithType: IMonoSslStream.Provider
  fullName: IMonoSslStream.Provider
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public Mono.Security.Interface.MonoTlsProvider Provider { get; }
    return:
      type: Mono.Security.Interface.MonoTlsProvider
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Provider*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Mono.Security.Interface.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Read(Byte[], Int32, Int32)
  nameWithType: IMonoSslStream.Read(Byte[], Int32, Int32)
  fullName: IMonoSslStream.Read(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Read*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.ReadTimeout
  commentId: P:Mono.Security.Interface.IMonoSslStream.ReadTimeout
  id: ReadTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: IMonoSslStream.ReadTimeout
  fullName: IMonoSslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.ReadTimeout*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.RemoteCertificate
  commentId: P:Mono.Security.Interface.IMonoSslStream.RemoteCertificate
  id: RemoteCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: IMonoSslStream.RemoteCertificate
  fullName: IMonoSslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.RemoteCertificate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.SetLength(System.Int64)
  commentId: M:Mono.Security.Interface.IMonoSslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: IMonoSslStream.SetLength(Int64)
  fullName: IMonoSslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.SetLength*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.SslProtocol
  commentId: P:Mono.Security.Interface.IMonoSslStream.SslProtocol
  id: SslProtocol
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: IMonoSslStream.SslProtocol
  fullName: IMonoSslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.SslProtocol*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.TransportContext
  commentId: P:Mono.Security.Interface.IMonoSslStream.TransportContext
  id: TransportContext
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: IMonoSslStream.TransportContext
  fullName: IMonoSslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.TransportContext*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Write(System.Byte[])
  commentId: M:Mono.Security.Interface.IMonoSslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: IMonoSslStream.Write(Byte[])
  fullName: IMonoSslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Write*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Mono.Security.Interface.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: Write(Byte[], Int32, Int32)
  nameWithType: IMonoSslStream.Write(Byte[], Int32, Int32)
  fullName: IMonoSslStream.Write(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.Write*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.WriteTimeout
  commentId: P:Mono.Security.Interface.IMonoSslStream.WriteTimeout
  id: WriteTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: IMonoSslStream.WriteTimeout
  fullName: IMonoSslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: Mono.Security.Interface
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: Mono.Security.Interface.IMonoSslStream.WriteTimeout*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
references:
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: IMonoSslStream.AuthenticateAsClient(String)
  fullName: IMonoSslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: false
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: IMonoSslStream.AuthenticateAsClientAsync(String)
  fullName: IMonoSslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: IMonoSslStream.AuthenticateAsServer(X509Certificate)
  fullName: IMonoSslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
  nameWithType: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
  fullName: IMonoSslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticatedStream
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticatedStream
  nameWithType: IMonoSslStream.AuthenticatedStream
  fullName: IMonoSslStream.AuthenticatedStream
- uid: System.Net.Security.AuthenticatedStream
  parent: System.Net.Security
  isExternal: false
  name: AuthenticatedStream
  nameWithType: AuthenticatedStream
  fullName: System.Net.Security.AuthenticatedStream
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)
- uid: Mono.Security.Interface.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mono.Security.Interface.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: IMonoSslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: IMonoSslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
- uid: Mono.Security.Interface.IMonoSslStream.CanRead
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanRead
  nameWithType: IMonoSslStream.CanRead
  fullName: IMonoSslStream.CanRead
- uid: Mono.Security.Interface.IMonoSslStream.CanTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanTimeout
  nameWithType: IMonoSslStream.CanTimeout
  fullName: IMonoSslStream.CanTimeout
- uid: Mono.Security.Interface.IMonoSslStream.CanWrite
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanWrite
  nameWithType: IMonoSslStream.CanWrite
  fullName: IMonoSslStream.CanWrite
- uid: Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: IMonoSslStream.CheckCertRevocationStatus
  fullName: IMonoSslStream.CheckCertRevocationStatus
- uid: Mono.Security.Interface.IMonoSslStream.CipherAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: IMonoSslStream.CipherAlgorithm
  fullName: IMonoSslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: false
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: Mono.Security.Interface.IMonoSslStream.CipherStrength
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CipherStrength
  nameWithType: IMonoSslStream.CipherStrength
  fullName: IMonoSslStream.CipherStrength
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: IMonoSslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: IMonoSslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: IMonoSslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: IMonoSslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: Mono.Security.Interface.IMonoSslStream.EndRead(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: IMonoSslStream.EndRead(IAsyncResult)
  fullName: IMonoSslStream.EndRead(IAsyncResult)
- uid: Mono.Security.Interface.IMonoSslStream.EndWrite(System.IAsyncResult)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: IMonoSslStream.EndWrite(IAsyncResult)
  fullName: IMonoSslStream.EndWrite(IAsyncResult)
- uid: Mono.Security.Interface.IMonoSslStream.Flush
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Flush()
  nameWithType: IMonoSslStream.Flush()
  fullName: IMonoSslStream.Flush()
- uid: Mono.Security.Interface.IMonoSslStream.GetConnectionInfo
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: GetConnectionInfo()
  nameWithType: IMonoSslStream.GetConnectionInfo()
  fullName: IMonoSslStream.GetConnectionInfo()
- uid: Mono.Security.Interface.MonoTlsConnectionInfo
  parent: Mono.Security.Interface
  isExternal: false
  name: MonoTlsConnectionInfo
  nameWithType: MonoTlsConnectionInfo
  fullName: Mono.Security.Interface.MonoTlsConnectionInfo
- uid: Mono.Security.Interface.IMonoSslStream.HashAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: IMonoSslStream.HashAlgorithm
  fullName: IMonoSslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: false
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: Mono.Security.Interface.IMonoSslStream.HashStrength
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: HashStrength
  nameWithType: IMonoSslStream.HashStrength
  fullName: IMonoSslStream.HashStrength
- uid: Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: InternalLocalCertificate
  nameWithType: IMonoSslStream.InternalLocalCertificate
  fullName: IMonoSslStream.InternalLocalCertificate
- uid: Mono.Security.Interface.IMonoSslStream.IsAuthenticated
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: IMonoSslStream.IsAuthenticated
  fullName: IMonoSslStream.IsAuthenticated
- uid: Mono.Security.Interface.IMonoSslStream.IsEncrypted
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: IMonoSslStream.IsEncrypted
  fullName: IMonoSslStream.IsEncrypted
- uid: Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: IMonoSslStream.IsMutuallyAuthenticated
  fullName: IMonoSslStream.IsMutuallyAuthenticated
- uid: Mono.Security.Interface.IMonoSslStream.IsServer
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsServer
  nameWithType: IMonoSslStream.IsServer
  fullName: IMonoSslStream.IsServer
- uid: Mono.Security.Interface.IMonoSslStream.IsSigned
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsSigned
  nameWithType: IMonoSslStream.IsSigned
  fullName: IMonoSslStream.IsSigned
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: IMonoSslStream.KeyExchangeAlgorithm
  fullName: IMonoSslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: false
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: IMonoSslStream.KeyExchangeStrength
  fullName: IMonoSslStream.KeyExchangeStrength
- uid: Mono.Security.Interface.IMonoSslStream.Length
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Length
  nameWithType: IMonoSslStream.Length
  fullName: IMonoSslStream.Length
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Mono.Security.Interface.IMonoSslStream.LocalCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: IMonoSslStream.LocalCertificate
  fullName: IMonoSslStream.LocalCertificate
- uid: Mono.Security.Interface.IMonoSslStream.Position
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Position
  nameWithType: IMonoSslStream.Position
  fullName: IMonoSslStream.Position
- uid: Mono.Security.Interface.IMonoSslStream.Provider
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Provider
  nameWithType: IMonoSslStream.Provider
  fullName: IMonoSslStream.Provider
- uid: Mono.Security.Interface.MonoTlsProvider
  parent: Mono.Security.Interface
  isExternal: false
  name: MonoTlsProvider
  nameWithType: MonoTlsProvider
  fullName: Mono.Security.Interface.MonoTlsProvider
- uid: Mono.Security.Interface.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Read(Byte[], Int32, Int32)
  nameWithType: IMonoSslStream.Read(Byte[], Int32, Int32)
  fullName: IMonoSslStream.Read(Byte[], Int32, Int32)
- uid: Mono.Security.Interface.IMonoSslStream.ReadTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: IMonoSslStream.ReadTimeout
  fullName: IMonoSslStream.ReadTimeout
- uid: Mono.Security.Interface.IMonoSslStream.RemoteCertificate
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: IMonoSslStream.RemoteCertificate
  fullName: IMonoSslStream.RemoteCertificate
- uid: Mono.Security.Interface.IMonoSslStream.SetLength(System.Int64)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: IMonoSslStream.SetLength(Int64)
  fullName: IMonoSslStream.SetLength(Int64)
- uid: Mono.Security.Interface.IMonoSslStream.SslProtocol
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: SslProtocol
  nameWithType: IMonoSslStream.SslProtocol
  fullName: IMonoSslStream.SslProtocol
- uid: Mono.Security.Interface.IMonoSslStream.TransportContext
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: TransportContext
  nameWithType: IMonoSslStream.TransportContext
  fullName: IMonoSslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: false
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: Mono.Security.Interface.IMonoSslStream.Write(System.Byte[])
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: IMonoSslStream.Write(Byte[])
  fullName: IMonoSslStream.Write(Byte[])
- uid: Mono.Security.Interface.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Write(Byte[], Int32, Int32)
  nameWithType: IMonoSslStream.Write(Byte[], Int32, Int32)
  fullName: IMonoSslStream.Write(Byte[], Int32, Int32)
- uid: Mono.Security.Interface.IMonoSslStream.WriteTimeout
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: IMonoSslStream.WriteTimeout
  fullName: IMonoSslStream.WriteTimeout
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: IMonoSslStream.AuthenticateAsClient
  fullName: IMonoSslStream.AuthenticateAsClient
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClientAsync*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: IMonoSslStream.AuthenticateAsClientAsync
  fullName: IMonoSslStream.AuthenticateAsClientAsync
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: IMonoSslStream.AuthenticateAsServer
  fullName: IMonoSslStream.AuthenticateAsServer
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServerAsync*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: IMonoSslStream.AuthenticateAsServerAsync
  fullName: IMonoSslStream.AuthenticateAsServerAsync
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.AuthenticatedStream*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: AuthenticatedStream
  nameWithType: IMonoSslStream.AuthenticatedStream
  fullName: IMonoSslStream.AuthenticatedStream
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsClient*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: IMonoSslStream.BeginAuthenticateAsClient
  fullName: IMonoSslStream.BeginAuthenticateAsClient
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginAuthenticateAsServer*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: IMonoSslStream.BeginAuthenticateAsServer
  fullName: IMonoSslStream.BeginAuthenticateAsServer
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginRead*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginRead
  nameWithType: IMonoSslStream.BeginRead
  fullName: IMonoSslStream.BeginRead
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.BeginWrite*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: BeginWrite
  nameWithType: IMonoSslStream.BeginWrite
  fullName: IMonoSslStream.BeginWrite
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanRead*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanRead
  nameWithType: IMonoSslStream.CanRead
  fullName: IMonoSslStream.CanRead
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanTimeout*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanTimeout
  nameWithType: IMonoSslStream.CanTimeout
  fullName: IMonoSslStream.CanTimeout
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CanWrite*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CanWrite
  nameWithType: IMonoSslStream.CanWrite
  fullName: IMonoSslStream.CanWrite
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CheckCertRevocationStatus*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: IMonoSslStream.CheckCertRevocationStatus
  fullName: IMonoSslStream.CheckCertRevocationStatus
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CipherAlgorithm*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: IMonoSslStream.CipherAlgorithm
  fullName: IMonoSslStream.CipherAlgorithm
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.CipherStrength*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: CipherStrength
  nameWithType: IMonoSslStream.CipherStrength
  fullName: IMonoSslStream.CipherStrength
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsClient*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: IMonoSslStream.EndAuthenticateAsClient
  fullName: IMonoSslStream.EndAuthenticateAsClient
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndAuthenticateAsServer*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: IMonoSslStream.EndAuthenticateAsServer
  fullName: IMonoSslStream.EndAuthenticateAsServer
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndRead*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndRead
  nameWithType: IMonoSslStream.EndRead
  fullName: IMonoSslStream.EndRead
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.EndWrite*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: EndWrite
  nameWithType: IMonoSslStream.EndWrite
  fullName: IMonoSslStream.EndWrite
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Flush*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Flush
  nameWithType: IMonoSslStream.Flush
  fullName: IMonoSslStream.Flush
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.GetConnectionInfo*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: GetConnectionInfo
  nameWithType: IMonoSslStream.GetConnectionInfo
  fullName: IMonoSslStream.GetConnectionInfo
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.HashAlgorithm*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: IMonoSslStream.HashAlgorithm
  fullName: IMonoSslStream.HashAlgorithm
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.HashStrength*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: HashStrength
  nameWithType: IMonoSslStream.HashStrength
  fullName: IMonoSslStream.HashStrength
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.InternalLocalCertificate*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: InternalLocalCertificate
  nameWithType: IMonoSslStream.InternalLocalCertificate
  fullName: IMonoSslStream.InternalLocalCertificate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsAuthenticated*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: IMonoSslStream.IsAuthenticated
  fullName: IMonoSslStream.IsAuthenticated
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsEncrypted*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: IMonoSslStream.IsEncrypted
  fullName: IMonoSslStream.IsEncrypted
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsMutuallyAuthenticated*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: IMonoSslStream.IsMutuallyAuthenticated
  fullName: IMonoSslStream.IsMutuallyAuthenticated
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsServer*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsServer
  nameWithType: IMonoSslStream.IsServer
  fullName: IMonoSslStream.IsServer
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.IsSigned*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: IsSigned
  nameWithType: IMonoSslStream.IsSigned
  fullName: IMonoSslStream.IsSigned
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeAlgorithm*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: IMonoSslStream.KeyExchangeAlgorithm
  fullName: IMonoSslStream.KeyExchangeAlgorithm
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.KeyExchangeStrength*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: IMonoSslStream.KeyExchangeStrength
  fullName: IMonoSslStream.KeyExchangeStrength
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Length*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Length
  nameWithType: IMonoSslStream.Length
  fullName: IMonoSslStream.Length
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.LocalCertificate*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: IMonoSslStream.LocalCertificate
  fullName: IMonoSslStream.LocalCertificate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Position*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Position
  nameWithType: IMonoSslStream.Position
  fullName: IMonoSslStream.Position
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Provider*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Provider
  nameWithType: IMonoSslStream.Provider
  fullName: IMonoSslStream.Provider
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Read*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Read
  nameWithType: IMonoSslStream.Read
  fullName: IMonoSslStream.Read
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.ReadTimeout*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: IMonoSslStream.ReadTimeout
  fullName: IMonoSslStream.ReadTimeout
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.RemoteCertificate*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: IMonoSslStream.RemoteCertificate
  fullName: IMonoSslStream.RemoteCertificate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.SetLength*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: SetLength
  nameWithType: IMonoSslStream.SetLength
  fullName: IMonoSslStream.SetLength
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.SslProtocol*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: SslProtocol
  nameWithType: IMonoSslStream.SslProtocol
  fullName: IMonoSslStream.SslProtocol
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.TransportContext*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: TransportContext
  nameWithType: IMonoSslStream.TransportContext
  fullName: IMonoSslStream.TransportContext
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.Write*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: Write
  nameWithType: IMonoSslStream.Write
  fullName: IMonoSslStream.Write
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: Mono.Security.Interface.IMonoSslStream.WriteTimeout*
  parent: Mono.Security.Interface.IMonoSslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: IMonoSslStream.WriteTimeout
  fullName: IMonoSslStream.WriteTimeout
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.Security.Interface/IMonoSslStream.xml
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
