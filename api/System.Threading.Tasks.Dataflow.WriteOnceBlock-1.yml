### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  commentId: T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  id: WriteOnceBlock`1
  children:
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  - System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  langs:
  - csharp
  name: WriteOnceBlock<T>
  nameWithType: WriteOnceBlock<T>
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>
  type: Class
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: 'public sealed class WriteOnceBlock<T> : System.Threading.Tasks.Dataflow.IPropagatorBlock<T,T>, System.Threading.Tasks.Dataflow.IReceivableSourceBlock<T>, System.Threading.Tasks.Dataflow.ISourceBlock<T>, System.Threading.Tasks.Dataflow.ITargetBlock<T>'
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Threading.Tasks.Dataflow.IPropagatorBlock<T,T>
  - System.Threading.Tasks.Dataflow.IReceivableSourceBlock<T>
  - System.Threading.Tasks.Dataflow.ISourceBlock<T>
  - System.Threading.Tasks.Dataflow.ITargetBlock<T>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})
  id: '#ctor(System.Func{`0,`0})'
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: WriteOnceBlock<T>(Func<T,T>)
  nameWithType: WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public WriteOnceBlock (Func<T,T> cloningFunction);
    parameters:
    - id: cloningFunction
      type: System.Func{T,T}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  id: '#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)'
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
  nameWithType: WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public WriteOnceBlock (Func<T,T> cloningFunction, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: cloningFunction
      type: System.Func{T,T}
      description: To be added.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.DataflowBlockOptions
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete
  id: Complete
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: Complete()
  nameWithType: WriteOnceBlock<T>.Complete()
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Complete()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public void Complete ();
    parameters: []
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion
  commentId: P:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion
  id: Completion
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: Completion
  nameWithType: WriteOnceBlock<T>.Completion
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Completion
  type: Property
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  id: LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: LinkTo(ITargetBlock<T>, DataflowLinkOptions)
  nameWithType: WriteOnceBlock<T>.LinkTo(ITargetBlock<T>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.LinkTo(ITargetBlock<T>, DataflowLinkOptions)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock<T> target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T}
      description: To be added.
    - id: linkOptions
      type: System.Threading.Tasks.Dataflow.DataflowLinkOptions
      description: To be added.
    return:
      type: System.IDisposable
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString
  id: ToString
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: ToString()
  nameWithType: WriteOnceBlock<T>.ToString()
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ToString()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)
  id: TryReceive(System.Predicate{`0},`0@)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: TryReceive(Predicate<T>, T)
  nameWithType: WriteOnceBlock<T>.TryReceive(Predicate<T>, T)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.TryReceive(Predicate<T>, T)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public bool TryReceive (Predicate<T> filter, out T item);
    parameters:
    - id: filter
      type: System.Predicate`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  id: System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: IDataflowBlock.Fault(Exception)
  nameWithType: WriteOnceBlock<T>.IDataflowBlock.Fault(Exception)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.IDataflowBlock.Fault(Exception)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: void IDataflowBlock.Fault (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock<T>#TryReceiveAll(System.Collections.Generic.IList{`0}@)
  id: System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
  nameWithType: WriteOnceBlock<T>.IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: bool IReceivableSourceBlock<T>.TryReceiveAll (out System.Collections.Generic.IList<T> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IList`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock<T>#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  id: System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: T ISourceBlock<T>.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T> target, out bool messageConsumed);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T}
      description: To be added.
    - id: messageConsumed
      type: System.Boolean
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock<T>#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: void ISourceBlock<T>.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock<T>#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  id: System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: bool ISourceBlock<T>.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock<T> target);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{T}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  commentId: M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock<T>#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  id: System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  isEii: true
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  langs:
  - csharp
  name: ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
  nameWithType: WriteOnceBlock<T>.ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock<T>.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, T messageValue, System.Threading.Tasks.Dataflow.ISourceBlock<T> source, bool consumeToAccept);
    parameters:
    - id: messageHeader
      type: System.Threading.Tasks.Dataflow.DataflowMessageHeader
      description: To be added.
    - id: messageValue
      type: T
      description: To be added.
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T}
      description: To be added.
    - id: consumeToAccept
      type: System.Boolean
      description: To be added.
    return:
      type: System.Threading.Tasks.Dataflow.DataflowMessageStatus
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: WriteOnceBlock<T>(Func<T,T>)
  nameWithType: WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>)
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{T,T}
  parent: System
  isExternal: false
  name: Func<T,T>
  nameWithType: Func<T,T>
  fullName: System.Func<T,T>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
  nameWithType: WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.WriteOnceBlock<T>(Func<T,T>, DataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.DataflowBlockOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowBlockOptions
  nameWithType: DataflowBlockOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowBlockOptions
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: Complete()
  nameWithType: WriteOnceBlock<T>.Complete()
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Complete()
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: Completion
  nameWithType: WriteOnceBlock<T>.Completion
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: LinkTo(ITargetBlock<T>, DataflowLinkOptions)
  nameWithType: WriteOnceBlock<T>.LinkTo(ITargetBlock<T>, DataflowLinkOptions)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.LinkTo(ITargetBlock<T>, DataflowLinkOptions)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
  name: ITargetBlock<TInput>
  nameWithType: ITargetBlock<TInput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TInput>
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{T}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<T>
  nameWithType: ITargetBlock<T>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowLinkOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowLinkOptions
  nameWithType: DataflowLinkOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowLinkOptions
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ToString()
  nameWithType: WriteOnceBlock<T>.ToString()
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: TryReceive(Predicate<T>, T)
  nameWithType: WriteOnceBlock<T>.TryReceive(Predicate<T>, T)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.TryReceive(Predicate<T>, T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Predicate`1
  parent: System
  isExternal: false
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: IDataflowBlock.Fault(Exception)
  nameWithType: WriteOnceBlock<T>.IDataflowBlock.Fault(Exception)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.IDataflowBlock.Fault(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
  nameWithType: WriteOnceBlock<T>.IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.IReceivableSourceBlock<T>.TryReceiveAll(IList<T>)
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ConsumeMessage(DataflowMessageHeader, ITargetBlock<T>, Boolean)
- uid: System.Threading.Tasks.Dataflow.DataflowMessageHeader
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowMessageHeader
  nameWithType: DataflowMessageHeader
  fullName: System.Threading.Tasks.Dataflow.DataflowMessageHeader
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ReleaseReservation(DataflowMessageHeader, ITargetBlock<T>)
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
  nameWithType: WriteOnceBlock<T>.ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ISourceBlock<T>.ReserveMessage(DataflowMessageHeader, ITargetBlock<T>)
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
  nameWithType: WriteOnceBlock<T>.ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ITargetBlock<T>.OfferMessage(DataflowMessageHeader, T, ISourceBlock<T>, Boolean)
- uid: System.Threading.Tasks.Dataflow.DataflowMessageStatus
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowMessageStatus
  nameWithType: DataflowMessageStatus
  fullName: System.Threading.Tasks.Dataflow.DataflowMessageStatus
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  name: ISourceBlock<TOutput>
  nameWithType: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{T}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<T>
  nameWithType: ISourceBlock<T>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: WriteOnceBlock<T>
  nameWithType: WriteOnceBlock<T>.WriteOnceBlock<T>
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.WriteOnceBlock<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: Complete
  nameWithType: WriteOnceBlock<T>.Complete
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Complete
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: Completion
  nameWithType: WriteOnceBlock<T>.Completion
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.Completion
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: LinkTo
  nameWithType: WriteOnceBlock<T>.LinkTo
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.LinkTo
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: ToString
  nameWithType: WriteOnceBlock<T>.ToString
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: TryReceive
  nameWithType: WriteOnceBlock<T>.TryReceive
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.TryReceive
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.IDataflowBlock.Fault
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<T>.TryReceiveAll
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.IReceivableSourceBlock<T>.TryReceiveAll
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.IReceivableSourceBlock<T>.TryReceiveAll
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<T>.ConsumeMessage
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ConsumeMessage
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ConsumeMessage
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReleaseReservation
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReleaseReservation
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReleaseReservation
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReserveMessage
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReserveMessage
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ISourceBlock<T>.ReserveMessage
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage*
  parent: System.Threading.Tasks.Dataflow.WriteOnceBlock`1
  isExternal: false
  name: System.Threading.Tasks.Dataflow.ITargetBlock<T>.OfferMessage
  nameWithType: WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ITargetBlock<T>.OfferMessage
  fullName: System.Threading.Tasks.Dataflow.WriteOnceBlock<T>.System.Threading.Tasks.Dataflow.ITargetBlock<T>.OfferMessage
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/WriteOnceBlock`1.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObserver<TInput>(ITargetBlock<TInput>)
  nameWithType: DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Post<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
