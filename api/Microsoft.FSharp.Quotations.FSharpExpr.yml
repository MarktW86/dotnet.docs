### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Quotations.FSharpExpr
  commentId: T:Microsoft.FSharp.Quotations.FSharpExpr
  id: FSharpExpr
  children:
  - Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  - Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  - Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  - Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  - Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  - Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  - Microsoft.FSharp.Quotations.FSharpExpr.ToString
  - Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  - Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  - Microsoft.FSharp.Quotations.FSharpExpr.Type
  - Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  - Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  - Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  - Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  - Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  - Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  langs:
  - csharp
  name: FSharpExpr
  nameWithType: FSharpExpr
  fullName: Microsoft.FSharp.Quotations.FSharpExpr
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [Microsoft.FSharp.Core.Class]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      [Microsoft.FSharp.Core.CompiledName("FSharpExpr")]

      public class FSharpExpr
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.FSharp.Quotations.FSharpExpr`1
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: Microsoft.FSharp.Core.ClassAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  id: AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: AddressOf(FSharpExpr)
  nameWithType: FSharpExpr.AddressOf(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr AddressOf (Microsoft.FSharp.Quotations.FSharpExpr target);
    parameters:
    - id: target
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: AddressSet(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr AddressSet (Microsoft.FSharp.Quotations.FSharpExpr target, Microsoft.FSharp.Quotations.FSharpExpr value);
    parameters:
    - id: target
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Application(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Application(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Application(FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Application (Microsoft.FSharp.Quotations.FSharpExpr functionExpr, Microsoft.FSharp.Quotations.FSharpExpr argument);
    parameters:
    - id: functionExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: argument
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Application*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Applications (Microsoft.FSharp.Quotations.FSharpExpr functionExpr, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> arguments);
    parameters:
    - id: functionExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: arguments
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Applications*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Call(MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Call (System.Reflection.MethodInfo methodInfo, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> arguments);
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: arguments
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Call (Microsoft.FSharp.Quotations.FSharpExpr obj, System.Reflection.MethodInfo methodInfo, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> arguments);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: arguments
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  id: Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Cast<T>(FSharpExpr)
  nameWithType: FSharpExpr.Cast<T>(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Cast<T>(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr<T> Cast<T> (Microsoft.FSharp.Quotations.FSharpExpr source);
    parameters:
    - id: source
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr`1
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Cast``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  id: Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Coerce(FSharpExpr, Type)
  nameWithType: FSharpExpr.Coerce(FSharpExpr, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Coerce(FSharpExpr, Type)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Coerce (Microsoft.FSharp.Quotations.FSharpExpr source, Type target);
    parameters:
    - id: source
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: target
      type: System.Type
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Coerce*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  commentId: P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  id: CustomAttributes
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: CustomAttributes
  nameWithType: FSharpExpr.CustomAttributes
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> CustomAttributes { get; }
    return:
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  id: DefaultValue(System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: DefaultValue(Type)
  nameWithType: FSharpExpr.DefaultValue(Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(Type)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr DefaultValue (Type expressionType);
    parameters:
    - id: expressionType
      type: System.Type
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  id: Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  nameWithType: FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Deserialize (Type qualifyingType, Microsoft.FSharp.Collections.FSharpList<Type> spliceTypes, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> spliceExprs, byte[] bytes);
    parameters:
    - id: qualifyingType
      type: System.Type
      description: To be added.
    - id: spliceTypes
      type: Microsoft.FSharp.Collections.FSharpList{System.Type}
      description: To be added.
    - id: spliceExprs
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    - id: bytes
      type: System.Byte[]
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  id: Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  nameWithType: FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Deserialize40 (Type qualifyingType, Type[] referencedTypes, Type[] spliceTypes, Microsoft.FSharp.Quotations.FSharpExpr[] spliceExprs, byte[] bytes);
    parameters:
    - id: qualifyingType
      type: System.Type
      description: To be added.
    - id: referencedTypes
      type: System.Type[]
      description: To be added.
    - id: spliceTypes
      type: System.Type[]
      description: To be added.
    - id: spliceExprs
      type: Microsoft.FSharp.Quotations.FSharpExpr[]
      description: To be added.
    - id: bytes
      type: System.Byte[]
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: FSharpExpr.Equals(Object)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Equals(Object)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Equals*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  id: FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: FieldGet(FSharpExpr, FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr FieldGet (Microsoft.FSharp.Quotations.FSharpExpr obj, System.Reflection.FieldInfo fieldInfo);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  id: FieldGet(System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: FieldGet(FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FieldInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(FieldInfo)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr FieldGet (System.Reflection.FieldInfo fieldInfo);
    parameters:
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  id: FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: FieldSet(FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr FieldSet (System.Reflection.FieldInfo fieldInfo, Microsoft.FSharp.Quotations.FSharpExpr value);
    parameters:
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  id: FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr FieldSet (Microsoft.FSharp.Quotations.FSharpExpr obj, System.Reflection.FieldInfo fieldInfo, Microsoft.FSharp.Quotations.FSharpExpr value);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr ForIntegerRangeLoop (Microsoft.FSharp.Quotations.FSharpVar loopVariable, Microsoft.FSharp.Quotations.FSharpExpr start, Microsoft.FSharp.Quotations.FSharpExpr endExpr, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: loopVariable
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: start
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: endExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  id: GetFreeVars
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: GetFreeVars()
  nameWithType: FSharpExpr.GetFreeVars()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.FSharp.Quotations.FSharpVar> GetFreeVars ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.FSharp.Quotations.FSharpVar}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  id: GetHashCode
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: FSharpExpr.GetHashCode()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  id: GlobalVar``1(System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: GlobalVar<T>(String)
  nameWithType: FSharpExpr.GlobalVar<T>(String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar<T>(String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr<T> GlobalVar<T> (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr`1
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr IfThenElse (Microsoft.FSharp.Quotations.FSharpExpr guard, Microsoft.FSharp.Quotations.FSharpExpr thenExpr, Microsoft.FSharp.Quotations.FSharpExpr elseExpr);
    parameters:
    - id: guard
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: thenExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: elseExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  id: Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Lambda(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.Lambda(FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Lambda(FSharpVar, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Lambda (Microsoft.FSharp.Quotations.FSharpVar parameter, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: parameter
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Lambda*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Let(FSharpVar, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Let (Microsoft.FSharp.Quotations.FSharpVar letVariable, Microsoft.FSharp.Quotations.FSharpExpr letExpr, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: letVariable
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: letExpr
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Let*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  id: LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  nameWithType: FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr LetRecursive (Microsoft.FSharp.Collections.FSharpList<Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>> bindings, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: bindings
      type: Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewArray(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewArray (Type elementType, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> elements);
    parameters:
    - id: elementType
      type: System.Type
      description: To be added.
    - id: elements
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewArray*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  id: NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  nameWithType: FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewDelegate (Type delegateType, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpVar> parameters, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: delegateType
      type: System.Type
      description: To be added.
    - id: parameters
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar}
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewObject (System.Reflection.ConstructorInfo constructorInfo, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> arguments);
    parameters:
    - id: constructorInfo
      type: System.Reflection.ConstructorInfo
      description: To be added.
    - id: arguments
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewObject*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewRecord(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewRecord (Type recordType, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> elements);
    parameters:
    - id: recordType
      type: System.Type
      description: To be added.
    - id: elements
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewTuple(FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewTuple (Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> elements);
    parameters:
    - id: elements
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  id: NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr NewUnionCase (Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr> arguments);
    parameters:
    - id: unionCase
      type: Microsoft.FSharp.Reflection.UnionCaseInfo
      description: To be added.
    - id: arguments
      type: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr PropertyGet (System.Reflection.PropertyInfo property, Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> indexerArgs);
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
      description: To be added.
    - id: indexerArgs
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr PropertyGet (Microsoft.FSharp.Quotations.FSharpExpr obj, System.Reflection.PropertyInfo property, Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> indexerArgs);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: property
      type: System.Reflection.PropertyInfo
      description: To be added.
    - id: indexerArgs
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr PropertySet (System.Reflection.PropertyInfo property, Microsoft.FSharp.Quotations.FSharpExpr value, Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> indexerArgs);
    parameters:
    - id: property
      type: System.Reflection.PropertyInfo
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: indexerArgs
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr PropertySet (Microsoft.FSharp.Quotations.FSharpExpr obj, System.Reflection.PropertyInfo property, Microsoft.FSharp.Quotations.FSharpExpr value, Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>> indexerArgs);
    parameters:
    - id: obj
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: property
      type: System.Reflection.PropertyInfo
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: indexerArgs
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  id: Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Quote(FSharpExpr)
  nameWithType: FSharpExpr.Quote(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Quote(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: >-
      [System.Obsolete("Please use Expr.QuoteTyped or Expr.QuoteRaw to distinguish between typed and raw quotation literals")]

      public static Microsoft.FSharp.Quotations.FSharpExpr Quote (Microsoft.FSharp.Quotations.FSharpExpr inner);
    parameters:
    - id: inner
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Quote*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  id: QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: QuoteRaw(FSharpExpr)
  nameWithType: FSharpExpr.QuoteRaw(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr QuoteRaw (Microsoft.FSharp.Quotations.FSharpExpr inner);
    parameters:
    - id: inner
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  id: QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: QuoteTyped(FSharpExpr)
  nameWithType: FSharpExpr.QuoteTyped(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr QuoteTyped (Microsoft.FSharp.Quotations.FSharpExpr inner);
    parameters:
    - id: inner
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  id: RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: RegisterReflectedDefinitions(Assembly, String, Byte[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static void RegisterReflectedDefinitions (System.Reflection.Assembly assembly, string resource, byte[] serializedValue);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: To be added.
    - id: resource
      type: System.String
      description: To be added.
    - id: serializedValue
      type: System.Byte[]
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  id: RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static void RegisterReflectedDefinitions (System.Reflection.Assembly assembly, string resource, byte[] serializedValue, Type[] referencedTypes);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: To be added.
    - id: resource
      type: System.String
      description: To be added.
    - id: serializedValue
      type: System.Byte[]
      description: To be added.
    - id: referencedTypes
      type: System.Type[]
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Sequential(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Sequential (Microsoft.FSharp.Quotations.FSharpExpr first, Microsoft.FSharp.Quotations.FSharpExpr second);
    parameters:
    - id: first
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: second
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Sequential*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  id: Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  nameWithType: FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public Microsoft.FSharp.Quotations.FSharpExpr Substitute (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>> substitution);
    parameters:
    - id: substitution
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Substitute*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.ToString
  id: ToString
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: ToString()
  nameWithType: FSharpExpr.ToString()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ToString()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.ToString*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: FSharpExpr.ToString(Boolean)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ToString(Boolean)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public string ToString (bool full);
    parameters:
    - id: full
      type: System.Boolean
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.ToString*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: TryFinally(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr TryFinally (Microsoft.FSharp.Quotations.FSharpExpr body, Microsoft.FSharp.Quotations.FSharpExpr compensation);
    parameters:
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: compensation
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  id: TryGetReflectedDefinition(System.Reflection.MethodBase)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: TryGetReflectedDefinition(MethodBase)
  nameWithType: FSharpExpr.TryGetReflectedDefinition(MethodBase)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(MethodBase)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr> TryGetReflectedDefinition (System.Reflection.MethodBase methodBase);
    parameters:
    - id: methodBase
      type: System.Reflection.MethodBase
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  id: TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr TryWith (Microsoft.FSharp.Quotations.FSharpExpr body, Microsoft.FSharp.Quotations.FSharpVar filterVar, Microsoft.FSharp.Quotations.FSharpExpr filterBody, Microsoft.FSharp.Quotations.FSharpVar catchVar, Microsoft.FSharp.Quotations.FSharpExpr catchBody);
    parameters:
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: filterVar
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: filterBody
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: catchVar
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: catchBody
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.TryWith*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  id: TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: TupleGet(FSharpExpr, Int32)
  nameWithType: FSharpExpr.TupleGet(FSharpExpr, Int32)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(FSharpExpr, Int32)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr TupleGet (Microsoft.FSharp.Quotations.FSharpExpr tuple, int index);
    parameters:
    - id: tuple
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Type
  commentId: P:Microsoft.FSharp.Quotations.FSharpExpr.Type
  id: Type
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Type
  nameWithType: FSharpExpr.Type
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Type
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Type*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  id: TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: TypeTest(FSharpExpr, Type)
  nameWithType: FSharpExpr.TypeTest(FSharpExpr, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(FSharpExpr, Type)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr TypeTest (Microsoft.FSharp.Quotations.FSharpExpr source, Type target);
    parameters:
    - id: source
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: target
      type: System.Type
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  id: UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: UnionCaseTest(FSharpExpr, UnionCaseInfo)
  nameWithType: FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr UnionCaseTest (Microsoft.FSharp.Quotations.FSharpExpr source, Microsoft.FSharp.Reflection.UnionCaseInfo unionCase);
    parameters:
    - id: source
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: unionCase
      type: Microsoft.FSharp.Reflection.UnionCaseInfo
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  id: Value(System.Object,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Value(Object, Type)
  nameWithType: FSharpExpr.Value(Object, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value(Object, Type)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Value (object value, Type expressionType);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    - id: expressionType
      type: System.Type
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Value*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  id: Value``1(``0)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Value<T>(T)
  nameWithType: FSharpExpr.Value<T>(T)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Value<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Value``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  id: ValueWithName(System.Object,System.Type,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: ValueWithName(Object, Type, String)
  nameWithType: FSharpExpr.ValueWithName(Object, Type, String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(Object, Type, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr ValueWithName (object value, Type expressionType, string name);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    - id: expressionType
      type: System.Type
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  id: ValueWithName``1(``0,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: ValueWithName<T>(T, String)
  nameWithType: FSharpExpr.ValueWithName<T>(T, String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName<T>(T, String)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr ValueWithName<T> (T value, string name);
    parameters:
    - id: value
      type: T
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  id: Var(Microsoft.FSharp.Quotations.FSharpVar)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: Var(FSharpVar)
  nameWithType: FSharpExpr.Var(FSharpVar)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Var(FSharpVar)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr Var (Microsoft.FSharp.Quotations.FSharpVar variable);
    parameters:
    - id: variable
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.Var*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  id: VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: VarSet(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.VarSet(FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.VarSet(FSharpVar, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr VarSet (Microsoft.FSharp.Quotations.FSharpVar variable, Microsoft.FSharp.Quotations.FSharpExpr value);
    parameters:
    - id: variable
      type: Microsoft.FSharp.Quotations.FSharpVar
      description: To be added.
    - id: value
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.VarSet*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  id: WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: WhileLoop(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr WhileLoop (Microsoft.FSharp.Quotations.FSharpExpr guard, Microsoft.FSharp.Quotations.FSharpExpr body);
    parameters:
    - id: guard
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  id: WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: WithValue(Object, Type, FSharpExpr)
  nameWithType: FSharpExpr.WithValue(Object, Type, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue(Object, Type, FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr WithValue (object value, Type expressionType, Microsoft.FSharp.Quotations.FSharpExpr definition);
    parameters:
    - id: value
      type: System.Object
      description: To be added.
    - id: expressionType
      type: System.Type
      description: To be added.
    - id: definition
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.WithValue*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  commentId: M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  id: WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  langs:
  - csharp
  name: WithValue<T>(T, FSharpExpr<T>)
  nameWithType: FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Quotations
  syntax:
    content: public static Microsoft.FSharp.Quotations.FSharpExpr<T> WithValue<T> (T value, Microsoft.FSharp.Quotations.FSharpExpr<T> definition);
    parameters:
    - id: value
      type: T
      description: To be added.
    - id: definition
      type: Microsoft.FSharp.Quotations.FSharpExpr`1
      description: To be added.
    return:
      type: Microsoft.FSharp.Quotations.FSharpExpr`1
      description: To be added.
  overload: Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1*
  exceptions: []
  version:
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressOf(FSharpExpr)
  nameWithType: FSharpExpr.AddressOf(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr
  nameWithType: FSharpExpr
  fullName: Microsoft.FSharp.Quotations.FSharpExpr
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressSet(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Application(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Application(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Application(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Applications(FSharpExpr, FSharpList<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Collections.FSharpList`1
  name: FSharpList<T>
  nameWithType: FSharpList<T>
  fullName: Microsoft.FSharp.Collections.FSharpList<T>
- uid: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<FSharpList<FSharpExpr>>
  nameWithType: FSharpList<FSharpList<FSharpExpr>>
  fullName: Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Call(MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Call(MethodInfo, FSharpList<FSharpExpr>)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<FSharpExpr>
  nameWithType: FSharpList<FSharpExpr>
  fullName: Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Call(FSharpExpr, MethodInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Cast<T>(FSharpExpr)
  nameWithType: FSharpExpr.Cast<T>(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Cast<T>(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr<T>
  nameWithType: FSharpExpr<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr<T>
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Coerce(FSharpExpr, Type)
  nameWithType: FSharpExpr.Coerce(FSharpExpr, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Coerce(FSharpExpr, Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: CustomAttributes
  nameWithType: FSharpExpr.CustomAttributes
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
- uid: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: DefaultValue(Type)
  nameWithType: FSharpExpr.DefaultValue(Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  nameWithType: FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(Type, FSharpList<Type>, FSharpList<FSharpExpr>, Byte[])
- uid: Microsoft.FSharp.Collections.FSharpList{System.Type}
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<Type>
  nameWithType: FSharpList<Type>
  fullName: Microsoft.FSharp.Collections.FSharpList<System.Type>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  nameWithType: FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(Type, Type[], Type[], FSharpExpr[], Byte[])
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Quotations.FSharpExpr[]
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr[]
  nameWithType: FSharpExpr[]
  fullName: Microsoft.FSharp.Quotations.FSharpExpr[]
  spec.csharp:
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Equals(Object)
  nameWithType: FSharpExpr.Equals(Object)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldGet(FSharpExpr, FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(FSharpExpr, FieldInfo)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldGet(FieldInfo)
  nameWithType: FSharpExpr.FieldGet(FieldInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(FieldInfo)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldSet(FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(FieldInfo, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  nameWithType: FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(FSharpExpr, FieldInfo, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(FSharpVar, FSharpExpr, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpVar
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpVar
  nameWithType: FSharpVar
  fullName: Microsoft.FSharp.Quotations.FSharpVar
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetFreeVars()
  nameWithType: FSharpExpr.GetFreeVars()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars()
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{Microsoft.FSharp.Quotations.FSharpVar}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<FSharpVar>
  nameWithType: IEnumerable<FSharpVar>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.FSharp.Quotations.FSharpVar>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetHashCode()
  nameWithType: FSharpExpr.GetHashCode()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GlobalVar<T>(String)
  nameWithType: FSharpExpr.GlobalVar<T>(String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar<T>(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(FSharpExpr, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Lambda(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.Lambda(FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Lambda(FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Let(FSharpVar, FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Let(FSharpVar, FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  nameWithType: FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(FSharpList<Tuple<FSharpVar,FSharpExpr>>, FSharpExpr)
- uid: System.Tuple`2
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<Tuple<FSharpVar,FSharpExpr>>
  nameWithType: FSharpList<Tuple<FSharpVar,FSharpExpr>>
  fullName: Microsoft.FSharp.Collections.FSharpList<System.Tuple<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewArray(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewArray(Type, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  nameWithType: FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(Type, FSharpList<FSharpVar>, FSharpExpr)
- uid: Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar}
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpList<FSharpVar>
  nameWithType: FSharpList<FSharpVar>
  fullName: Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpVar>
  spec.csharp:
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewObject(ConstructorInfo, FSharpList<FSharpExpr>)
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewRecord(Type, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(Type, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewTuple(FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  nameWithType: FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(UnionCaseInfo, FSharpList<FSharpExpr>)
- uid: Microsoft.FSharp.Reflection.UnionCaseInfo
  parent: Microsoft.FSharp.Reflection
  isExternal: false
  name: UnionCaseInfo
  nameWithType: UnionCaseInfo
  fullName: Microsoft.FSharp.Reflection.UnionCaseInfo
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: Microsoft.FSharp.Core.FSharpOption`1
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<FSharpList<FSharpExpr>>
  nameWithType: FSharpOption<FSharpList<FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Collections.FSharpList`1
    name: FSharpList
    nameWithType: FSharpList
    fullName: Microsoft.FSharp.Collections.FSharpList
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(FSharpExpr, PropertyInfo, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  nameWithType: FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(FSharpExpr, PropertyInfo, FSharpExpr, FSharpOption<FSharpList<FSharpExpr>>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Quote(FSharpExpr)
  nameWithType: FSharpExpr.Quote(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Quote(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteRaw(FSharpExpr)
  nameWithType: FSharpExpr.QuoteRaw(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteTyped(FSharpExpr)
  nameWithType: FSharpExpr.QuoteTyped(FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: RegisterReflectedDefinitions(Assembly, String, Byte[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[])
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  nameWithType: FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(Assembly, String, Byte[], Type[])
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Sequential(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Sequential(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  nameWithType: FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Substitute(FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>
  nameWithType: FSharpFunc<FSharpVar,FSharpOption<FSharpExpr>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpVar
    name: FSharpVar
    nameWithType: FSharpVar
    fullName: Microsoft.FSharp.Quotations.FSharpVar
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ToString()
  nameWithType: FSharpExpr.ToString()
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ToString()
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ToString(Boolean)
  nameWithType: FSharpExpr.ToString(Boolean)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ToString(Boolean)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryFinally(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryGetReflectedDefinition(MethodBase)
  nameWithType: FSharpExpr.TryGetReflectedDefinition(MethodBase)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(MethodBase)
- uid: Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<FSharpExpr>
  nameWithType: FSharpOption<FSharpExpr>
  fullName: Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Quotations.FSharpExpr>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Quotations.FSharpExpr
    name: FSharpExpr
    nameWithType: FSharpExpr
    fullName: Microsoft.FSharp.Quotations.FSharpExpr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryWith(FSharpExpr, FSharpVar, FSharpExpr, FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TupleGet(FSharpExpr, Int32)
  nameWithType: FSharpExpr.TupleGet(FSharpExpr, Int32)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(FSharpExpr, Int32)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Type
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Type
  nameWithType: FSharpExpr.Type
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Type
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TypeTest(FSharpExpr, Type)
  nameWithType: FSharpExpr.TypeTest(FSharpExpr, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(FSharpExpr, Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: UnionCaseTest(FSharpExpr, UnionCaseInfo)
  nameWithType: FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(FSharpExpr, UnionCaseInfo)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value(Object, Type)
  nameWithType: FSharpExpr.Value(Object, Type)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value(Object, Type)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value<T>(T)
  nameWithType: FSharpExpr.Value<T>(T)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName(Object, Type, String)
  nameWithType: FSharpExpr.ValueWithName(Object, Type, String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(Object, Type, String)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName<T>(T, String)
  nameWithType: FSharpExpr.ValueWithName<T>(T, String)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName<T>(T, String)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Var(FSharpVar)
  nameWithType: FSharpExpr.Var(FSharpVar)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Var(FSharpVar)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: VarSet(FSharpVar, FSharpExpr)
  nameWithType: FSharpExpr.VarSet(FSharpVar, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.VarSet(FSharpVar, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WhileLoop(FSharpExpr, FSharpExpr)
  nameWithType: FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(FSharpExpr, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue(Object, Type, FSharpExpr)
  nameWithType: FSharpExpr.WithValue(Object, Type, FSharpExpr)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue(Object, Type, FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue<T>(T, FSharpExpr<T>)
  nameWithType: FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue<T>(T, FSharpExpr<T>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressOf
  nameWithType: FSharpExpr.AddressOf
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressOf
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: AddressSet
  nameWithType: FSharpExpr.AddressSet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.AddressSet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Application*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Application
  nameWithType: FSharpExpr.Application
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Application
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Applications*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Applications
  nameWithType: FSharpExpr.Applications
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Applications
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Call*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Call
  nameWithType: FSharpExpr.Call
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Call
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Cast``1*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Cast<T>
  nameWithType: FSharpExpr.Cast<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Cast<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Coerce*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Coerce
  nameWithType: FSharpExpr.Coerce
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Coerce
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: CustomAttributes
  nameWithType: FSharpExpr.CustomAttributes
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: DefaultValue
  nameWithType: FSharpExpr.DefaultValue
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize
  nameWithType: FSharpExpr.Deserialize
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Deserialize40
  nameWithType: FSharpExpr.Deserialize40
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Equals*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Equals
  nameWithType: FSharpExpr.Equals
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Equals
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldGet
  nameWithType: FSharpExpr.FieldGet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldGet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: FieldSet
  nameWithType: FSharpExpr.FieldSet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.FieldSet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ForIntegerRangeLoop
  nameWithType: FSharpExpr.ForIntegerRangeLoop
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetFreeVars
  nameWithType: FSharpExpr.GetFreeVars
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GetHashCode
  nameWithType: FSharpExpr.GetHashCode
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: GlobalVar<T>
  nameWithType: FSharpExpr.GlobalVar<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: IfThenElse
  nameWithType: FSharpExpr.IfThenElse
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Lambda*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Lambda
  nameWithType: FSharpExpr.Lambda
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Lambda
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Let*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Let
  nameWithType: FSharpExpr.Let
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Let
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: LetRecursive
  nameWithType: FSharpExpr.LetRecursive
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewArray*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewArray
  nameWithType: FSharpExpr.NewArray
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewArray
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewDelegate
  nameWithType: FSharpExpr.NewDelegate
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewObject*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewObject
  nameWithType: FSharpExpr.NewObject
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewObject
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewRecord
  nameWithType: FSharpExpr.NewRecord
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewRecord
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewTuple
  nameWithType: FSharpExpr.NewTuple
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewTuple
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: NewUnionCase
  nameWithType: FSharpExpr.NewUnionCase
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertyGet
  nameWithType: FSharpExpr.PropertyGet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: PropertySet
  nameWithType: FSharpExpr.PropertySet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.PropertySet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Quote*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Quote
  nameWithType: FSharpExpr.Quote
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Quote
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteRaw
  nameWithType: FSharpExpr.QuoteRaw
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: QuoteTyped
  nameWithType: FSharpExpr.QuoteTyped
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: RegisterReflectedDefinitions
  nameWithType: FSharpExpr.RegisterReflectedDefinitions
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Sequential*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Sequential
  nameWithType: FSharpExpr.Sequential
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Sequential
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Substitute*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Substitute
  nameWithType: FSharpExpr.Substitute
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Substitute
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ToString*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ToString
  nameWithType: FSharpExpr.ToString
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ToString
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryFinally
  nameWithType: FSharpExpr.TryFinally
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryFinally
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryGetReflectedDefinition
  nameWithType: FSharpExpr.TryGetReflectedDefinition
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TryWith*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TryWith
  nameWithType: FSharpExpr.TryWith
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TryWith
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TupleGet
  nameWithType: FSharpExpr.TupleGet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TupleGet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Type*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Type
  nameWithType: FSharpExpr.Type
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Type
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: TypeTest
  nameWithType: FSharpExpr.TypeTest
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.TypeTest
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: UnionCaseTest
  nameWithType: FSharpExpr.UnionCaseTest
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value
  nameWithType: FSharpExpr.Value
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Value``1*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Value<T>
  nameWithType: FSharpExpr.Value<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Value<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName
  nameWithType: FSharpExpr.ValueWithName
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: ValueWithName<T>
  nameWithType: FSharpExpr.ValueWithName<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName<T>
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.Var*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: Var
  nameWithType: FSharpExpr.Var
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.Var
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.VarSet*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: VarSet
  nameWithType: FSharpExpr.VarSet
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.VarSet
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WhileLoop
  nameWithType: FSharpExpr.WhileLoop
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue
  nameWithType: FSharpExpr.WithValue
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
- uid: Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1*
  parent: Microsoft.FSharp.Quotations.FSharpExpr
  isExternal: false
  name: WithValue<T>
  nameWithType: FSharpExpr.WithValue<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr.WithValue<T>
  monikers:
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Quotations/FSharpExpr.xml
