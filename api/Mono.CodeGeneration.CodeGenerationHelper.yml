### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeGenerationHelper
  commentId: T:Mono.CodeGeneration.CodeGenerationHelper
  id: CodeGenerationHelper
  children:
  - Mono.CodeGeneration.CodeGenerationHelper.#ctor
  - Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue
  - Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)
  - Mono.CodeGeneration.CodeGenerationHelper.GetMethodException(System.Reflection.MethodBase,System.String)
  - Mono.CodeGeneration.CodeGenerationHelper.IsNumber(System.Type)
  - Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr(System.Reflection.Emit.ILGenerator,System.Type)
  - Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr(System.Reflection.Emit.ILGenerator,System.Type)
  langs:
  - csharp
  name: CodeGenerationHelper
  nameWithType: CodeGenerationHelper
  fullName: Mono.CodeGeneration.CodeGenerationHelper
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public class CodeGenerationHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.#ctor
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.#ctor
  id: '#ctor'
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: CodeGenerationHelper()
  nameWithType: CodeGenerationHelper.CodeGenerationHelper()
  fullName: CodeGenerationHelper.CodeGenerationHelper()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeGenerationHelper ();
    parameters: []
  overload: Mono.CodeGeneration.CodeGenerationHelper.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
  fullName: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void GenerateMethodCall (System.Reflection.Emit.ILGenerator gen, Mono.CodeGeneration.CodeExpression target, Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  id: GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
  nameWithType: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
  fullName: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void GenerateMethodCall (System.Reflection.Emit.ILGenerator gen, Mono.CodeGeneration.CodeExpression target, System.Reflection.MethodBase method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: System.Reflection.MethodBase
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue
  id: GeneratePrimitiveValue
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: GeneratePrimitiveValue()
  nameWithType: CodeGenerationHelper.GeneratePrimitiveValue()
  fullName: CodeGenerationHelper.GeneratePrimitiveValue()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void GeneratePrimitiveValue ();
    parameters: []
  overload: Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)
  id: GenerateSafeConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: GenerateSafeConversion(ILGenerator, Type, Type)
  nameWithType: CodeGenerationHelper.GenerateSafeConversion(ILGenerator, Type, Type)
  fullName: CodeGenerationHelper.GenerateSafeConversion(ILGenerator, Type, Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void GenerateSafeConversion (System.Reflection.Emit.ILGenerator gen, Type targetType, Type sourceType);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: targetType
      type: System.Type
      description: To be added.
    - id: sourceType
      type: System.Type
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GetMethodException(System.Reflection.MethodBase,System.String)
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.GetMethodException(System.Reflection.MethodBase,System.String)
  id: GetMethodException(System.Reflection.MethodBase,System.String)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: GetMethodException(MethodBase, String)
  nameWithType: CodeGenerationHelper.GetMethodException(MethodBase, String)
  fullName: CodeGenerationHelper.GetMethodException(MethodBase, String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Exception GetMethodException (System.Reflection.MethodBase method, string msg);
    parameters:
    - id: method
      type: System.Reflection.MethodBase
      description: To be added.
    - id: msg
      type: System.String
      description: To be added.
    return:
      type: System.Exception
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.GetMethodException*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.IsNumber(System.Type)
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.IsNumber(System.Type)
  id: IsNumber(System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: IsNumber(Type)
  nameWithType: CodeGenerationHelper.IsNumber(Type)
  fullName: CodeGenerationHelper.IsNumber(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static bool IsNumber (Type t);
    parameters:
    - id: t
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.IsNumber*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr(System.Reflection.Emit.ILGenerator,System.Type)
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr(System.Reflection.Emit.ILGenerator,System.Type)
  id: LoadFromPtr(System.Reflection.Emit.ILGenerator,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: LoadFromPtr(ILGenerator, Type)
  nameWithType: CodeGenerationHelper.LoadFromPtr(ILGenerator, Type)
  fullName: CodeGenerationHelper.LoadFromPtr(ILGenerator, Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void LoadFromPtr (System.Reflection.Emit.ILGenerator ig, Type t);
    parameters:
    - id: ig
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: t
      type: System.Type
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr(System.Reflection.Emit.ILGenerator,System.Type)
  commentId: M:Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr(System.Reflection.Emit.ILGenerator,System.Type)
  id: SaveToPtr(System.Reflection.Emit.ILGenerator,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  langs:
  - csharp
  name: SaveToPtr(ILGenerator, Type)
  nameWithType: CodeGenerationHelper.SaveToPtr(ILGenerator, Type)
  fullName: CodeGenerationHelper.SaveToPtr(ILGenerator, Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static void SaveToPtr (System.Reflection.Emit.ILGenerator ig, Type t);
    parameters:
    - id: ig
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: t
      type: System.Type
      description: To be added.
  overload: Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.CodeGeneration.CodeGenerationHelper.#ctor
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: CodeGenerationHelper()
  nameWithType: CodeGenerationHelper.CodeGenerationHelper()
  fullName: CodeGenerationHelper.CodeGenerationHelper()
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
  fullName: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, CodeMethod, CodeExpression[])
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.CodeMethod
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeMethod
  nameWithType: CodeMethod
  fullName: Mono.CodeGeneration.CodeMethod
- uid: Mono.CodeGeneration.CodeExpression[]
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression[]
  nameWithType: CodeExpression[]
  fullName: Mono.CodeGeneration.CodeExpression[]
  spec.csharp:
  - uid: Mono.CodeGeneration.CodeExpression
    name: CodeExpression
    nameWithType: CodeExpression
    fullName: Mono.CodeGeneration.CodeExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall(System.Reflection.Emit.ILGenerator,Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
  nameWithType: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
  fullName: CodeGenerationHelper.GenerateMethodCall(ILGenerator, CodeExpression, MethodBase, CodeExpression[])
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GeneratePrimitiveValue()
  nameWithType: CodeGenerationHelper.GeneratePrimitiveValue()
  fullName: CodeGenerationHelper.GeneratePrimitiveValue()
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion(System.Reflection.Emit.ILGenerator,System.Type,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GenerateSafeConversion(ILGenerator, Type, Type)
  nameWithType: CodeGenerationHelper.GenerateSafeConversion(ILGenerator, Type, Type)
  fullName: CodeGenerationHelper.GenerateSafeConversion(ILGenerator, Type, Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mono.CodeGeneration.CodeGenerationHelper.GetMethodException(System.Reflection.MethodBase,System.String)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GetMethodException(MethodBase, String)
  nameWithType: CodeGenerationHelper.GetMethodException(MethodBase, String)
  fullName: CodeGenerationHelper.GetMethodException(MethodBase, String)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.CodeGenerationHelper.IsNumber(System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: IsNumber(Type)
  nameWithType: CodeGenerationHelper.IsNumber(Type)
  fullName: CodeGenerationHelper.IsNumber(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr(System.Reflection.Emit.ILGenerator,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: LoadFromPtr(ILGenerator, Type)
  nameWithType: CodeGenerationHelper.LoadFromPtr(ILGenerator, Type)
  fullName: CodeGenerationHelper.LoadFromPtr(ILGenerator, Type)
- uid: Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr(System.Reflection.Emit.ILGenerator,System.Type)
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: SaveToPtr(ILGenerator, Type)
  nameWithType: CodeGenerationHelper.SaveToPtr(ILGenerator, Type)
  fullName: CodeGenerationHelper.SaveToPtr(ILGenerator, Type)
- uid: Mono.CodeGeneration.CodeGenerationHelper.#ctor*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: CodeGenerationHelper
  nameWithType: CodeGenerationHelper.CodeGenerationHelper
  fullName: CodeGenerationHelper.CodeGenerationHelper
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateMethodCall*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GenerateMethodCall
  nameWithType: CodeGenerationHelper.GenerateMethodCall
  fullName: CodeGenerationHelper.GenerateMethodCall
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GeneratePrimitiveValue*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GeneratePrimitiveValue
  nameWithType: CodeGenerationHelper.GeneratePrimitiveValue
  fullName: CodeGenerationHelper.GeneratePrimitiveValue
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GenerateSafeConversion*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GenerateSafeConversion
  nameWithType: CodeGenerationHelper.GenerateSafeConversion
  fullName: CodeGenerationHelper.GenerateSafeConversion
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.GetMethodException*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: GetMethodException
  nameWithType: CodeGenerationHelper.GetMethodException
  fullName: CodeGenerationHelper.GetMethodException
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.IsNumber*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: IsNumber
  nameWithType: CodeGenerationHelper.IsNumber
  fullName: CodeGenerationHelper.IsNumber
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.LoadFromPtr*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: LoadFromPtr
  nameWithType: CodeGenerationHelper.LoadFromPtr
  fullName: CodeGenerationHelper.LoadFromPtr
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
- uid: Mono.CodeGeneration.CodeGenerationHelper.SaveToPtr*
  parent: Mono.CodeGeneration.CodeGenerationHelper
  isExternal: false
  name: SaveToPtr
  nameWithType: CodeGenerationHelper.SaveToPtr
  fullName: CodeGenerationHelper.SaveToPtr
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeGenerationHelper.xml
