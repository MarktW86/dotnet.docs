### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  commentId: T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  id: FSharpMailboxProcessor`1
  children:
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  - Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  langs:
  - csharp
  name: FSharpMailboxProcessor<TMsg>
  nameWithType: FSharpMailboxProcessor<TMsg>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AutoSerializable(false)]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      [Microsoft.FSharp.Core.CompiledName("FSharpMailboxProcessor`1")]

      [Microsoft.FSharp.Core.Sealed]

      public sealed class FSharpMailboxProcessor<TMsg> : IDisposable
    typeParameters:
    - id: TMsg
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AutoSerializableAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: Microsoft.FSharp.Core.SealedAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  id: '#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})'
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  nameWithType: FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  type: Constructor
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public FSharpMailboxProcessor (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>,Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>> body, Microsoft.FSharp.Core.FSharpOption<System.Threading.CancellationToken> cancellationToken);
    parameters:
    - id: body
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{TMsg},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}}
      description: To be added.
    - id: cancellationToken
      type: Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength
  commentId: P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength
  id: CurrentQueueLength
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: CurrentQueueLength
  nameWithType: FSharpMailboxProcessor<TMsg>.CurrentQueueLength
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.CurrentQueueLength
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public int CurrentQueueLength { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout
  commentId: P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout
  id: DefaultTimeout
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: DefaultTimeout
  nameWithType: FSharpMailboxProcessor<TMsg>.DefaultTimeout
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.DefaultTimeout
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public int DefaultTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error
  commentId: E:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error
  id: Error
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Error
  nameWithType: FSharpMailboxProcessor<TMsg>.Error
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Error
  type: Event
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CLIEvent]

      [add: Microsoft.FSharp.Core.CLIEvent]

      [remove: Microsoft.FSharp.Core.CLIEvent]

      public event Microsoft.FSharp.Control.FSharpHandler<Exception> Error;
    return:
      type: Microsoft.FSharp.Control.FSharpHandler{System.Exception}
      description: To be added.
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CLIEventAttribute
  - type: 'add: Microsoft.FSharp.Core.CLIEvent'
  - type: 'remove: Microsoft.FSharp.Core.CLIEvent'
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)
  id: Post(`0)
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Post(TMsg)
  nameWithType: FSharpMailboxProcessor<TMsg>.Post(TMsg)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Post(TMsg)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public void Post (TMsg message);
    parameters:
    - id: message
      type: TMsg
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<TReply> PostAndAsyncReply<TReply> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>,TMsg> buildMessage, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: buildMessage
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{TReply},TMsg}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{TReply}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public TReply PostAndReply<TReply> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>,TMsg> buildMessage, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: buildMessage
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{TReply},TMsg}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: TReply
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<TReply>> PostAndTryAsyncReply<TReply> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>,TMsg> buildMessage, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: buildMessage
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{TReply},TMsg}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{TReply}}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Receive(FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Receive(FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Receive(FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<TMsg> Receive (Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{TMsg}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> Scan<T> (Microsoft.FSharp.Core.FSharpFunc<TMsg,Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Control.FSharpAsync<T>>> scanner, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: scanner
      type: Microsoft.FSharp.Core.FSharpFunc{TMsg,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{T}}}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start
  id: Start
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Start()
  nameWithType: FSharpMailboxProcessor<TMsg>.Start()
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Start()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public void Start ();
    parameters: []
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  id: Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public static Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg> Start (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>,Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>> body, Microsoft.FSharp.Core.FSharpOption<System.Threading.CancellationToken> cancellationToken);
    parameters:
    - id: body
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{TMsg},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}}
      description: To be added.
    - id: cancellationToken
      type: Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Core.FSharpOption<TReply> TryPostAndReply<TReply> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>,TMsg> buildMessage, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: buildMessage
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{TReply},TMsg}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpOption{TReply}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: TryReceive(FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryReceive(FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryReceive(FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<TMsg>> TryReceive (Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{TMsg}}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  commentId: M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  id: TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  langs:
  - csharp
  name: TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<T>> TryScan<T> (Microsoft.FSharp.Core.FSharpFunc<TMsg,Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Control.FSharpAsync<T>>> scanner, Microsoft.FSharp.Core.FSharpOption<int> timeout);
    parameters:
    - id: scanner
      type: Microsoft.FSharp.Core.FSharpFunc{TMsg,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{T}}}
      description: To be added.
    - id: timeout
      type: Microsoft.FSharp.Core.FSharpOption{System.Int32}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{T}}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  nameWithType: FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  name: FSharpMailboxProcessor<TMsg>
  nameWithType: FSharpMailboxProcessor<TMsg>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>
- uid: TMsg
  name: TMsg
  nameWithType: TMsg
  fullName: TMsg
- uid: Microsoft.FSharp.Control.FSharpAsync`1
  name: FSharpAsync<T>
  nameWithType: FSharpAsync<T>
  fullName: Microsoft.FSharp.Control.FSharpAsync<T>
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{TMsg},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>
  nameWithType: FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>,Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
    name: FSharpMailboxProcessor
    nameWithType: FSharpMailboxProcessor
    fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMsg
    name: TMsg
    nameWithType: TMsg
    fullName: TMsg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpOption`1
  name: FSharpOption<T>
  nameWithType: FSharpOption<T>
  fullName: Microsoft.FSharp.Core.FSharpOption<T>
- uid: System.Threading.CancellationToken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<CancellationToken>
  nameWithType: FSharpOption<CancellationToken>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Threading.CancellationToken>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: CurrentQueueLength
  nameWithType: FSharpMailboxProcessor<TMsg>.CurrentQueueLength
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.CurrentQueueLength
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: DefaultTimeout
  nameWithType: FSharpMailboxProcessor<TMsg>.DefaultTimeout
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.DefaultTimeout
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Error
  nameWithType: FSharpMailboxProcessor<TMsg>.Error
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Error
- uid: Microsoft.FSharp.Control.FSharpHandler`1
  name: FSharpHandler<T>
  nameWithType: FSharpHandler<T>
  fullName: Microsoft.FSharp.Control.FSharpHandler<T>
- uid: System.Exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.FSharp.Control.FSharpHandler{System.Exception}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpHandler<Exception>
  nameWithType: FSharpHandler<Exception>
  fullName: Microsoft.FSharp.Control.FSharpHandler<System.Exception>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpHandler`1
    name: FSharpHandler
    nameWithType: FSharpHandler
    fullName: Microsoft.FSharp.Control.FSharpHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Post(TMsg)
  nameWithType: FSharpMailboxProcessor<TMsg>.Post(TMsg)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Post(TMsg)
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
- uid: TReply
  name: TReply
  nameWithType: TReply
  fullName: TReply
- uid: Microsoft.FSharp.Control.FSharpAsync{TReply}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<TReply>
  nameWithType: FSharpAsync<TReply>
  fullName: Microsoft.FSharp.Control.FSharpAsync<TReply>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: TReply
    name: TReply
    nameWithType: TReply
    fullName: TReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1
  name: FSharpAsyncReplyChannel<TReply>
  nameWithType: FSharpAsyncReplyChannel<TReply>
  fullName: Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{TReply},TMsg}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>
  nameWithType: FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Control.FSharpAsyncReplyChannel<TReply>,TMsg>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1
    name: FSharpAsyncReplyChannel
    nameWithType: FSharpAsyncReplyChannel
    fullName: Microsoft.FSharp.Control.FSharpAsyncReplyChannel
  - name: <
    nameWithType: <
    fullName: <
  - uid: TReply
    name: TReply
    nameWithType: TReply
    fullName: TReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TMsg
    name: TMsg
    nameWithType: TMsg
    fullName: TMsg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpOption{System.Int32}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<Int32>
  nameWithType: FSharpOption<Int32>
  fullName: Microsoft.FSharp.Core.FSharpOption<System.Int32>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
- uid: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{TReply}}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<FSharpOption<TReply>>
  nameWithType: FSharpAsync<FSharpOption<TReply>>
  fullName: Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<TReply>>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: TReply
    name: TReply
    nameWithType: TReply
    fullName: TReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Receive(FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Receive(FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Receive(FSharpOption<Int32>)
- uid: Microsoft.FSharp.Control.FSharpAsync{TMsg}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<TMsg>
  nameWithType: FSharpAsync<TMsg>
  fullName: Microsoft.FSharp.Control.FSharpAsync<TMsg>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMsg
    name: TMsg
    nameWithType: TMsg
    fullName: TMsg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Scan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.FSharpFunc{TMsg,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{T}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>
  nameWithType: FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<TMsg,Microsoft.FSharp.Core.FSharpOption<Microsoft.FSharp.Control.FSharpAsync<T>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMsg
    name: TMsg
    nameWithType: TMsg
    fullName: TMsg
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Start()
  nameWithType: FSharpMailboxProcessor<TMsg>.Start()
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Start()
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  nameWithType: FSharpMailboxProcessor<TMsg>.Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Start(FSharpFunc<FSharpMailboxProcessor<TMsg>,FSharpAsync<Unit>>, FSharpOption<CancellationToken>)
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>(FSharpFunc<FSharpAsyncReplyChannel<TReply>,TMsg>, FSharpOption<Int32>)
- uid: Microsoft.FSharp.Core.FSharpOption{TReply}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpOption<TReply>
  nameWithType: FSharpOption<TReply>
  fullName: Microsoft.FSharp.Core.FSharpOption<TReply>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: TReply
    name: TReply
    nameWithType: TReply
    fullName: TReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryReceive(FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryReceive(FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryReceive(FSharpOption<Int32>)
- uid: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{TMsg}}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<FSharpOption<TMsg>>
  nameWithType: FSharpAsync<FSharpOption<TMsg>>
  fullName: Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<TMsg>>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: TMsg
    name: TMsg
    nameWithType: TMsg
    fullName: TMsg
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  nameWithType: FSharpMailboxProcessor<TMsg>.TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryScan<T>(FSharpFunc<TMsg,FSharpOption<FSharpAsync<T>>>, FSharpOption<Int32>)
- uid: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{T}}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<FSharpOption<T>>
  nameWithType: FSharpAsync<FSharpOption<T>>
  fullName: Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.FSharpOption<T>>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpOption`1
    name: FSharpOption
    nameWithType: FSharpOption
    fullName: Microsoft.FSharp.Core.FSharpOption
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: FSharpMailboxProcessor<TMsg>
  nameWithType: FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.FSharpMailboxProcessor<TMsg>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: CurrentQueueLength
  nameWithType: FSharpMailboxProcessor<TMsg>.CurrentQueueLength
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.CurrentQueueLength
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: DefaultTimeout
  nameWithType: FSharpMailboxProcessor<TMsg>.DefaultTimeout
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.DefaultTimeout
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Post
  nameWithType: FSharpMailboxProcessor<TMsg>.Post
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Post
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndAsyncReply<TReply>
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndAsyncReply<TReply>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndReply<TReply>
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndReply<TReply>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: PostAndTryAsyncReply<TReply>
  nameWithType: FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.PostAndTryAsyncReply<TReply>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Receive
  nameWithType: FSharpMailboxProcessor<TMsg>.Receive
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Receive
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Scan<T>
  nameWithType: FSharpMailboxProcessor<TMsg>.Scan<T>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Scan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: Start
  nameWithType: FSharpMailboxProcessor<TMsg>.Start
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.Start
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryPostAndReply<TReply>
  nameWithType: FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryPostAndReply<TReply>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryReceive
  nameWithType: FSharpMailboxProcessor<TMsg>.TryReceive
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryReceive
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
- uid: Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1*
  parent: Microsoft.FSharp.Control.FSharpMailboxProcessor`1
  isExternal: false
  name: TryScan<T>
  nameWithType: FSharpMailboxProcessor<TMsg>.TryScan<T>
  fullName: Microsoft.FSharp.Control.FSharpMailboxProcessor<TMsg>.TryScan<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpMailboxProcessor`1.xml
