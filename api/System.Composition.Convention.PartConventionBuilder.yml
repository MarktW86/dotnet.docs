### YamlMime:ManagedReference
items:
- uid: System.Composition.Convention.PartConventionBuilder
  commentId: T:System.Composition.Convention.PartConventionBuilder
  id: PartConventionBuilder
  children:
  - System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  - System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  - System.Composition.Convention.PartConventionBuilder.Export
  - System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.Export``1
  - System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  - System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  - System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  - System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  - System.Composition.Convention.PartConventionBuilder.Shared
  - System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  langs:
  - csharp
  name: PartConventionBuilder
  nameWithType: PartConventionBuilder
  fullName: System.Composition.Convention.PartConventionBuilder
  type: Class
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public class PartConventionBuilder
  inheritance:
  - System.Object
  derivedClasses:
  - System.Composition.Convention.PartConventionBuilder`1
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  commentId: M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  id: AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: AddPartMetadata(String, Func<Type,Object>)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
  fullName: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, Func<Type,object> getValueFromPartType);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: getValueFromPartType
      type: System.Func{System.Type,System.Object}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.AddPartMetadata*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  commentId: M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  id: AddPartMetadata(System.String,System.Object)
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: AddPartMetadata(String, Object)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Object)
  fullName: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(String, Object)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.AddPartMetadata*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export
  commentId: M:System.Composition.Convention.PartConventionBuilder.Export
  id: Export
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Export()
  nameWithType: PartConventionBuilder.Export()
  fullName: System.Composition.Convention.PartConventionBuilder.Export()
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Export ();
    parameters: []
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Export*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  id: Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Export(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export(Action<ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.Export(Action<ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Export (Action<System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: exportConfiguration
      type: System.Action{System.Composition.Convention.ExportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Export*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export``1
  commentId: M:System.Composition.Convention.PartConventionBuilder.Export``1
  id: Export``1
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Export<T>()
  nameWithType: PartConventionBuilder.Export<T>()
  fullName: System.Composition.Convention.PartConventionBuilder.Export<T>()
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Export<T> ();
    parameters: []
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Export``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  id: Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Export<T>(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Export<T> (Action<System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: exportConfiguration
      type: System.Action{System.Composition.Convention.ExportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Export``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  id: ExportInterfaces
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportInterfaces()
  nameWithType: PartConventionBuilder.ExportInterfaces()
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces()
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportInterfaces ();
    parameters: []
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportInterfaces*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  id: ExportInterfaces(System.Predicate{System.Type})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportInterfaces(Predicate<Type>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(Predicate<Type>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate<Type> interfaceFilter);
    parameters:
    - id: interfaceFilter
      type: System.Predicate{System.Type}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportInterfaces*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  id: ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate<Type> interfaceFilter, Action<Type,System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: interfaceFilter
      type: System.Predicate{System.Type}
      description: To be added.
    - id: exportConfiguration
      type: System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportInterfaces*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    - id: exportConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportProperties*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  id: ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportProperties*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportProperties``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  id: ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ExportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    - id: exportConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ExportProperties``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ImportProperties*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  id: ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    - id: importConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ImportProperties*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ImportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ImportProperties``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  id: ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder ImportProperties<T> (Predicate<System.Reflection.PropertyInfo> propertyFilter, Action<System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Predicate{System.Reflection.PropertyInfo}
      description: To be added.
    - id: importConfiguration
      type: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.ImportProperties``1*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  id: NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: NotifyImportsSatisfied(Predicate<MethodInfo>)
  nameWithType: PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied (Predicate<System.Reflection.MethodInfo> methodFilter);
    parameters:
    - id: methodFilter
      type: System.Predicate{System.Reflection.MethodInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  commentId: M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  id: SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func<System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo>,System.Reflection.ConstructorInfo> constructorSelector);
    parameters:
    - id: constructorSelector
      type: System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.SelectConstructor*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  commentId: M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  id: SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func<System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo>,System.Reflection.ConstructorInfo> constructorSelector, Action<System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder> importConfiguration);
    parameters:
    - id: constructorSelector
      type: System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo}
      description: To be added.
    - id: importConfiguration
      type: System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder}
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.SelectConstructor*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Shared
  commentId: M:System.Composition.Convention.PartConventionBuilder.Shared
  id: Shared
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Shared()
  nameWithType: PartConventionBuilder.Shared()
  fullName: System.Composition.Convention.PartConventionBuilder.Shared()
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Shared ();
    parameters: []
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Shared*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  commentId: M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  id: Shared(System.String)
  parent: System.Composition.Convention.PartConventionBuilder
  langs:
  - csharp
  name: Shared(String)
  nameWithType: PartConventionBuilder.Shared(String)
  fullName: System.Composition.Convention.PartConventionBuilder.Shared(String)
  type: Method
  assemblies:
  - System.Composition.Convention
  namespace: System.Composition.Convention
  syntax:
    content: public System.Composition.Convention.PartConventionBuilder Shared (string sharingBoundary);
    parameters:
    - id: sharingBoundary
      type: System.String
      description: To be added.
    return:
      type: System.Composition.Convention.PartConventionBuilder
      description: To be added.
  overload: System.Composition.Convention.PartConventionBuilder.Shared*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: AddPartMetadata(String, Func<Type,Object>)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
  fullName: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(String, Func<Type,Object>)
- uid: System.Composition.Convention.PartConventionBuilder
  parent: System.Composition.Convention
  isExternal: false
  name: PartConventionBuilder
  nameWithType: PartConventionBuilder
  fullName: System.Composition.Convention.PartConventionBuilder
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Func{System.Type,System.Object}
  parent: System
  isExternal: false
  name: Func<Type,Object>
  nameWithType: Func<Type,Object>
  fullName: System.Func<System.Type,System.Object>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: AddPartMetadata(String, Object)
  nameWithType: PartConventionBuilder.AddPartMetadata(String, Object)
  fullName: System.Composition.Convention.PartConventionBuilder.AddPartMetadata(String, Object)
- uid: System.Composition.Convention.PartConventionBuilder.Export
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export()
  nameWithType: PartConventionBuilder.Export()
  fullName: System.Composition.Convention.PartConventionBuilder.Export()
- uid: System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export(Action<ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.Export(Action<ExportConventionBuilder>)
- uid: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
- uid: System.Composition.Convention.ExportConventionBuilder
  name: ExportConventionBuilder
  nameWithType: ExportConventionBuilder
  fullName: System.Composition.Convention.ExportConventionBuilder
- uid: System.Action{System.Composition.Convention.ExportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<ExportConventionBuilder>
  nameWithType: Action<ExportConventionBuilder>
  fullName: System.Action<System.Composition.Convention.ExportConventionBuilder>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Composition.Convention.ExportConventionBuilder
    name: ExportConventionBuilder
    nameWithType: ExportConventionBuilder
    fullName: System.Composition.Convention.ExportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.Export``1
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export<T>()
  nameWithType: PartConventionBuilder.Export<T>()
  fullName: System.Composition.Convention.PartConventionBuilder.Export<T>()
- uid: System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export<T>(Action<ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.Export<T>(Action<ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces()
  nameWithType: PartConventionBuilder.ExportInterfaces()
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces()
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(Predicate<Type>)
- uid: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Predicate{System.Type}
  parent: System
  isExternal: false
  name: Predicate<Type>
  nameWithType: Predicate<Type>
  fullName: System.Predicate<System.Type>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces(Predicate<Type>, Action<Type,ExportConventionBuilder>)
- uid: System.Action`2
  name: Action<T1,T2>
  nameWithType: Action<T1,T2>
  fullName: System.Action<T1,T2>
- uid: System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<Type,ExportConventionBuilder>
  nameWithType: Action<Type,ExportConventionBuilder>
  fullName: System.Action<System.Type,System.Composition.Convention.ExportConventionBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Composition.Convention.ExportConventionBuilder
    name: ExportConventionBuilder
    nameWithType: ExportConventionBuilder
    fullName: System.Composition.Convention.ExportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
- uid: System.Reflection.PropertyInfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Predicate{System.Reflection.PropertyInfo}
  parent: System
  isExternal: false
  name: Predicate<PropertyInfo>
  nameWithType: Predicate<PropertyInfo>
  fullName: System.Predicate<System.Reflection.PropertyInfo>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<PropertyInfo,ExportConventionBuilder>
  nameWithType: Action<PropertyInfo,ExportConventionBuilder>
  fullName: System.Action<System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Composition.Convention.ExportConventionBuilder
    name: ExportConventionBuilder
    nameWithType: ExportConventionBuilder
    fullName: System.Composition.Convention.ExportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  nameWithType: PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ExportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
- uid: System.Composition.Convention.ImportConventionBuilder
  name: ImportConventionBuilder
  nameWithType: ImportConventionBuilder
  fullName: System.Composition.Convention.ImportConventionBuilder
- uid: System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<PropertyInfo,ImportConventionBuilder>
  nameWithType: Action<PropertyInfo,ImportConventionBuilder>
  fullName: System.Action<System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: System.Reflection.PropertyInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Composition.Convention.ImportConventionBuilder
    name: ImportConventionBuilder
    nameWithType: ImportConventionBuilder
    fullName: System.Composition.Convention.ImportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties<T>(Predicate<PropertyInfo>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>)
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties<T>(Predicate<PropertyInfo>, Action<PropertyInfo,ImportConventionBuilder>)
- uid: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: NotifyImportsSatisfied(Predicate<MethodInfo>)
  nameWithType: PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(Predicate<MethodInfo>)
- uid: System.Reflection.MethodInfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Predicate{System.Reflection.MethodInfo}
  parent: System
  isExternal: false
  name: Predicate<MethodInfo>
  nameWithType: Predicate<MethodInfo>
  fullName: System.Predicate<System.Reflection.MethodInfo>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
  fullName: System.Composition.Convention.PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Reflection.ConstructorInfo
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo}
  parent: System
  isExternal: false
  name: Func<IEnumerable<ConstructorInfo>,ConstructorInfo>
  nameWithType: Func<IEnumerable<ConstructorInfo>,ConstructorInfo>
  fullName: System.Func<System.Collections.Generic.IEnumerable<System.Reflection.ConstructorInfo>,System.Reflection.ConstructorInfo>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  nameWithType: PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
  fullName: System.Composition.Convention.PartConventionBuilder.SelectConstructor(Func<IEnumerable<ConstructorInfo>,ConstructorInfo>, Action<ParameterInfo,ImportConventionBuilder>)
- uid: System.Reflection.ParameterInfo
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder}
  parent: System
  isExternal: false
  name: Action<ParameterInfo,ImportConventionBuilder>
  nameWithType: Action<ParameterInfo,ImportConventionBuilder>
  fullName: System.Action<System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Composition.Convention.ImportConventionBuilder
    name: ImportConventionBuilder
    nameWithType: ImportConventionBuilder
    fullName: System.Composition.Convention.ImportConventionBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Convention.PartConventionBuilder.Shared
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Shared()
  nameWithType: PartConventionBuilder.Shared()
  fullName: System.Composition.Convention.PartConventionBuilder.Shared()
- uid: System.Composition.Convention.PartConventionBuilder.Shared(System.String)
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Shared(String)
  nameWithType: PartConventionBuilder.Shared(String)
  fullName: System.Composition.Convention.PartConventionBuilder.Shared(String)
- uid: System.Composition.Convention.PartConventionBuilder.AddPartMetadata*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: AddPartMetadata
  nameWithType: PartConventionBuilder.AddPartMetadata
  fullName: System.Composition.Convention.PartConventionBuilder.AddPartMetadata
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export
  nameWithType: PartConventionBuilder.Export
  fullName: System.Composition.Convention.PartConventionBuilder.Export
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Export``1*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Export<T>
  nameWithType: PartConventionBuilder.Export<T>
  fullName: System.Composition.Convention.PartConventionBuilder.Export<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportInterfaces*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportInterfaces
  nameWithType: PartConventionBuilder.ExportInterfaces
  fullName: System.Composition.Convention.PartConventionBuilder.ExportInterfaces
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties
  nameWithType: PartConventionBuilder.ExportProperties
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ExportProperties``1*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ExportProperties<T>
  nameWithType: PartConventionBuilder.ExportProperties<T>
  fullName: System.Composition.Convention.PartConventionBuilder.ExportProperties<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties
  nameWithType: PartConventionBuilder.ImportProperties
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.ImportProperties``1*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: ImportProperties<T>
  nameWithType: PartConventionBuilder.ImportProperties<T>
  fullName: System.Composition.Convention.PartConventionBuilder.ImportProperties<T>
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: NotifyImportsSatisfied
  nameWithType: PartConventionBuilder.NotifyImportsSatisfied
  fullName: System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.SelectConstructor*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: SelectConstructor
  nameWithType: PartConventionBuilder.SelectConstructor
  fullName: System.Composition.Convention.PartConventionBuilder.SelectConstructor
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
- uid: System.Composition.Convention.PartConventionBuilder.Shared*
  parent: System.Composition.Convention.PartConventionBuilder
  isExternal: false
  name: Shared
  nameWithType: PartConventionBuilder.Shared
  fullName: System.Composition.Convention.PartConventionBuilder.Shared
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Convention/PartConventionBuilder.xml
