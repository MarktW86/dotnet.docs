### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1
  commentId: T:System.Reflection.Metadata.IConstructedTypeProvider`1
  id: IConstructedTypeProvider`1
  children:
  - System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType(`0,System.Reflection.Metadata.ArrayShape)
  - System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType(`0)
  - System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})
  - System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType(`0)
  langs:
  - csharp
  name: IConstructedTypeProvider<TType>
  nameWithType: IConstructedTypeProvider<TType>
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>
  type: Interface
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public interface IConstructedTypeProvider<TType> : System.Reflection.Metadata.ISZArrayTypeProvider<TType>'
    typeParameters:
    - id: TType
      description: To be added.
  derivedClasses:
  - System.Reflection.Metadata.ISignatureTypeProvider`1
  implements:
  - System.Reflection.Metadata.ISZArrayTypeProvider<TType>
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType(`0,System.Reflection.Metadata.ArrayShape)
  commentId: M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType(`0,System.Reflection.Metadata.ArrayShape)
  id: GetArrayType(`0,System.Reflection.Metadata.ArrayShape)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  langs:
  - csharp
  name: GetArrayType(TType, ArrayShape)
  nameWithType: IConstructedTypeProvider<TType>.GetArrayType(TType, ArrayShape)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetArrayType(TType, ArrayShape)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetArrayType (TType elementType, System.Reflection.Metadata.ArrayShape shape);
    parameters:
    - id: elementType
      type: TType
      description: To be added.
    - id: shape
      type: System.Reflection.Metadata.ArrayShape
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType(`0)
  commentId: M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType(`0)
  id: GetByReferenceType(`0)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  langs:
  - csharp
  name: GetByReferenceType(TType)
  nameWithType: IConstructedTypeProvider<TType>.GetByReferenceType(TType)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetByReferenceType(TType)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetByReferenceType (TType elementType);
    parameters:
    - id: elementType
      type: TType
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})
  commentId: M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})
  id: GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  langs:
  - csharp
  name: GetGenericInstance(TType, ImmutableArray<TType>)
  nameWithType: IConstructedTypeProvider<TType>.GetGenericInstance(TType, ImmutableArray<TType>)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetGenericInstance(TType, ImmutableArray<TType>)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetGenericInstance (TType genericType, System.Collections.Immutable.ImmutableArray<TType> typeArguments);
    parameters:
    - id: genericType
      type: TType
      description: To be added.
    - id: typeArguments
      type: System.Collections.Immutable.ImmutableArray{TType}
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType(`0)
  commentId: M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType(`0)
  id: GetPointerType(`0)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  langs:
  - csharp
  name: GetPointerType(TType)
  nameWithType: IConstructedTypeProvider<TType>.GetPointerType(TType)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetPointerType(TType)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetPointerType (TType elementType);
    parameters:
    - id: elementType
      type: TType
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
references:
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType(`0,System.Reflection.Metadata.ArrayShape)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetArrayType(TType, ArrayShape)
  nameWithType: IConstructedTypeProvider<TType>.GetArrayType(TType, ArrayShape)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetArrayType(TType, ArrayShape)
- uid: TType
  isExternal: true
  name: TType
  nameWithType: TType
  fullName: TType
- uid: System.Reflection.Metadata.ArrayShape
  parent: System.Reflection.Metadata
  isExternal: false
  name: ArrayShape
  nameWithType: ArrayShape
  fullName: System.Reflection.Metadata.ArrayShape
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType(`0)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetByReferenceType(TType)
  nameWithType: IConstructedTypeProvider<TType>.GetByReferenceType(TType)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetByReferenceType(TType)
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetGenericInstance(TType, ImmutableArray<TType>)
  nameWithType: IConstructedTypeProvider<TType>.GetGenericInstance(TType, ImmutableArray<TType>)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetGenericInstance(TType, ImmutableArray<TType>)
- uid: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
- uid: System.Collections.Immutable.ImmutableArray{TType}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<TType>
  nameWithType: ImmutableArray<TType>
  fullName: System.Collections.Immutable.ImmutableArray<TType>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: TType
    name: TType
    nameWithType: TType
    fullName: TType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType(`0)
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetPointerType(TType)
  nameWithType: IConstructedTypeProvider<TType>.GetPointerType(TType)
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetPointerType(TType)
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType*
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetArrayType
  nameWithType: IConstructedTypeProvider<TType>.GetArrayType
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetArrayType
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType*
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetByReferenceType
  nameWithType: IConstructedTypeProvider<TType>.GetByReferenceType
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetByReferenceType
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance*
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetGenericInstance
  nameWithType: IConstructedTypeProvider<TType>.GetGenericInstance
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetGenericInstance
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
- uid: System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType*
  parent: System.Reflection.Metadata.IConstructedTypeProvider`1
  isExternal: false
  name: GetPointerType
  nameWithType: IConstructedTypeProvider<TType>.GetPointerType
  fullName: System.Reflection.Metadata.IConstructedTypeProvider<TType>.GetPointerType
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/IConstructedTypeProvider`1.xml
