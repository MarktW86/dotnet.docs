### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.CollectionExtensions
  commentId: T:System.Collections.Generic.CollectionExtensions
  id: CollectionExtensions
  children:
  - System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)
  - System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)
  - System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  - System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  langs:
  - csharp
  name: CollectionExtensions
  nameWithType: CollectionExtensions
  fullName: System.Collections.Generic.CollectionExtensions
  type: Class
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public static class CollectionExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)
  commentId: M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)
  id: GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)
  parent: System.Collections.Generic.CollectionExtensions
  langs:
  - csharp
  name: GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
  nameWithType: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
  fullName: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
  type: Method
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public static TValue GetValueOrDefault<TKey,TValue> (this System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> dictionary, TKey key);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IReadOnlyDictionary`2
      description: To be added.
    - id: key
      type: TKey
      description: To be added.
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
    return:
      type: TValue
      description: To be added.
  overload: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)
  commentId: M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)
  id: GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)
  parent: System.Collections.Generic.CollectionExtensions
  langs:
  - csharp
  name: GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
  type: Method
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public static TValue GetValueOrDefault<TKey,TValue> (this System.Collections.Generic.IReadOnlyDictionary<TKey,TValue> dictionary, TKey key, TValue defaultValue);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IReadOnlyDictionary`2
      description: To be added.
    - id: key
      type: TKey
      description: To be added.
    - id: defaultValue
      type: TValue
      description: To be added.
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
    return:
      type: TValue
      description: To be added.
  overload: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  commentId: M:System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  id: Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  parent: System.Collections.Generic.CollectionExtensions
  langs:
  - csharp
  name: Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  type: Method
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public static bool Remove<TKey,TValue> (this System.Collections.Generic.IDictionary<TKey,TValue> dictionary, TKey key, out TValue value);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.CollectionExtensions.Remove``2*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  commentId: M:System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  id: TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  parent: System.Collections.Generic.CollectionExtensions
  langs:
  - csharp
  name: TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  type: Method
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public static bool TryAdd<TKey,TValue> (this System.Collections.Generic.IDictionary<TKey,TValue> dictionary, TKey key, TValue value);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.CollectionExtensions.TryAdd``2*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
  nameWithType: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
  fullName: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey)
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IReadOnlyDictionary<TKey,TValue>
  nameWithType: IReadOnlyDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.GetValueOrDefault<TKey,TValue>(IReadOnlyDictionary<TKey,TValue>, TKey, TValue)
- uid: System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.Remove<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
  fullName: CollectionExtensions.TryAdd<TKey,TValue>(IDictionary<TKey,TValue>, TKey, TValue)
- uid: System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2*
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: GetValueOrDefault<TKey,TValue>
  nameWithType: CollectionExtensions.GetValueOrDefault<TKey,TValue>
  fullName: CollectionExtensions.GetValueOrDefault<TKey,TValue>
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.Remove``2*
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: Remove<TKey,TValue>
  nameWithType: CollectionExtensions.Remove<TKey,TValue>
  fullName: CollectionExtensions.Remove<TKey,TValue>
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
- uid: System.Collections.Generic.CollectionExtensions.TryAdd``2*
  parent: System.Collections.Generic.CollectionExtensions
  isExternal: false
  name: TryAdd<TKey,TValue>
  nameWithType: CollectionExtensions.TryAdd<TKey,TValue>
  fullName: CollectionExtensions.TryAdd<TKey,TValue>
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Generic/CollectionExtensions.xml
