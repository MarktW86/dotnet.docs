### YamlMime:ManagedReference
items:
- uid: System.Composition.Hosting.Core.CompositionContract
  commentId: T:System.Composition.Hosting.Core.CompositionContract
  id: CompositionContract
  children:
  - System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)
  - System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)
  - System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)
  - System.Composition.Hosting.Core.CompositionContract.ContractName
  - System.Composition.Hosting.Core.CompositionContract.ContractType
  - System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)
  - System.Composition.Hosting.Core.CompositionContract.GetHashCode
  - System.Composition.Hosting.Core.CompositionContract.MetadataConstraints
  - System.Composition.Hosting.Core.CompositionContract.ToString
  - System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)
  langs:
  - csharp
  name: CompositionContract
  nameWithType: CompositionContract
  fullName: System.Composition.Hosting.Core.CompositionContract
  type: Class
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public sealed class CompositionContract
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)
  commentId: M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: CompositionContract(Type)
  nameWithType: CompositionContract.CompositionContract(Type)
  fullName: CompositionContract.CompositionContract(Type)
  type: Constructor
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public CompositionContract (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)
  commentId: M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: CompositionContract(Type, String)
  nameWithType: CompositionContract.CompositionContract(Type, String)
  fullName: CompositionContract.CompositionContract(Type, String)
  type: Constructor
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public CompositionContract (Type contractType, string contractName);
    parameters:
    - id: contractType
      type: System.Type
      description: To be added.
    - id: contractName
      type: System.String
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: CompositionContract(Type, String, IDictionary<String,Object>)
  nameWithType: CompositionContract.CompositionContract(Type, String, IDictionary<String,Object>)
  fullName: CompositionContract.CompositionContract(Type, String, IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public CompositionContract (Type contractType, string contractName, System.Collections.Generic.IDictionary<string,object> metadataConstraints);
    parameters:
    - id: contractType
      type: System.Type
      description: To be added.
    - id: contractName
      type: System.String
      description: To be added.
    - id: metadataConstraints
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.#ctor*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)
  commentId: M:System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)
  id: ChangeType(System.Type)
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: ChangeType(Type)
  nameWithType: CompositionContract.ChangeType(Type)
  fullName: CompositionContract.ChangeType(Type)
  type: Method
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public System.Composition.Hosting.Core.CompositionContract ChangeType (Type newContractType);
    parameters:
    - id: newContractType
      type: System.Type
      description: To be added.
    return:
      type: System.Composition.Hosting.Core.CompositionContract
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.ChangeType*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ContractName
  commentId: P:System.Composition.Hosting.Core.CompositionContract.ContractName
  id: ContractName
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: ContractName
  nameWithType: CompositionContract.ContractName
  fullName: CompositionContract.ContractName
  type: Property
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.ContractName*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ContractType
  commentId: P:System.Composition.Hosting.Core.CompositionContract.ContractType
  id: ContractType
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: ContractType
  nameWithType: CompositionContract.ContractType
  fullName: CompositionContract.ContractType
  type: Property
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.ContractType*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)
  commentId: M:System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CompositionContract.Equals(Object)
  fullName: CompositionContract.Equals(Object)
  type: Method
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.Equals*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.GetHashCode
  commentId: M:System.Composition.Hosting.Core.CompositionContract.GetHashCode
  id: GetHashCode
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CompositionContract.GetHashCode()
  fullName: CompositionContract.GetHashCode()
  type: Method
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.GetHashCode*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.MetadataConstraints
  commentId: P:System.Composition.Hosting.Core.CompositionContract.MetadataConstraints
  id: MetadataConstraints
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: MetadataConstraints
  nameWithType: CompositionContract.MetadataConstraints
  fullName: CompositionContract.MetadataConstraints
  type: Property
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>> MetadataConstraints { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.MetadataConstraints*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ToString
  commentId: M:System.Composition.Hosting.Core.CompositionContract.ToString
  id: ToString
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: ToString()
  nameWithType: CompositionContract.ToString()
  fullName: CompositionContract.ToString()
  type: Method
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.ToString*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)
  commentId: M:System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)
  id: TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)
  parent: System.Composition.Hosting.Core.CompositionContract
  langs:
  - csharp
  name: TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
  nameWithType: CompositionContract.TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
  fullName: CompositionContract.TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
  type: Method
  assemblies:
  - System.Composition.Runtime
  namespace: System.Composition.Hosting.Core
  syntax:
    content: public bool TryUnwrapMetadataConstraint<T> (string constraintName, out T constraintValue, out System.Composition.Hosting.Core.CompositionContract remainingContract);
    parameters:
    - id: constraintName
      type: System.String
      description: To be added.
    - id: constraintValue
      type: T
      description: To be added.
    - id: remainingContract
      type: System.Composition.Hosting.Core.CompositionContract
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1*
  exceptions: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: CompositionContract(Type)
  nameWithType: CompositionContract.CompositionContract(Type)
  fullName: CompositionContract.CompositionContract(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: CompositionContract(Type, String)
  nameWithType: CompositionContract.CompositionContract(Type, String)
  fullName: CompositionContract.CompositionContract(Type, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: CompositionContract(Type, String, IDictionary<String,Object>)
  nameWithType: CompositionContract.CompositionContract(Type, String, IDictionary<String,Object>)
  fullName: CompositionContract.CompositionContract(Type, String, IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ChangeType(Type)
  nameWithType: CompositionContract.ChangeType(Type)
  fullName: CompositionContract.ChangeType(Type)
- uid: System.Composition.Hosting.Core.CompositionContract
  parent: System.Composition.Hosting.Core
  isExternal: false
  name: CompositionContract
  nameWithType: CompositionContract
  fullName: System.Composition.Hosting.Core.CompositionContract
- uid: System.Composition.Hosting.Core.CompositionContract.ContractName
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ContractName
  nameWithType: CompositionContract.ContractName
  fullName: CompositionContract.ContractName
- uid: System.Composition.Hosting.Core.CompositionContract.ContractType
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ContractType
  nameWithType: CompositionContract.ContractType
  fullName: CompositionContract.ContractType
- uid: System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: Equals(Object)
  nameWithType: CompositionContract.Equals(Object)
  fullName: CompositionContract.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Composition.Hosting.Core.CompositionContract.GetHashCode
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: GetHashCode()
  nameWithType: CompositionContract.GetHashCode()
  fullName: CompositionContract.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Composition.Hosting.Core.CompositionContract.MetadataConstraints
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: MetadataConstraints
  nameWithType: CompositionContract.MetadataConstraints
  fullName: CompositionContract.MetadataConstraints
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<String,Object>>
  nameWithType: IEnumerable<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Composition.Hosting.Core.CompositionContract.ToString
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ToString()
  nameWithType: CompositionContract.ToString()
  fullName: CompositionContract.ToString()
- uid: System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
  nameWithType: CompositionContract.TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
  fullName: CompositionContract.TryUnwrapMetadataConstraint<T>(String, T, CompositionContract)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Composition.Hosting.Core.CompositionContract.#ctor*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: CompositionContract
  nameWithType: CompositionContract.CompositionContract
  fullName: CompositionContract.CompositionContract
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ChangeType*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ChangeType
  nameWithType: CompositionContract.ChangeType
  fullName: CompositionContract.ChangeType
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ContractName*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ContractName
  nameWithType: CompositionContract.ContractName
  fullName: CompositionContract.ContractName
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ContractType*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ContractType
  nameWithType: CompositionContract.ContractType
  fullName: CompositionContract.ContractType
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.Equals*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: Equals
  nameWithType: CompositionContract.Equals
  fullName: CompositionContract.Equals
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.GetHashCode*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: GetHashCode
  nameWithType: CompositionContract.GetHashCode
  fullName: CompositionContract.GetHashCode
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.MetadataConstraints*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: MetadataConstraints
  nameWithType: CompositionContract.MetadataConstraints
  fullName: CompositionContract.MetadataConstraints
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.ToString*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: ToString
  nameWithType: CompositionContract.ToString
  fullName: CompositionContract.ToString
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
- uid: System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1*
  parent: System.Composition.Hosting.Core.CompositionContract
  isExternal: false
  name: TryUnwrapMetadataConstraint<T>
  nameWithType: CompositionContract.TryUnwrapMetadataConstraint<T>
  fullName: CompositionContract.TryUnwrapMetadataConstraint<T>
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Composition.Hosting.Core/CompositionContract.xml
