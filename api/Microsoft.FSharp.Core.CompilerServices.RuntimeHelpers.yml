### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  commentId: T:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  id: RuntimeHelpers
  children:
  - Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})
  - Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  - Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  - Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  name: RuntimeHelpers
  nameWithType: RuntimeHelpers
  fullName: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      [Microsoft.FSharp.Core.RequireQualifiedAccess]

      public static class RuntimeHelpers
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.RequireQualifiedAccessAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})
  commentId: M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})
  id: CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  langs:
  - csharp
  name: CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
  nameWithType: RuntimeHelpers.CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
  fullName: RuntimeHelpers.CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static Microsoft.FSharp.Control.IEvent<TDelegate,TArgs> CreateEvent<TDelegate,TArgs> (Microsoft.FSharp.Core.FSharpFunc<TDelegate,Microsoft.FSharp.Core.Unit> addHandler, Microsoft.FSharp.Core.FSharpFunc<TDelegate,Microsoft.FSharp.Core.Unit> removeHandler, Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.FSharpFunc<object,Microsoft.FSharp.Core.FSharpFunc<TArgs,Microsoft.FSharp.Core.Unit>>,TDelegate> createHandler) where TDelegate : Delegate;
    parameters:
    - id: addHandler
      type: Microsoft.FSharp.Core.FSharpFunc{TDelegate,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: removeHandler
      type: Microsoft.FSharp.Core.FSharpFunc{TDelegate,Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: createHandler
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{TArgs,Microsoft.FSharp.Core.Unit}},TDelegate}
      description: To be added.
    typeParameters:
    - id: TDelegate
      description: To be added.
    - id: TArgs
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.IEvent`2
      description: To be added.
  overload: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  commentId: M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  id: EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  langs:
  - csharp
  name: EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
  nameWithType: RuntimeHelpers.EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
  fullName: RuntimeHelpers.EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<TResult> EnumerateFromFunctions<T,TResult> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,T> create, Microsoft.FSharp.Core.FSharpFunc<T,bool> moveNext, Microsoft.FSharp.Core.FSharpFunc<T,TResult> current);
    parameters:
    - id: create
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,T}
      description: To be added.
    - id: moveNext
      type: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
      description: To be added.
    - id: current
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  langs:
  - csharp
  name: EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
  nameWithType: RuntimeHelpers.EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
  fullName: RuntimeHelpers.EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<T> EnumerateThenFinally<T> (System.Collections.Generic.IEnumerable<T> source, Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> compensation);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    - id: compensation
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  commentId: M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  id: EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  langs:
  - csharp
  name: EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
  nameWithType: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
  fullName: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<TResult> EnumerateUsing<T,TCollection,TResult> (T resource, Microsoft.FSharp.Core.FSharpFunc<T,TCollection> source) where T : IDisposable where TCollection : System.Collections.Generic.IEnumerable<TResult>;
    parameters:
    - id: resource
      type: T
      description: To be added.
    - id: source
      type: Microsoft.FSharp.Core.FSharpFunc{T,TCollection}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TCollection
      description: To be added.
    - id: TResult
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})
  id: EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  langs:
  - csharp
  name: EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
  nameWithType: RuntimeHelpers.EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
  fullName: RuntimeHelpers.EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core.CompilerServices
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      public static System.Collections.Generic.IEnumerable<T> EnumerateWhile<T> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,bool> guard, System.Collections.Generic.IEnumerable<T> source);
    parameters:
    - id: guard
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean}
      description: To be added.
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
  nameWithType: RuntimeHelpers.CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
  fullName: RuntimeHelpers.CreateEvent<TDelegate,TArgs>(FSharpFunc<TDelegate,Unit>, FSharpFunc<TDelegate,Unit>, FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>)
- uid: Microsoft.FSharp.Control.IEvent`2
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: IEvent<TDelegate,TArgs>
  nameWithType: IEvent<TDelegate,TArgs>
  fullName: Microsoft.FSharp.Control.IEvent<TDelegate,TArgs>
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: TDelegate
  name: TDelegate
  nameWithType: TDelegate
  fullName: TDelegate
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.FSharpFunc{TDelegate,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<TDelegate,Unit>
  nameWithType: FSharpFunc<TDelegate,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<TDelegate,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TDelegate
    name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TArgs
  name: TArgs
  nameWithType: TArgs
  fullName: TArgs
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{TArgs,Microsoft.FSharp.Core.Unit}},TDelegate}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>
  nameWithType: FSharpFunc<FSharpFunc<Object,FSharpFunc<TArgs,Unit>>,TDelegate>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.FSharpFunc<System.Object,Microsoft.FSharp.Core.FSharpFunc<TArgs,Microsoft.FSharp.Core.Unit>>,TDelegate>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TArgs
    name: TArgs
    nameWithType: TArgs
    fullName: TArgs
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TDelegate
    name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
  nameWithType: RuntimeHelpers.EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
  fullName: RuntimeHelpers.EnumerateFromFunctions<T,TResult>(FSharpFunc<Unit,T>, FSharpFunc<T,Boolean>, FSharpFunc<T,TResult>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Collections.Generic.IEnumerable{TResult}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TResult>
  nameWithType: IEnumerable<TResult>
  fullName: System.Collections.Generic.IEnumerable<TResult>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,T}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,T>
  nameWithType: FSharpFunc<Unit,T>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,T>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpFunc{T,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,Boolean>
  nameWithType: FSharpFunc<T,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
  nameWithType: RuntimeHelpers.EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
  fullName: RuntimeHelpers.EnumerateThenFinally<T>(IEnumerable<T>, FSharpFunc<Unit,Unit>)
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,Unit>
  nameWithType: FSharpFunc<Unit,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
  nameWithType: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
  fullName: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>(T, FSharpFunc<T,TCollection>)
- uid: TCollection
  name: TCollection
  nameWithType: TCollection
  fullName: TCollection
- uid: Microsoft.FSharp.Core.FSharpFunc{T,TCollection}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,TCollection>
  nameWithType: FSharpFunc<T,TCollection>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TCollection>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
  nameWithType: RuntimeHelpers.EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
  fullName: RuntimeHelpers.EnumerateWhile<T>(FSharpFunc<Unit,Boolean>, IEnumerable<T>)
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,Boolean>
  nameWithType: FSharpFunc<Unit,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2*
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: CreateEvent<TDelegate,TArgs>
  nameWithType: RuntimeHelpers.CreateEvent<TDelegate,TArgs>
  fullName: RuntimeHelpers.CreateEvent<TDelegate,TArgs>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2*
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateFromFunctions<T,TResult>
  nameWithType: RuntimeHelpers.EnumerateFromFunctions<T,TResult>
  fullName: RuntimeHelpers.EnumerateFromFunctions<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1*
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateThenFinally<T>
  nameWithType: RuntimeHelpers.EnumerateThenFinally<T>
  fullName: RuntimeHelpers.EnumerateThenFinally<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3*
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateUsing<T,TCollection,TResult>
  nameWithType: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>
  fullName: RuntimeHelpers.EnumerateUsing<T,TCollection,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
- uid: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1*
  parent: Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers
  isExternal: false
  name: EnumerateWhile<T>
  nameWithType: RuntimeHelpers.EnumerateWhile<T>
  fullName: RuntimeHelpers.EnumerateWhile<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core.CompilerServices/RuntimeHelpers.xml
