### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.HandleComparer
  commentId: T:System.Reflection.Metadata.HandleComparer
  id: HandleComparer
  children:
  - System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  - System.Reflection.Metadata.HandleComparer.Default
  - System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  - System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  langs:
  - csharp
  name: HandleComparer
  nameWithType: HandleComparer
  fullName: System.Reflection.Metadata.HandleComparer
  type: Class
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public sealed class HandleComparer : System.Collections.Generic.IComparer<System.Reflection.Metadata.EntityHandle>, System.Collections.Generic.IComparer<System.Reflection.Metadata.Handle>, System.Collections.Generic.IEqualityComparer<System.Reflection.Metadata.EntityHandle>, System.Collections.Generic.IEqualityComparer<System.Reflection.Metadata.Handle>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer<System.Reflection.Metadata.EntityHandle>
  - System.Collections.Generic.IComparer<System.Reflection.Metadata.Handle>
  - System.Collections.Generic.IEqualityComparer<System.Reflection.Metadata.EntityHandle>
  - System.Collections.Generic.IEqualityComparer<System.Reflection.Metadata.Handle>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: Compare(EntityHandle, EntityHandle)
  nameWithType: HandleComparer.Compare(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(EntityHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int Compare (System.Reflection.Metadata.EntityHandle x, System.Reflection.Metadata.EntityHandle y);
    parameters:
    - id: x
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: y
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.Compare*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  commentId: M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  id: Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: Compare(Handle, Handle)
  nameWithType: HandleComparer.Compare(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(Handle, Handle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int Compare (System.Reflection.Metadata.Handle x, System.Reflection.Metadata.Handle y);
    parameters:
    - id: x
      type: System.Reflection.Metadata.Handle
      description: To be added.
    - id: y
      type: System.Reflection.Metadata.Handle
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.Compare*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Default
  commentId: P:System.Reflection.Metadata.HandleComparer.Default
  id: Default
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: Default
  nameWithType: HandleComparer.Default
  fullName: System.Reflection.Metadata.HandleComparer.Default
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static System.Reflection.Metadata.HandleComparer Default { get; }
    return:
      type: System.Reflection.Metadata.HandleComparer
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.Default*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: Equals(EntityHandle, EntityHandle)
  nameWithType: HandleComparer.Equals(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(EntityHandle, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals (System.Reflection.Metadata.EntityHandle x, System.Reflection.Metadata.EntityHandle y);
    parameters:
    - id: x
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: y
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  commentId: M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  id: Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: Equals(Handle, Handle)
  nameWithType: HandleComparer.Equals(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(Handle, Handle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals (System.Reflection.Metadata.Handle x, System.Reflection.Metadata.Handle y);
    parameters:
    - id: x
      type: System.Reflection.Metadata.Handle
      description: To be added.
    - id: y
      type: System.Reflection.Metadata.Handle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  id: GetHashCode(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: GetHashCode(EntityHandle)
  nameWithType: HandleComparer.GetHashCode(EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int GetHashCode (System.Reflection.Metadata.EntityHandle obj);
    parameters:
    - id: obj
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  commentId: M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  id: GetHashCode(System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  langs:
  - csharp
  name: GetHashCode(Handle)
  nameWithType: HandleComparer.GetHashCode(Handle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(Handle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int GetHashCode (System.Reflection.Metadata.Handle obj);
    parameters:
    - id: obj
      type: System.Reflection.Metadata.Handle
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.HandleComparer.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Compare(EntityHandle, EntityHandle)
  nameWithType: HandleComparer.Compare(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(EntityHandle, EntityHandle)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Compare(Handle, Handle)
  nameWithType: HandleComparer.Compare(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(Handle, Handle)
- uid: System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata
  isExternal: false
  name: Handle
  nameWithType: Handle
  fullName: System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.HandleComparer.Default
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Default
  nameWithType: HandleComparer.Default
  fullName: System.Reflection.Metadata.HandleComparer.Default
- uid: System.Reflection.Metadata.HandleComparer
  parent: System.Reflection.Metadata
  isExternal: false
  name: HandleComparer
  nameWithType: HandleComparer
  fullName: System.Reflection.Metadata.HandleComparer
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Equals(EntityHandle, EntityHandle)
  nameWithType: HandleComparer.Equals(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(EntityHandle, EntityHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Equals(Handle, Handle)
  nameWithType: HandleComparer.Equals(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(Handle, Handle)
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: GetHashCode(EntityHandle)
  nameWithType: HandleComparer.GetHashCode(EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(EntityHandle)
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: GetHashCode(Handle)
  nameWithType: HandleComparer.GetHashCode(Handle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(Handle)
- uid: System.Reflection.Metadata.HandleComparer.Compare*
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Compare
  nameWithType: HandleComparer.Compare
  fullName: System.Reflection.Metadata.HandleComparer.Compare
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Default*
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Default
  nameWithType: HandleComparer.Default
  fullName: System.Reflection.Metadata.HandleComparer.Default
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.Equals*
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: Equals
  nameWithType: HandleComparer.Equals
  fullName: System.Reflection.Metadata.HandleComparer.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode*
  parent: System.Reflection.Metadata.HandleComparer
  isExternal: false
  name: GetHashCode
  nameWithType: HandleComparer.GetHashCode
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/HandleComparer.xml
