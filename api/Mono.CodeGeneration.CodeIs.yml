### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeIs
  commentId: T:Mono.CodeGeneration.CodeIs
  id: CodeIs
  children:
  - Mono.CodeGeneration.CodeIs.#ctor(System.Type,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeIs.Generate(System.Reflection.Emit.ILGenerator)
  - Mono.CodeGeneration.CodeIs.GenerateForBranch(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label,System.Boolean)
  - Mono.CodeGeneration.CodeIs.GetResultType
  - Mono.CodeGeneration.CodeIs.PrintCode(Mono.CodeGeneration.CodeWriter)
  langs:
  - csharp
  name: CodeIs
  nameWithType: CodeIs
  fullName: Mono.CodeGeneration.CodeIs
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: 'public class CodeIs : Mono.CodeGeneration.CodeConditionExpression'
  inheritance:
  - System.Object
  - Mono.CodeGeneration.CodeItem
  - Mono.CodeGeneration.CodeExpression
  - Mono.CodeGeneration.CodeConditionExpression
  implements: []
  inheritedMembers:
  - Mono.CodeGeneration.CodeExpression.Add(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.And(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.AreEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.AreNotEqual(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.ArrayLength
  - Mono.CodeGeneration.CodeExpression.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeExpression.Call(System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeExpression.CallToString
  - Mono.CodeGeneration.CodeExpression.CastTo(System.Type)
  - Mono.CodeGeneration.CodeExpression.Divide(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.GenerateAsStatement(System.Reflection.Emit.ILGenerator)
  - Mono.CodeGeneration.CodeExpression.Is(System.Type)
  - Mono.CodeGeneration.CodeExpression.IsGreaterEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsGreaterThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsNull
  - Mono.CodeGeneration.CodeExpression.IsNumber
  - Mono.CodeGeneration.CodeExpression.IsSmallerEqualThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.IsSmallerThan(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Item(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Item(System.Reflection.FieldInfo)
  - Mono.CodeGeneration.CodeExpression.Item(System.Reflection.PropertyInfo)
  - Mono.CodeGeneration.CodeExpression.Item(System.String)
  - Mono.CodeGeneration.CodeExpression.MemGet(System.Reflection.MemberInfo)
  - Mono.CodeGeneration.CodeExpression.MemGet(System.String)
  - Mono.CodeGeneration.CodeExpression.Multiply(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.Not(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeExpression.NullValue(System.Type)
  - Mono.CodeGeneration.CodeExpression.Subtract(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.#ctor(System.Type,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeIs.#ctor(System.Type,Mono.CodeGeneration.CodeExpression)
  id: '#ctor(System.Type,Mono.CodeGeneration.CodeExpression)'
  parent: Mono.CodeGeneration.CodeIs
  langs:
  - csharp
  name: CodeIs(Type, CodeExpression)
  nameWithType: CodeIs.CodeIs(Type, CodeExpression)
  fullName: CodeIs.CodeIs(Type, CodeExpression)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeIs (Type type, Mono.CodeGeneration.CodeExpression exp);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: exp
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeIs.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.Generate(System.Reflection.Emit.ILGenerator)
  commentId: M:Mono.CodeGeneration.CodeIs.Generate(System.Reflection.Emit.ILGenerator)
  id: Generate(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeIs
  langs:
  - csharp
  name: Generate(ILGenerator)
  nameWithType: CodeIs.Generate(ILGenerator)
  fullName: CodeIs.Generate(ILGenerator)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override void Generate (System.Reflection.Emit.ILGenerator gen);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
  overload: Mono.CodeGeneration.CodeIs.Generate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.GenerateForBranch(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label,System.Boolean)
  commentId: M:Mono.CodeGeneration.CodeIs.GenerateForBranch(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label,System.Boolean)
  id: GenerateForBranch(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label,System.Boolean)
  parent: Mono.CodeGeneration.CodeIs
  langs:
  - csharp
  name: GenerateForBranch(ILGenerator, Label, Boolean)
  nameWithType: CodeIs.GenerateForBranch(ILGenerator, Label, Boolean)
  fullName: CodeIs.GenerateForBranch(ILGenerator, Label, Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override void GenerateForBranch (System.Reflection.Emit.ILGenerator gen, System.Reflection.Emit.Label label, bool branchCase);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
    - id: label
      type: System.Reflection.Emit.Label
      description: To be added.
    - id: branchCase
      type: System.Boolean
      description: To be added.
  overload: Mono.CodeGeneration.CodeIs.GenerateForBranch*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.GetResultType
  commentId: M:Mono.CodeGeneration.CodeIs.GetResultType
  id: GetResultType
  parent: Mono.CodeGeneration.CodeIs
  langs:
  - csharp
  name: GetResultType()
  nameWithType: CodeIs.GetResultType()
  fullName: CodeIs.GetResultType()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override Type GetResultType ();
    parameters: []
    return:
      type: System.Type
      description: To be added.
  overload: Mono.CodeGeneration.CodeIs.GetResultType*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.PrintCode(Mono.CodeGeneration.CodeWriter)
  commentId: M:Mono.CodeGeneration.CodeIs.PrintCode(Mono.CodeGeneration.CodeWriter)
  id: PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeIs
  langs:
  - csharp
  name: PrintCode(CodeWriter)
  nameWithType: CodeIs.PrintCode(CodeWriter)
  fullName: CodeIs.PrintCode(CodeWriter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public override void PrintCode (Mono.CodeGeneration.CodeWriter cp);
    parameters:
    - id: cp
      type: Mono.CodeGeneration.CodeWriter
      description: To be added.
  overload: Mono.CodeGeneration.CodeIs.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
references:
- uid: Mono.CodeGeneration.CodeConditionExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeConditionExpression
  nameWithType: CodeConditionExpression
  fullName: Mono.CodeGeneration.CodeConditionExpression
- uid: Mono.CodeGeneration.CodeIs.#ctor(System.Type,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: CodeIs(Type, CodeExpression)
  nameWithType: CodeIs.CodeIs(Type, CodeExpression)
  fullName: CodeIs.CodeIs(Type, CodeExpression)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.CodeIs.Generate(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: Generate(ILGenerator)
  nameWithType: CodeIs.Generate(ILGenerator)
  fullName: CodeIs.Generate(ILGenerator)
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: Mono.CodeGeneration.CodeIs.GenerateForBranch(System.Reflection.Emit.ILGenerator,System.Reflection.Emit.Label,System.Boolean)
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: GenerateForBranch(ILGenerator, Label, Boolean)
  nameWithType: CodeIs.GenerateForBranch(ILGenerator, Label, Boolean)
  fullName: CodeIs.GenerateForBranch(ILGenerator, Label, Boolean)
- uid: System.Reflection.Emit.Label
  parent: System.Reflection.Emit
  isExternal: false
  name: Label
  nameWithType: Label
  fullName: System.Reflection.Emit.Label
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mono.CodeGeneration.CodeIs.GetResultType
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: GetResultType()
  nameWithType: CodeIs.GetResultType()
  fullName: CodeIs.GetResultType()
- uid: Mono.CodeGeneration.CodeIs.PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: PrintCode(CodeWriter)
  nameWithType: CodeIs.PrintCode(CodeWriter)
  fullName: CodeIs.PrintCode(CodeWriter)
- uid: Mono.CodeGeneration.CodeWriter
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Mono.CodeGeneration.CodeWriter
- uid: Mono.CodeGeneration.CodeIs.#ctor*
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: CodeIs
  nameWithType: CodeIs.CodeIs
  fullName: CodeIs.CodeIs
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.Generate*
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: Generate
  nameWithType: CodeIs.Generate
  fullName: CodeIs.Generate
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.GenerateForBranch*
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: GenerateForBranch
  nameWithType: CodeIs.GenerateForBranch
  fullName: CodeIs.GenerateForBranch
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.GetResultType*
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: GetResultType
  nameWithType: CodeIs.GetResultType
  fullName: CodeIs.GetResultType
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
- uid: Mono.CodeGeneration.CodeIs.PrintCode*
  parent: Mono.CodeGeneration.CodeIs
  isExternal: false
  name: PrintCode
  nameWithType: CodeIs.PrintCode
  fullName: CodeIs.PrintCode
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeIs.xml
