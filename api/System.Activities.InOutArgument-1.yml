### YamlMime:ManagedReference
items:
- uid: System.Activities.InOutArgument`1
  commentId: T:System.Activities.InOutArgument`1
  id: InOutArgument`1
  children:
  - System.Activities.InOutArgument`1.#ctor
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})
  - System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.InOutArgument`1.Expression
  - System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  - System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})
  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})
  - System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  langs:
  - csharp
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: A binding terminal that represents the flow of data into and out of an activity.
  remarks: "In this example, a custom `Square` activity has an <xref:System.Activities.InOutArgument%601> of type <xref:System.Int32> named `N1`. This argument is used to receive the value to be operated on and is also used to pass the result of the operation back out.  \n  \n```csharp  \nclass Square : CodeActivity  \n{  \n    public Square() : base() { }  \n  \n    public InOutArgument<int> N1  \n    {  \n        get;  \n  \n        set;  \n    }  \n  \n    protected override void Execute(CodeActivityContext context)  \n    {  \n        context.SetValue<int>(N1, N1.Get(context) * N1.Get(context));  \n    }  \n}  \n```  \n  \n In the following example, the `Square` activity is hosted in a workflow. A value is passed into the activity and the result is then displayed to the console window by a <xref:System.Activities.Statements.WriteLine> activity.  \n  \n```csharp  \nVariable<int> n1 = new Variable<int>() { Default = 25 };  \n  \nActivity activity1 = new Sequence()  \n{  \n    Variables =   \n    {  \n        n1  \n    },  \n    Activities =   \n    {  \n        new Square()  \n        {  \n            N1 = new InOutArgument<int>(n1)  \n        },  \n        new WriteLine()  \n        {  \n            Text = new InArgument<string>(ctx => \"Squared result: \" + n1.Get(ctx))  \n        }  \n    }  \n};  \n  \nWorkflowInvoker.Invoke(activity1);  \n```"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.InOutArgumentConverter))]

      [System.Windows.Markup.ContentProperty("Expression")]

      public sealed class InOutArgument<T> : System.Activities.InOutArgument
    typeParameters:
    - id: T
      description: The data type of the <xref href="System.Activities.InOutArgument`1"></xref>.
  inheritance:
  - System.Object
  - System.Activities.Argument
  - System.Activities.InOutArgument
  implements: []
  inheritedMembers:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  - System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  - type: System.Windows.Markup.ContentPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.#ctor
  commentId: M:System.Activities.InOutArgument`1.#ctor
  id: '#ctor'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: InOutArgument<T>()
  nameWithType: InOutArgument<T>.InOutArgument<T>()
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="System.Activities.InOutArgument`1"></xref> class using default values.
  syntax:
    content: public InOutArgument ();
    parameters: []
  overload: System.Activities.InOutArgument`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  id: '#ctor(System.Activities.Activity{System.Activities.Location{`0}})'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: InOutArgument<T>(Activity<Location<T>>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="System.Activities.InOutArgument`1"></xref> class using the specified <xref href="System.Activities.Activity`1"></xref>.
  syntax:
    content: public InOutArgument (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  id: '#ctor(System.Activities.Variable)'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: InOutArgument<T>(Variable)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Variable)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="System.Activities.InOutArgument`1"></xref> class using the specified <xref href="System.Activities.Variable"></xref>.
  syntax:
    content: public InOutArgument (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})
  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})
  id: '#ctor(System.Activities.Variable{`0})'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: InOutArgument<T>(Variable<T>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable<T>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Variable<T>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="System.Activities.InOutArgument`1"></xref> class using the specified <xref href="System.Activities.Variable`1"></xref>.
  syntax:
    content: public InOutArgument (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable`1
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  commentId: M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: InOutArgument<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="System.Activities.InOutArgument`1"></xref> class using the specified expression.
  syntax:
    content: public InOutArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.Expression
  commentId: P:System.Activities.InOutArgument`1.Expression
  id: Expression
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: Expression
  nameWithType: InOutArgument<T>.Expression
  fullName: System.Activities.InOutArgument<T>.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets an <xref href="System.Activities.Activity`1"></xref> that represents the value of this <xref href="System.Activities.InOutArgument`1"></xref>.
  syntax:
    content: public System.Activities.Activity<System.Activities.Location<T>> Expression { get; set; }
    return:
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.Expression*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  commentId: M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  id: FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: FromExpression(Activity<Location<T>>)
  nameWithType: InOutArgument<T>.FromExpression(Activity<Location<T>>)
  fullName: System.Activities.InOutArgument<T>.FromExpression(Activity<Location<T>>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes and returns a new <xref href="System.Activities.InOutArgument`1"></xref> constructed using the specified <xref href="System.Activities.Activity`1"></xref>.
  syntax:
    content: public static System.Activities.InOutArgument<T> FromExpression (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: The value of the argument.
    return:
      type: System.Activities.InOutArgument`1
      description: The new argument.
  overload: System.Activities.InOutArgument`1.FromExpression*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})
  commentId: M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})
  id: FromVariable(System.Activities.Variable{`0})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: FromVariable(Variable<T>)
  nameWithType: InOutArgument<T>.FromVariable(Variable<T>)
  fullName: System.Activities.InOutArgument<T>.FromVariable(Variable<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes and returns a new <xref href="System.Activities.InOutArgument`1"></xref> constructed by using the specified <xref href="System.Activities.Variable`1"></xref>.
  syntax:
    content: public static System.Activities.InOutArgument<T> FromVariable (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable`1
      description: The value of the argument.
    return:
      type: System.Activities.InOutArgument`1
      description: The new argument.
  overload: System.Activities.InOutArgument`1.FromVariable*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  commentId: M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: InOutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the value of the <xref href="System.Activities.InOutArgument`1"></xref> using the specified <xref href="System.Activities.ActivityContext"></xref>.
  syntax:
    content: public T Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The activity context that contains the value of the argument.
    return:
      type: T
      description: The value of the argument.
  overload: System.Activities.InOutArgument`1.Get*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  commentId: M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the location of the value for the <xref href="System.Activities.InOutArgument`1"></xref>.
  syntax:
    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The activity context that contains the location of the argument value.
    return:
      type: System.Activities.Location`1
      description: A reference to the location where the value of the argument is stored.
  overload: System.Activities.InOutArgument`1.GetLocation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})
  commentId: M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}
  id: op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: op_Implicit(Activity<Location<T>> to InOutArgument<T>)
  nameWithType: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: To be added.
    return:
      type: System.Activities.InOutArgument`1
      description: To be added.
  overload: System.Activities.InOutArgument`1.op_Implicit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})
  commentId: M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}
  id: op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: op_Implicit(Variable<T> to InOutArgument<T>)
  nameWithType: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable`1
      description: To be added.
    return:
      type: System.Activities.InOutArgument`1
      description: To be added.
  overload: System.Activities.InOutArgument`1.op_Implicit*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  commentId: M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  id: Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  name: Set(ActivityContext, T)
  nameWithType: InOutArgument<T>.Set(ActivityContext, T)
  fullName: System.Activities.InOutArgument<T>.Set(ActivityContext, T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Sets the value of the argument using the specified value.
  syntax:
    content: public void Set (System.Activities.ActivityContext context, T value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The current activity context.
    - id: value
      type: T
      description: The new value.
  overload: System.Activities.InOutArgument`1.Set*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Activities.InOutArgument
  parent: System.Activities
  isExternal: false
  name: InOutArgument
  nameWithType: InOutArgument
  fullName: System.Activities.InOutArgument
- uid: System.Activities.InOutArgument`1.#ctor
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>()
  nameWithType: InOutArgument<T>.InOutArgument<T>()
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>()
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>(Activity<Location<T>>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Activity<Location<T>>)
- uid: System.Activities.Activity`1
  name: Activity<TResult>
  nameWithType: Activity<TResult>
  fullName: System.Activities.Activity<TResult>
- uid: System.Activities.Location`1
  name: Location<T>
  nameWithType: Location<T>
  fullName: System.Activities.Location<T>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Activity{System.Activities.Location{T}}
  parent: System.Activities
  isExternal: false
  name: Activity<Location<T>>
  nameWithType: Activity<Location<T>>
  fullName: System.Activities.Activity<System.Activities.Location<T>>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: System.Activities.Activity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Location`1
    name: Location
    nameWithType: Location
    fullName: System.Activities.Location
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>(Variable)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>(Variable<T>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Variable<T>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Variable<T>)
- uid: System.Activities.Variable`1
  parent: System.Activities
  isExternal: false
  name: Variable<T>
  nameWithType: Variable<T>
  fullName: System.Activities.Variable<T>
- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>(Expression<Func<ActivityContext,T>>)
- uid: System.Linq.Expressions.Expression`1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Activities.ActivityContext
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Func<ActivityContext,T>>
  nameWithType: Expression<Func<ActivityContext,T>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: System.Activities.ActivityContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.InOutArgument`1.Expression
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Expression
  nameWithType: InOutArgument<T>.Expression
  fullName: System.Activities.InOutArgument<T>.Expression
- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromExpression(Activity<Location<T>>)
  nameWithType: InOutArgument<T>.FromExpression(Activity<Location<T>>)
  fullName: System.Activities.InOutArgument<T>.FromExpression(Activity<Location<T>>)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromVariable(Variable<T>)
  nameWithType: InOutArgument<T>.FromVariable(Variable<T>)
  fullName: System.Activities.InOutArgument<T>.FromVariable(Variable<T>)
- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: InOutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.Get(ActivityContext)
- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.GetLocation(ActivityContext)
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{T}} to System.Activities.InOutArgument{T})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: op_Implicit(Activity<Location<T>> to InOutArgument<T>)
  nameWithType: InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Activity<Location<T>> to InOutArgument<T>)
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{T} to System.Activities.InOutArgument{T})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: op_Implicit(Variable<T> to InOutArgument<T>)
  nameWithType: InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Variable<T> to InOutArgument<T>)
- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Set(ActivityContext, T)
  nameWithType: InOutArgument<T>.Set(ActivityContext, T)
  fullName: System.Activities.InOutArgument<T>.Set(ActivityContext, T)
- uid: System.Activities.InOutArgument`1.#ctor*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>.InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>.InOutArgument<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.Expression*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Expression
  nameWithType: InOutArgument<T>.Expression
  fullName: System.Activities.InOutArgument<T>.Expression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.FromExpression*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromExpression
  nameWithType: InOutArgument<T>.FromExpression
  fullName: System.Activities.InOutArgument<T>.FromExpression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.FromVariable*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromVariable
  nameWithType: InOutArgument<T>.FromVariable
  fullName: System.Activities.InOutArgument<T>.FromVariable
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.Get*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Get
  nameWithType: InOutArgument<T>.Get
  fullName: System.Activities.InOutArgument<T>.Get
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.GetLocation*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: GetLocation
  nameWithType: InOutArgument<T>.GetLocation
  fullName: System.Activities.InOutArgument<T>.GetLocation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.op_Implicit*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: op_Implicit
  nameWithType: InOutArgument<T>.op_Implicit
  fullName: System.Activities.InOutArgument<T>.op_Implicit
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
- uid: System.Activities.InOutArgument`1.Set*
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Set
  nameWithType: InOutArgument<T>.Set
  fullName: System.Activities.InOutArgument<T>.Set
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/InOutArgument`1.xml
