### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  commentId: T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  id: ClaimsPrincipalPermissionAttribute
  children:
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  - System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  langs:
  - csharp
  name: ClaimsPrincipalPermissionAttribute
  nameWithType: ClaimsPrincipalPermissionAttribute
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  type: Class
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: Represents a security attribute used to declaratively assign access checks based on the logic provided by the <xref href="System.Security.Claims.ClaimsAuthorizationManager"></xref> instance in the current application context. This class cannot be inherited.
  remarks: "The <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> is used to declaratively request an access check using the configured <xref:System.Security.Claims.ClaimsAuthorizationManager>.  \n  \n You must specify one of the <xref:System.Security.Permissions.SecurityAction> values, a `Resource` and an `Operation` in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration. The `Resource` and `Operation` properties specify the resource and action for which the current principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>) must be authorized for execution to proceed. If the current principal is not authorized to perform the specified action (operation) on the specified resource, a <xref:System.Security.SecurityException> is thrown.  \n  \n> [!IMPORTANT]\n>  The <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=fullName> property. This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications. You can specify the claims authorization manager either in configuration or programmatically. To specify the claims authorization manager in a configuration file, set the [\\&lt;claimsAuthorizationManager\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under an [\\&lt;identityConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element and ensure that this identity configuration is referenced by the [\\&lt;federationConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute). To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=fullName> event."
  example:
  - "The following example shows how to protect a method by decorating it with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> attribute. The attribute will evaluate whether access should be granted to the current principal by leveraging the logic provided by the <xref:System.Security.Claims.ClaimsAuthorizationManager> instance in the application context. If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.  \n  \n [!code-csharp[WifCppWithCam#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#4)]  \n  \n The following XML shows the minimum configuration required to use a custom claims authorization manager with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class. You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [\\&lt;claimsAuthorizationManager\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under the default identity configuration. This will ensure that your authorization manager is referenced from the default federation configuration. Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [\\&lt;federationConfiguration\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element.  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<configuration>  \n  <configSections>  \n    <!-- WIF configuration sections -->  \n    <section name=\"system.identityModel\" type=\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\"/>  \n    <section name=\"system.identityModel.services\" type=\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\"/>  \n  </configSections>  \n  \n  <startup>  \n    <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5\" />  \n  </startup>  \n  \n  <system.identityModel>  \n    <identityConfiguration>  \n      <claimsAuthorizationManager type =\"MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager\"/>  \n    </identityConfiguration>  \n  </system.identityModel>  \n  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]

      public sealed class ClaimsPrincipalPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  attributes:
  - type: System.AttributeUsageAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  commentId: M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: ClaimsPrincipalPermissionAttribute(SecurityAction)
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: Initializes a new instance of the <xref href="System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute"></xref> class.
  remarks: You must also specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is invoked to create the permission.
  syntax:
    content: public ClaimsPrincipalPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: One of the values that specifies the security actions that can be performed when using declarative security.
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  commentId: M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: Creates new instance of the <xref href="System.IdentityModel.Services.ClaimsPrincipalPermission"></xref> class that is based on the current instance.
  remarks: The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is created by using the value of the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation%2A> property and the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource%2A> property. You must specify the `Operation` and `Resource` properties in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is invoked to create the permission.
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A <xref href="System.IdentityModel.Services.ClaimsPrincipalPermission"></xref> with the operation and resource associated with this instance.
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  commentId: P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  id: Operation
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: Gets or sets the operation for which the current principal should be authorized on the specified resource.
  remarks: The operation is the action for which the current principal should be authorized on the specified resource. You must set the `Operation` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.
  syntax:
    content: public string Operation { get; set; }
    return:
      type: System.String
      description: The action for which the current principal should be authorized.
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  commentId: P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  id: Resource
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  langs:
  - csharp
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  type: Property
  assemblies:
  - System.IdentityModel.Services
  namespace: System.IdentityModel.Services
  summary: Gets or sets the resource on which the principal should be authorized to perform the specified action (operation).
  remarks: The resource on which the current principal should be authorized to perform the specified action. You must set the `Resource` property in your <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration or an exception will be thrown when the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission%2A> method is called to create the permission.
  syntax:
    content: public string Resource { get; set; }
    return:
      type: System.String
      description: The resource on which the current principal should be authorized.
  overload: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
  ms.author: v-jibran
  manager: markgal
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  parent: System.Security.Permissions
  isExternal: false
  name: CodeAccessSecurityAttribute
  nameWithType: CodeAccessSecurityAttribute
  fullName: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: ClaimsPrincipalPermissionAttribute(SecurityAction)
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission()
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: ClaimsPrincipalPermissionAttribute
  nameWithType: ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.ClaimsPrincipalPermissionAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: ClaimsPrincipalPermissionAttribute.CreatePermission
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Operation
  nameWithType: ClaimsPrincipalPermissionAttribute.Operation
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
- uid: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource*
  parent: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute
  isExternal: false
  name: Resource
  nameWithType: ClaimsPrincipalPermissionAttribute.Resource
  fullName: System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Services/ClaimsPrincipalPermissionAttribute.xml
