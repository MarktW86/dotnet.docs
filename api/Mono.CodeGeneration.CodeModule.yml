### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeModule
  commentId: T:Mono.CodeGeneration.CodeModule
  id: CodeModule
  children:
  - Mono.CodeGeneration.CodeModule.#ctor(System.String)
  - Mono.CodeGeneration.CodeModule.CreateClass(System.String)
  - Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  - Mono.CodeGeneration.CodeModule.ModuleBuilder
  - Mono.CodeGeneration.CodeModule.Shared
  langs:
  - csharp
  name: CodeModule
  nameWithType: CodeModule
  fullName: Mono.CodeGeneration.CodeModule
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public class CodeModule
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.#ctor(System.String)
  commentId: M:Mono.CodeGeneration.CodeModule.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: CodeModule(String)
  nameWithType: CodeModule.CodeModule(String)
  fullName: CodeModule.CodeModule(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeModule (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String)
  commentId: M:Mono.CodeGeneration.CodeModule.CreateClass(System.String)
  id: CreateClass(System.String)
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: CreateClass(String)
  nameWithType: CodeModule.CreateClass(String)
  fullName: CodeModule.CreateClass(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeClass CreateClass (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeClass
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.CreateClass*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Type,System.Type[])
  id: CreateClass(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: CreateClass(String, Type, Type[])
  nameWithType: CodeModule.CreateClass(String, Type, Type[])
  fullName: CodeModule.CreateClass(String, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeClass CreateClass (string name, Type baseType, Type[] interfaces);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: baseType
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeClass
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.CreateClass*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  commentId: M:Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  id: CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: CreateClass(String, TypeAttributes, Type, Type[])
  nameWithType: CodeModule.CreateClass(String, TypeAttributes, Type, Type[])
  fullName: CodeModule.CreateClass(String, TypeAttributes, Type, Type[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeClass CreateClass (string name, System.Reflection.TypeAttributes attr, Type baseType, Type[] interfaces);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: attr
      type: System.Reflection.TypeAttributes
      description: To be added.
    - id: baseType
      type: System.Type
      description: To be added.
    - id: interfaces
      type: System.Type[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeClass
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.CreateClass*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.ModuleBuilder
  commentId: P:Mono.CodeGeneration.CodeModule.ModuleBuilder
  id: ModuleBuilder
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: ModuleBuilder
  nameWithType: CodeModule.ModuleBuilder
  fullName: CodeModule.ModuleBuilder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public System.Reflection.Emit.ModuleBuilder ModuleBuilder { get; }
    return:
      type: System.Reflection.Emit.ModuleBuilder
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.ModuleBuilder*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.Shared
  commentId: P:Mono.CodeGeneration.CodeModule.Shared
  id: Shared
  parent: Mono.CodeGeneration.CodeModule
  langs:
  - csharp
  name: Shared
  nameWithType: CodeModule.Shared
  fullName: CodeModule.Shared
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeModule Shared { get; }
    return:
      type: Mono.CodeGeneration.CodeModule
      description: To be added.
  overload: Mono.CodeGeneration.CodeModule.Shared*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.CodeGeneration.CodeModule.#ctor(System.String)
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CodeModule(String)
  nameWithType: CodeModule.CodeModule(String)
  fullName: CodeModule.CodeModule(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String)
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CreateClass(String)
  nameWithType: CodeModule.CreateClass(String)
  fullName: CodeModule.CreateClass(String)
- uid: Mono.CodeGeneration.CodeClass
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeClass
  nameWithType: CodeClass
  fullName: Mono.CodeGeneration.CodeClass
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CreateClass(String, Type, Type[])
  nameWithType: CodeModule.CreateClass(String, Type, Type[])
  fullName: CodeModule.CreateClass(String, Type, Type[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeModule.CreateClass(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CreateClass(String, TypeAttributes, Type, Type[])
  nameWithType: CodeModule.CreateClass(String, TypeAttributes, Type, Type[])
  fullName: CodeModule.CreateClass(String, TypeAttributes, Type, Type[])
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: false
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: Mono.CodeGeneration.CodeModule.ModuleBuilder
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: ModuleBuilder
  nameWithType: CodeModule.ModuleBuilder
  fullName: CodeModule.ModuleBuilder
- uid: System.Reflection.Emit.ModuleBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: System.Reflection.Emit.ModuleBuilder
- uid: Mono.CodeGeneration.CodeModule.Shared
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: Shared
  nameWithType: CodeModule.Shared
  fullName: CodeModule.Shared
- uid: Mono.CodeGeneration.CodeModule
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeModule
  nameWithType: CodeModule
  fullName: Mono.CodeGeneration.CodeModule
- uid: Mono.CodeGeneration.CodeModule.#ctor*
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CodeModule
  nameWithType: CodeModule.CodeModule
  fullName: CodeModule.CodeModule
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.CreateClass*
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: CreateClass
  nameWithType: CodeModule.CreateClass
  fullName: CodeModule.CreateClass
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.ModuleBuilder*
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: ModuleBuilder
  nameWithType: CodeModule.ModuleBuilder
  fullName: CodeModule.ModuleBuilder
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
- uid: Mono.CodeGeneration.CodeModule.Shared*
  parent: Mono.CodeGeneration.CodeModule
  isExternal: false
  name: Shared
  nameWithType: CodeModule.Shared
  fullName: CodeModule.Shared
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeModule.xml
