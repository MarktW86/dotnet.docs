### YamlMime:ManagedReference
items:
- uid: System.Linq.ImmutableArrayExtensions
  commentId: T:System.Linq.ImmutableArrayExtensions
  id: ImmutableArrayExtensions
  children:
  - System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})
  - System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})
  - System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})
  - System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  - System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  - System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  - System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  - System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  - System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  - System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  - System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  - System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  - System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})
  - System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})
  - System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})
  - System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  langs:
  - csharp
  name: ImmutableArrayExtensions
  nameWithType: ImmutableArrayExtensions
  fullName: System.Linq.ImmutableArrayExtensions
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static class ImmutableArrayExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})
  id: Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
  nameWithType: ImmutableArrayExtensions.Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Aggregate<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,T,T> func);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: func
      type: System.Func{T,T,T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Aggregate``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})
  id: Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static TAccumulate Aggregate<TAccumulate,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, TAccumulate seed, Func<TAccumulate,T,TAccumulate> func);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: seed
      type: TAccumulate
      description: To be added.
    - id: func
      type: System.Func{TAccumulate,T,TAccumulate}
      description: To be added.
    return:
      type: TAccumulate
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Aggregate``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})
  commentId: M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})
  id: Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static TResult Aggregate<TAccumulate,TResult,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, TAccumulate seed, Func<TAccumulate,T,TAccumulate> func, Func<TAccumulate,TResult> resultSelector);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: seed
      type: TAccumulate
      description: To be added.
    - id: func
      type: System.Func{TAccumulate,T,TAccumulate}
      description: To be added.
    - id: resultSelector
      type: System.Func{TAccumulate,TResult}
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Aggregate``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: All<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.All<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.All<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static bool All<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.All``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})
  id: Any``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Any<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static bool Any<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Any``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  commentId: M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})
  id: Any``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Any<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static bool Any<T> (this System.Collections.Immutable.ImmutableArray<T>.Builder builder);
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableArray{T}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Any``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Any<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static bool Any<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Any``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  commentId: M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  id: ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ElementAt<T>(ImmutableArray<T>, Int32)
  nameWithType: ImmutableArrayExtensions.ElementAt<T>(ImmutableArray<T>, Int32)
  fullName: System.Linq.ImmutableArrayExtensions.ElementAt<T>(ImmutableArray<T>, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T ElementAt<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, int index);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ElementAt``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  commentId: M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  id: ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
  nameWithType: ImmutableArrayExtensions.ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
  fullName: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T ElementAtOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, int index);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})
  id: First``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: First<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T First<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.First``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  commentId: M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})
  id: First``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: First<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T First<T> (this System.Collections.Immutable.ImmutableArray<T>.Builder builder);
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableArray{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.First``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: First<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T First<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.First``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  id: FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: FirstOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T FirstOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  commentId: M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})
  id: FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: FirstOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T FirstOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T>.Builder builder);
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableArray{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T FirstOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  commentId: M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})
  id: Last``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Last<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Last<T> (this System.Collections.Immutable.ImmutableArray<T>.Builder builder);
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableArray{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Last``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Last<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Last<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Last``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})
  id: Last``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Last<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Last<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Last``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  id: LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: LastOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T LastOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.LastOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  commentId: M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})
  id: LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: LastOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T LastOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T>.Builder builder);
    parameters:
    - id: builder
      type: System.Collections.Immutable.ImmutableArray{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.LastOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T LastOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.LastOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  commentId: M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  id: Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
  nameWithType: ImmutableArrayExtensions.Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Select<T,TResult> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,TResult> selector);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: selector
      type: System.Func`2
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Select``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  commentId: M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Collections.Immutable.ImmutableArray<TSource> immutableArray, Func<TSource,System.Collections.Generic.IEnumerable<TCollection>> collectionSelector, Func<TSource,TCollection,TResult> resultSelector);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray{TSource}
      description: To be added.
    - id: collectionSelector
      type: System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}
      description: To be added.
    - id: resultSelector
      type: System.Func{TSource,TCollection,TResult}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SelectMany``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: 'public static bool SequenceEqual<TDerived,TBase> (this System.Collections.Immutable.ImmutableArray<TBase> immutableArray, System.Collections.Generic.IEnumerable<TDerived> items, System.Collections.Generic.IEqualityComparer<TBase> comparer = null) where TDerived : TBase;'
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray{TBase}
      description: To be added.
    - id: items
      type: System.Collections.Generic.IEnumerable{TDerived}
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TBase}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SequenceEqual``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: 'public static bool SequenceEqual<TDerived,TBase> (this System.Collections.Immutable.ImmutableArray<TBase> immutableArray, System.Collections.Immutable.ImmutableArray<TDerived> items, System.Collections.Generic.IEqualityComparer<TBase> comparer = null) where TDerived : TBase;'
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray{TBase}
      description: To be added.
    - id: items
      type: System.Collections.Immutable.ImmutableArray{TDerived}
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TBase}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SequenceEqual``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})
  id: SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: 'public static bool SequenceEqual<TDerived,TBase> (this System.Collections.Immutable.ImmutableArray<TBase> immutableArray, System.Collections.Immutable.ImmutableArray<TDerived> items, Func<TBase,TBase,bool> predicate) where TDerived : TBase;'
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray{TBase}
      description: To be added.
    - id: items
      type: System.Collections.Immutable.ImmutableArray{TDerived}
      description: To be added.
    - id: predicate
      type: System.Func{TBase,TBase,System.Boolean}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SequenceEqual``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})
  id: Single``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Single<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Single<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Single<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Single<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Single``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Single<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Single<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Single<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T Single<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Single``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  id: SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SingleOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T SingleOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T SingleOrDefault<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})
  id: ToArray``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ToArray<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.ToArray<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.ToArray<T>(ImmutableArray<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static T[] ToArray<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    return:
      type: T[]
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ToArray``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})
  id: ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,T> ToDictionary<TKey,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,TKey> keySelector);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: keySelector
      type: System.Func{T,TKey}
      description: To be added.
    return:
      type: System.Collections.Generic.Dictionary{TKey,T}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ToDictionary``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})
  id: ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,T> ToDictionary<TKey,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: keySelector
      type: System.Func{T,TKey}
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
    return:
      type: System.Collections.Generic.Dictionary{TKey,T}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ToDictionary``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})
  id: ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TKey,TElement,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,TKey> keySelector, Func<T,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: keySelector
      type: System.Func{T,TKey}
      description: To be added.
    - id: elementSelector
      type: System.Func{T,TElement}
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ToDictionary``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})
  commentId: M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})
  id: ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TKey,TElement,T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,TKey> keySelector, Func<T,TElement> elementSelector);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: keySelector
      type: System.Func{T,TKey}
      description: To be added.
    - id: elementSelector
      type: System.Func{T,TElement}
      description: To be added.
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.ToDictionary``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  commentId: M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  id: Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  langs:
  - csharp
  name: Where<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Where<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Where<T>(ImmutableArray<T>, Func<T,Boolean>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<T> Where<T> (this System.Collections.Immutable.ImmutableArray<T> immutableArray, Func<T,bool> predicate);
    parameters:
    - id: immutableArray
      type: System.Collections.Immutable.ImmutableArray`1
      description: To be added.
    - id: predicate
      type: System.Func{T,System.Boolean}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: System.Linq.ImmutableArrayExtensions.Where``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
  nameWithType: ImmutableArrayExtensions.Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<T>(ImmutableArray<T>, Func<T,T,T>)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableArray`1
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
- uid: System.Func`3
  name: Func<T1,T2,TResult>
  nameWithType: Func<T1,T2,TResult>
  fullName: System.Func<T1,T2,TResult>
- uid: System.Func{T,T,T}
  parent: System
  isExternal: false
  name: Func<T,T,T>
  nameWithType: Func<T,T,T>
  fullName: System.Func<T,T,T>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>)
- uid: TAccumulate
  isExternal: true
  name: TAccumulate
  nameWithType: TAccumulate
  fullName: TAccumulate
- uid: System.Func{TAccumulate,T,TAccumulate}
  parent: System
  isExternal: false
  name: Func<TAccumulate,T,TAccumulate>
  nameWithType: Func<TAccumulate,T,TAccumulate>
  fullName: System.Func<TAccumulate,T,TAccumulate>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>(ImmutableArray<T>, TAccumulate, Func<TAccumulate,T,TAccumulate>, Func<TAccumulate,TResult>)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Func`2
  name: Func<T,TResult>
  nameWithType: Func<T,TResult>
  fullName: System.Func<T,TResult>
- uid: System.Func{TAccumulate,TResult}
  parent: System
  isExternal: false
  name: Func<TAccumulate,TResult>
  nameWithType: Func<TAccumulate,TResult>
  fullName: System.Func<TAccumulate,TResult>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TAccumulate
    name: TAccumulate
    nameWithType: TAccumulate
    fullName: TAccumulate
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: All<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.All<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.All<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{T,System.Boolean}
  parent: System
  isExternal: false
  name: Func<T,Boolean>
  nameWithType: Func<T,Boolean>
  fullName: System.Func<T,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Any<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Any<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>)
- uid: System.Collections.Immutable.ImmutableArray{T}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>+Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Any<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Any<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ElementAt<T>(ImmutableArray<T>, Int32)
  nameWithType: ImmutableArrayExtensions.ElementAt<T>(ImmutableArray<T>, Int32)
  fullName: System.Linq.ImmutableArrayExtensions.ElementAt<T>(ImmutableArray<T>, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
  nameWithType: ImmutableArrayExtensions.ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
  fullName: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault<T>(ImmutableArray<T>, Int32)
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: First<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: First<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: First<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.First<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.First<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: FirstOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: FirstOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Last<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Last<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Last<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: LastOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0}.Builder)
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: LastOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
  nameWithType: ImmutableArrayExtensions.Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.Select<T,TResult>(ImmutableArray<T>, Func<T,TResult>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{TResult}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TResult>
  nameWithType: IEnumerable<TResult>
  fullName: System.Collections.Generic.IEnumerable<TResult>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: System.Linq.ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>(ImmutableArray<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Collections.Immutable.ImmutableArray{TSource}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<TSource>
  nameWithType: ImmutableArray<TSource>
  fullName: System.Collections.Immutable.ImmutableArray<TSource>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TCollection
  name: TCollection
  nameWithType: TCollection
  fullName: TCollection
- uid: System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}
  parent: System
  isExternal: false
  name: Func<TSource,IEnumerable<TCollection>>
  nameWithType: Func<TSource,IEnumerable<TCollection>>
  fullName: System.Func<TSource,System.Collections.Generic.IEnumerable<TCollection>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TSource,TCollection,TResult}
  parent: System
  isExternal: false
  name: Func<TSource,TCollection,TResult>
  nameWithType: Func<TSource,TCollection,TResult>
  fullName: System.Func<TSource,TCollection,TResult>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TCollection
    name: TCollection
    nameWithType: TCollection
    fullName: TCollection
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, IEnumerable<TDerived>, IEqualityComparer<TBase>)
- uid: TBase
  name: TBase
  nameWithType: TBase
  fullName: TBase
- uid: System.Collections.Immutable.ImmutableArray{TBase}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<TBase>
  nameWithType: ImmutableArray<TBase>
  fullName: System.Collections.Immutable.ImmutableArray<TBase>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: TBase
    name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: TDerived
  name: TDerived
  nameWithType: TDerived
  fullName: TDerived
- uid: System.Collections.Generic.IEnumerable{TDerived}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TDerived>
  nameWithType: IEnumerable<TDerived>
  fullName: System.Collections.Generic.IEnumerable<TDerived>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TDerived
    name: TDerived
    nameWithType: TDerived
    fullName: TDerived
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.IEqualityComparer{TBase}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TBase>
  nameWithType: IEqualityComparer<TBase>
  fullName: System.Collections.Generic.IEqualityComparer<TBase>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TBase
    name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, IEqualityComparer<TBase>)
- uid: System.Collections.Immutable.ImmutableArray{TDerived}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<TDerived>
  nameWithType: ImmutableArray<TDerived>
  fullName: System.Collections.Immutable.ImmutableArray<TDerived>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: TDerived
    name: TDerived
    nameWithType: TDerived
    fullName: TDerived
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>(ImmutableArray<TBase>, ImmutableArray<TDerived>, Func<TBase,TBase,Boolean>)
- uid: System.Func{TBase,TBase,System.Boolean}
  parent: System
  isExternal: false
  name: Func<TBase,TBase,Boolean>
  nameWithType: Func<TBase,TBase,Boolean>
  fullName: System.Func<TBase,TBase,System.Boolean>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: TBase
    name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TBase
    name: TBase
    nameWithType: TBase
    fullName: TBase
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Single<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.Single<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.Single<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Single<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Single<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Single<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SingleOrDefault<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>)
- uid: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.SingleOrDefault<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToArray<T>(ImmutableArray<T>)
  nameWithType: ImmutableArrayExtensions.ToArray<T>(ImmutableArray<T>)
  fullName: System.Linq.ImmutableArrayExtensions.ToArray<T>(ImmutableArray<T>)
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>)
- uid: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey,TValue>
  nameWithType: Dictionary<TKey,TValue>
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.Dictionary{TKey,T}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,T>
  nameWithType: Dictionary<TKey,T>
  fullName: System.Collections.Generic.Dictionary<TKey,T>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{T,TKey}
  parent: System
  isExternal: false
  name: Func<T,TKey>
  nameWithType: Func<T,TKey>
  fullName: System.Func<T,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,T>(ImmutableArray<T>, Func<T,TKey>, IEqualityComparer<TKey>)
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>, IEqualityComparer<TKey>)
- uid: TElement
  name: TElement
  nameWithType: TElement
  fullName: TElement
- uid: System.Collections.Generic.Dictionary{TKey,TElement}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TElement>
  nameWithType: Dictionary<TKey,TElement>
  fullName: System.Collections.Generic.Dictionary<TKey,TElement>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{T,TElement}
  parent: System
  isExternal: false
  name: Func<T,TElement>
  nameWithType: Func<T,TElement>
  fullName: System.Func<T,TElement>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TElement
    name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>(ImmutableArray<T>, Func<T,TKey>, Func<T,TElement>)
- uid: System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Where<T>(ImmutableArray<T>, Func<T,Boolean>)
  nameWithType: ImmutableArrayExtensions.Where<T>(ImmutableArray<T>, Func<T,Boolean>)
  fullName: System.Linq.ImmutableArrayExtensions.Where<T>(ImmutableArray<T>, Func<T,Boolean>)
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<T>
  nameWithType: ImmutableArrayExtensions.Aggregate<T>
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``2*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<TAccumulate,T>
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,T>
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Aggregate``3*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Aggregate<TAccumulate,TResult,T>
  nameWithType: ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>
  fullName: System.Linq.ImmutableArrayExtensions.Aggregate<TAccumulate,TResult,T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.All``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: All<T>
  nameWithType: ImmutableArrayExtensions.All<T>
  fullName: System.Linq.ImmutableArrayExtensions.All<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Any``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Any<T>
  nameWithType: ImmutableArrayExtensions.Any<T>
  fullName: System.Linq.ImmutableArrayExtensions.Any<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ElementAt``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ElementAt<T>
  nameWithType: ImmutableArrayExtensions.ElementAt<T>
  fullName: System.Linq.ImmutableArrayExtensions.ElementAt<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ElementAtOrDefault<T>
  nameWithType: ImmutableArrayExtensions.ElementAtOrDefault<T>
  fullName: System.Linq.ImmutableArrayExtensions.ElementAtOrDefault<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.First``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: First<T>
  nameWithType: ImmutableArrayExtensions.First<T>
  fullName: System.Linq.ImmutableArrayExtensions.First<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.FirstOrDefault``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: FirstOrDefault<T>
  nameWithType: ImmutableArrayExtensions.FirstOrDefault<T>
  fullName: System.Linq.ImmutableArrayExtensions.FirstOrDefault<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Last``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Last<T>
  nameWithType: ImmutableArrayExtensions.Last<T>
  fullName: System.Linq.ImmutableArrayExtensions.Last<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.LastOrDefault``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: LastOrDefault<T>
  nameWithType: ImmutableArrayExtensions.LastOrDefault<T>
  fullName: System.Linq.ImmutableArrayExtensions.LastOrDefault<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Select``2*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Select<T,TResult>
  nameWithType: ImmutableArrayExtensions.Select<T,TResult>
  fullName: System.Linq.ImmutableArrayExtensions.Select<T,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SelectMany``3*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>
  nameWithType: ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>
  fullName: System.Linq.ImmutableArrayExtensions.SelectMany<TSource,TCollection,TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SequenceEqual``2*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SequenceEqual<TDerived,TBase>
  nameWithType: ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>
  fullName: System.Linq.ImmutableArrayExtensions.SequenceEqual<TDerived,TBase>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Single``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Single<T>
  nameWithType: ImmutableArrayExtensions.Single<T>
  fullName: System.Linq.ImmutableArrayExtensions.Single<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.SingleOrDefault``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: SingleOrDefault<T>
  nameWithType: ImmutableArrayExtensions.SingleOrDefault<T>
  fullName: System.Linq.ImmutableArrayExtensions.SingleOrDefault<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToArray``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToArray<T>
  nameWithType: ImmutableArrayExtensions.ToArray<T>
  fullName: System.Linq.ImmutableArrayExtensions.ToArray<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``2*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,T>
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,T>
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.ToDictionary``3*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: ToDictionary<TKey,TElement,T>
  nameWithType: ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>
  fullName: System.Linq.ImmutableArrayExtensions.ToDictionary<TKey,TElement,T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
- uid: System.Linq.ImmutableArrayExtensions.Where``1*
  parent: System.Linq.ImmutableArrayExtensions
  isExternal: false
  name: Where<T>
  nameWithType: ImmutableArrayExtensions.Where<T>
  fullName: System.Linq.ImmutableArrayExtensions.Where<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq/ImmutableArrayExtensions.xml
