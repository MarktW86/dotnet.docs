### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.DynamicExpression
  commentId: T:System.Linq.Expressions.DynamicExpression
  id: DynamicExpression
  children:
  - System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.DynamicExpression.Arguments
  - System.Linq.Expressions.DynamicExpression.Binder
  - System.Linq.Expressions.DynamicExpression.DelegateType
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.DynamicExpression.NodeType
  - System.Linq.Expressions.DynamicExpression.Type
  - System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  - System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  - System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite
  - System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])
  langs:
  - csharp
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
  type: Class
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Represents a dynamic operation.
  syntax:
    content: 'public class DynamicExpression : System.Linq.Expressions.Expression, System.Linq.Expressions.IDynamicExpression'
  inheritance:
  - System.Object
  - System.Linq.Expressions.Expression
  implements:
  - System.Linq.Expressions.IDynamicExpression
  inheritedMembers:
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  commentId: M:System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Accept(ExpressionVisitor)
  nameWithType: DynamicExpression.Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.DynamicExpression.Accept(ExpressionVisitor)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Dispatches to the specific visit method for this node type. For example, <xref href="System.Linq.Expressions.MethodCallExpression"></xref> calls the <xref href="System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)"></xref>.
  remarks: This default implementation for <xref:System.Linq.Expressions.ExpressionType> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>. Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class. However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.
  syntax:
    content: protected override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: The visitor to visit this node with.
    return:
      type: System.Linq.Expressions.Expression
      description: The result of visiting this node.
  overload: System.Linq.Expressions.DynamicExpression.Accept*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.Expressions.DynamicExpression.Arguments
  commentId: P:System.Linq.Expressions.DynamicExpression.Arguments
  id: Arguments
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Arguments
  nameWithType: DynamicExpression.Arguments
  fullName: System.Linq.Expressions.DynamicExpression.Arguments
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the arguments to the dynamic operation.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> Arguments { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: The read-only collections containing the arguments to the dynamic operation.
  overload: System.Linq.Expressions.DynamicExpression.Arguments*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Binder
  commentId: P:System.Linq.Expressions.DynamicExpression.Binder
  id: Binder
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Binder
  nameWithType: DynamicExpression.Binder
  fullName: System.Linq.Expressions.DynamicExpression.Binder
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>, which determines the run-time behavior of the dynamic site.
  syntax:
    content: public System.Runtime.CompilerServices.CallSiteBinder Binder { get; }
    return:
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>, which determines the run-time behavior of the dynamic site.
  overload: System.Linq.Expressions.DynamicExpression.Binder*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.DelegateType
  commentId: P:System.Linq.Expressions.DynamicExpression.DelegateType
  id: DelegateType
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: DelegateType
  nameWithType: DynamicExpression.DelegateType
  fullName: System.Linq.Expressions.DynamicExpression.DelegateType
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
  syntax:
    content: public Type DelegateType { get; }
    return:
      type: System.Type
      description: The <xref href="System.Type"></xref> object representing the type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
  overload: System.Linq.Expressions.DynamicExpression.DelegateType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: The arguments to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>,  and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>,  and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, Expression[])
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression[])
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: The arguments to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: The third argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  remarks: The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result is inferred from the types of the arguments and the specified return type.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: returnType
      type: System.Type
      description: The result type of the dynamic expression.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: The third argument to the dynamic operation.
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: The fourth argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref> and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.Dynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref> and four arguments.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: The third argument to the dynamic operation.
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: The fourth argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref> and three arguments.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: The third argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref> and two arguments.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The first argument to the dynamic operation.
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: The second argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref> and one argument.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: The argument to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: The arguments to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  commentId: M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: MakeDynamic(Type, CallSiteBinder, Expression[])
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression[])
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Creates a <xref href="System.Linq.Expressions.DynamicExpression"></xref> that represents a dynamic operation bound by the provided <xref href="System.Runtime.CompilerServices.CallSiteBinder"></xref>.
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: The type of the delegate used by the <xref href="System.Runtime.CompilerServices.CallSite"></xref>.
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The runtime binder for the dynamic operation.
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: The arguments to the dynamic operation.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: A <xref href="System.Linq.Expressions.DynamicExpression"></xref> that has <xref href="System.Linq.Expressions.DynamicExpression.NodeType"></xref> equal to <xref href="System.Linq.Expressions.ExpressionType.Dynamic"></xref>, and has the <xref href="System.Linq.Expressions.DynamicExpression.DelegateType"></xref>, <xref href="System.Linq.Expressions.DynamicExpression.Binder"></xref>, and <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> set to the specified values.
  overload: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.Expressions.DynamicExpression.NodeType
  commentId: P:System.Linq.Expressions.DynamicExpression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: NodeType
  nameWithType: DynamicExpression.NodeType
  fullName: System.Linq.Expressions.DynamicExpression.NodeType
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Returns the node type of this expression. Extension nodes should return <xref href="System.Linq.Expressions.ExpressionType.Extension"></xref> when overriding this method.
  syntax:
    content: public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }
    return:
      type: System.Linq.Expressions.ExpressionType
      description: The <xref href="System.Linq.Expressions.ExpressionType"></xref> of the expression.
  overload: System.Linq.Expressions.DynamicExpression.NodeType*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: ghogen
- uid: System.Linq.Expressions.DynamicExpression.Type
  commentId: P:System.Linq.Expressions.DynamicExpression.Type
  id: Type
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Type
  nameWithType: DynamicExpression.Type
  fullName: System.Linq.Expressions.DynamicExpression.Type
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Gets the static type of the expression that this <xref href="System.Linq.Expressions.Expression"></xref> represents.
  syntax:
    content: public override Type Type { get; }
    return:
      type: System.Type
      description: The <xref href="System.Linq.Expressions.DynamicExpression.Type"></xref> that represents the static type of the expression.
  overload: System.Linq.Expressions.DynamicExpression.Type*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  commentId: M:System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: Update(IEnumerable<Expression>)
  nameWithType: DynamicExpression.Update(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.Update(IEnumerable<Expression>)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Compares the value sent to the parameter, <code>arguments</code>, to the `Arguments` property of the current instance of `DynamicExpression`. If the values of the parameter and the property are equal, the current instance is returned. If they are not equal, a new `DynamicExpression` instance is returned that is identical to the current instance except that the `Arguments` property is set to the value of parameter <code>arguments</code>.
  syntax:
    content: public System.Linq.Expressions.DynamicExpression Update (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: The <xref href="System.Linq.Expressions.DynamicExpression.Arguments"></xref> property of the result.
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: This expression if no children are changed or an expression with the updated children.
  overload: System.Linq.Expressions.DynamicExpression.Update*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  commentId: P:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  id: System#Linq#Expressions#IArgumentProvider#ArgumentCount
  isEii: true
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: IArgumentProvider.ArgumentCount
  nameWithType: DynamicExpression.IArgumentProvider.ArgumentCount
  fullName: System.Linq.Expressions.DynamicExpression.IArgumentProvider.ArgumentCount
  type: Property
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Returns the number of arguments to the expression tree node.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  syntax:
    content: int System.Linq.Expressions.IArgumentProvider.ArgumentCount { get; }
    return:
      type: System.Int32
      description: Returns <xref href="System.Int32"></xref>.
  overload: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  ms.author: billchi
  manager: douge
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  commentId: M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  id: System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  isEii: true
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: IArgumentProvider.GetArgument(Int32)
  nameWithType: DynamicExpression.IArgumentProvider.GetArgument(Int32)
  fullName: System.Linq.Expressions.DynamicExpression.IArgumentProvider.GetArgument(Int32)
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Returns the argument at index, throwing if index is out of bounds.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  syntax:
    content: System.Linq.Expressions.Expression IArgumentProvider.GetArgument (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The index of the argument.
    return:
      type: System.Linq.Expressions.Expression
      description: Returns <xref href="System.Linq.Expressions.Expression"></xref>.
  overload: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite
  commentId: M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite
  id: System#Linq#Expressions#IDynamicExpression#CreateCallSite
  isEii: true
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: IDynamicExpression.CreateCallSite()
  nameWithType: DynamicExpression.IDynamicExpression.CreateCallSite()
  fullName: System.Linq.Expressions.DynamicExpression.IDynamicExpression.CreateCallSite()
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this member.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  syntax:
    content: object IDynamicExpression.CreateCallSite ();
    parameters: []
    return:
      type: System.Object
      description: Returns <xref href="System.Object"></xref>.
  overload: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])
  commentId: M:System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])
  id: System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])
  isEii: true
  parent: System.Linq.Expressions.DynamicExpression
  langs:
  - csharp
  name: IDynamicExpression.Rewrite(Expression[])
  nameWithType: DynamicExpression.IDynamicExpression.Rewrite(Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.IDynamicExpression.Rewrite(Expression[])
  type: Method
  assemblies:
  - System.Dynamic.Runtime
  - System.Core
  - netstandard
  namespace: System.Linq.Expressions
  summary: Rewrite this node replacing the dynamic expression’s arguments with the provided values.  The number of <code>args</code> needs to match the number of the current expression.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.  This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.
  syntax:
    content: System.Linq.Expressions.Expression IDynamicExpression.Rewrite (System.Linq.Expressions.Expression[] args);
    parameters:
    - id: args
      type: System.Linq.Expressions.Expression[]
      description: The arguments.
    return:
      type: System.Linq.Expressions.Expression
      description: Returns <xref href="System.Linq.Expressions.Expression"></xref>, the rewritten expression.
  overload: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
  author: BillWagner
  ms.author: wiwagn
  manager: wpickett
references:
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.DynamicExpression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Accept(ExpressionVisitor)
  nameWithType: DynamicExpression.Accept(ExpressionVisitor)
  fullName: System.Linq.Expressions.DynamicExpression.Accept(ExpressionVisitor)
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.DynamicExpression.Arguments
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Arguments
  nameWithType: DynamicExpression.Arguments
  fullName: System.Linq.Expressions.DynamicExpression.Arguments
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<Expression>
  nameWithType: ReadOnlyCollection<Expression>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.DynamicExpression.Binder
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Binder
  nameWithType: DynamicExpression.Binder
  fullName: System.Linq.Expressions.DynamicExpression.Binder
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.DynamicExpression.DelegateType
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: DelegateType
  nameWithType: DynamicExpression.DelegateType
  fullName: System.Linq.Expressions.DynamicExpression.DelegateType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, IEnumerable<Expression>)
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression)
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression[])
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression[])
- uid: System.Linq.Expressions.Expression[]
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression[]
  nameWithType: Expression[]
  fullName: System.Linq.Expressions.Expression[]
  spec.csharp:
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  nameWithType: DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic(CallSiteBinder, Type, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression, Expression)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, IEnumerable<Expression>)
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic(Type, CallSiteBinder, Expression[])
  nameWithType: DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic(Type, CallSiteBinder, Expression[])
- uid: System.Linq.Expressions.DynamicExpression.NodeType
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: NodeType
  nameWithType: DynamicExpression.NodeType
  fullName: System.Linq.Expressions.DynamicExpression.NodeType
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.DynamicExpression.Type
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Type
  nameWithType: DynamicExpression.Type
  fullName: System.Linq.Expressions.DynamicExpression.Type
- uid: System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Update(IEnumerable<Expression>)
  nameWithType: DynamicExpression.Update(IEnumerable<Expression>)
  fullName: System.Linq.Expressions.DynamicExpression.Update(IEnumerable<Expression>)
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: IArgumentProvider.ArgumentCount
  nameWithType: DynamicExpression.IArgumentProvider.ArgumentCount
  fullName: System.Linq.Expressions.DynamicExpression.IArgumentProvider.ArgumentCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument(System.Int32)
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: IArgumentProvider.GetArgument(Int32)
  nameWithType: DynamicExpression.IArgumentProvider.GetArgument(Int32)
  fullName: System.Linq.Expressions.DynamicExpression.IArgumentProvider.GetArgument(Int32)
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: IDynamicExpression.CreateCallSite()
  nameWithType: DynamicExpression.IDynamicExpression.CreateCallSite()
  fullName: System.Linq.Expressions.DynamicExpression.IDynamicExpression.CreateCallSite()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: IDynamicExpression.Rewrite(Expression[])
  nameWithType: DynamicExpression.IDynamicExpression.Rewrite(Expression[])
  fullName: System.Linq.Expressions.DynamicExpression.IDynamicExpression.Rewrite(Expression[])
- uid: System.Linq.Expressions.DynamicExpression.Accept*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Accept
  nameWithType: DynamicExpression.Accept
  fullName: System.Linq.Expressions.DynamicExpression.Accept
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.Arguments*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Arguments
  nameWithType: DynamicExpression.Arguments
  fullName: System.Linq.Expressions.DynamicExpression.Arguments
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.Binder*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Binder
  nameWithType: DynamicExpression.Binder
  fullName: System.Linq.Expressions.DynamicExpression.Binder
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.DelegateType*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: DelegateType
  nameWithType: DynamicExpression.DelegateType
  fullName: System.Linq.Expressions.DynamicExpression.DelegateType
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.Dynamic*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Dynamic
  nameWithType: DynamicExpression.Dynamic
  fullName: System.Linq.Expressions.DynamicExpression.Dynamic
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.MakeDynamic*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: MakeDynamic
  nameWithType: DynamicExpression.MakeDynamic
  fullName: System.Linq.Expressions.DynamicExpression.MakeDynamic
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.NodeType*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: NodeType
  nameWithType: DynamicExpression.NodeType
  fullName: System.Linq.Expressions.DynamicExpression.NodeType
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.Type*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Type
  nameWithType: DynamicExpression.Type
  fullName: System.Linq.Expressions.DynamicExpression.Type
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.Update*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: Update
  nameWithType: DynamicExpression.Update
  fullName: System.Linq.Expressions.DynamicExpression.Update
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#ArgumentCount*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: System.Linq.Expressions.IArgumentProvider.ArgumentCount
  nameWithType: DynamicExpression.System.Linq.Expressions.IArgumentProvider.ArgumentCount
  fullName: System.Linq.Expressions.DynamicExpression.System.Linq.Expressions.IArgumentProvider.ArgumentCount
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IArgumentProvider#GetArgument*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: System.Linq.Expressions.IArgumentProvider.GetArgument
  nameWithType: DynamicExpression.System.Linq.Expressions.IArgumentProvider.GetArgument
  fullName: System.Linq.Expressions.DynamicExpression.System.Linq.Expressions.IArgumentProvider.GetArgument
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#CreateCallSite*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: System.Linq.Expressions.IDynamicExpression.CreateCallSite
  nameWithType: DynamicExpression.System.Linq.Expressions.IDynamicExpression.CreateCallSite
  fullName: System.Linq.Expressions.DynamicExpression.System.Linq.Expressions.IDynamicExpression.CreateCallSite
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
- uid: System.Linq.Expressions.DynamicExpression.System#Linq#Expressions#IDynamicExpression#Rewrite*
  parent: System.Linq.Expressions.DynamicExpression
  isExternal: false
  name: System.Linq.Expressions.IDynamicExpression.Rewrite
  nameWithType: DynamicExpression.System.Linq.Expressions.IDynamicExpression.Rewrite
  fullName: System.Linq.Expressions.DynamicExpression.System.Linq.Expressions.IDynamicExpression.Rewrite
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpression.xml
