### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Dataflow.DataflowBlock
  commentId: T:System.Threading.Tasks.Dataflow.DataflowBlock
  id: DataflowBlock
  children:
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  - System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  - System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  - System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  langs:
  - csharp
  name: DataflowBlock
  nameWithType: DataflowBlock
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock
  type: Class
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static class DataflowBlock
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  id: AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static IObservable<TOutput> AsObservable<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    return:
      type: System.IObservable{TOutput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  id: AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: AsObserver<TInput>(ITargetBlock<TInput>)
  nameWithType: DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static IObserver<TInput> AsObserver<TInput> (this System.Threading.Tasks.Dataflow.ITargetBlock<TInput> target);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
    return:
      type: System.IObserver{TInput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})
  id: Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
  nameWithType: DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<int> Choose<T1,T2,T3> (System.Threading.Tasks.Dataflow.ISourceBlock<T1> source1, Action<T1> action1, System.Threading.Tasks.Dataflow.ISourceBlock<T2> source2, Action<T2> action2, System.Threading.Tasks.Dataflow.ISourceBlock<T3> source3, Action<T3> action3);
    parameters:
    - id: source1
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T1}
      description: To be added.
    - id: action1
      type: System.Action{T1}
      description: To be added.
    - id: source2
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T2}
      description: To be added.
    - id: action2
      type: System.Action{T2}
      description: To be added.
    - id: source3
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T3}
      description: To be added.
    - id: action3
      type: System.Action{T3}
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  id: Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
  nameWithType: DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<int> Choose<T1,T2,T3> (System.Threading.Tasks.Dataflow.ISourceBlock<T1> source1, Action<T1> action1, System.Threading.Tasks.Dataflow.ISourceBlock<T2> source2, Action<T2> action2, System.Threading.Tasks.Dataflow.ISourceBlock<T3> source3, Action<T3> action3, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: source1
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T1}
      description: To be added.
    - id: action1
      type: System.Action{T1}
      description: To be added.
    - id: source2
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T2}
      description: To be added.
    - id: action2
      type: System.Action{T2}
      description: To be added.
    - id: source3
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T3}
      description: To be added.
    - id: action3
      type: System.Action{T3}
      description: To be added.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.DataflowBlockOptions
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})
  id: Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
  nameWithType: DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<int> Choose<T1,T2> (System.Threading.Tasks.Dataflow.ISourceBlock<T1> source1, Action<T1> action1, System.Threading.Tasks.Dataflow.ISourceBlock<T2> source2, Action<T2> action2);
    parameters:
    - id: source1
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T1}
      description: To be added.
    - id: action1
      type: System.Action{T1}
      description: To be added.
    - id: source2
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T2}
      description: To be added.
    - id: action2
      type: System.Action{T2}
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  id: Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
  nameWithType: DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<int> Choose<T1,T2> (System.Threading.Tasks.Dataflow.ISourceBlock<T1> source1, Action<T1> action1, System.Threading.Tasks.Dataflow.ISourceBlock<T2> source2, Action<T2> action2, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);
    parameters:
    - id: source1
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T1}
      description: To be added.
    - id: action1
      type: System.Action{T1}
      description: To be added.
    - id: source2
      type: System.Threading.Tasks.Dataflow.ISourceBlock{T2}
      description: To be added.
    - id: action2
      type: System.Action{T2}
      description: To be added.
    - id: dataflowBlockOptions
      type: System.Threading.Tasks.Dataflow.DataflowBlockOptions
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})
  id: Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Dataflow.IPropagatorBlock<TInput,TOutput> Encapsulate<TInput,TOutput> (System.Threading.Tasks.Dataflow.ITargetBlock<TInput> target, System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    return:
      type: System.Threading.Tasks.Dataflow.IPropagatorBlock`2
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  id: LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static IDisposable LinkTo<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: To be added.
    return:
      type: System.IDisposable
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  id: LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static IDisposable LinkTo<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target, Predicate<TOutput> predicate);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: To be added.
    - id: predicate
      type: System.Predicate{TOutput}
      description: To be added.
    return:
      type: System.IDisposable
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  id: LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static IDisposable LinkTo<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.Tasks.Dataflow.ITargetBlock<TOutput> target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions, Predicate<TOutput> predicate);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
      description: To be added.
    - id: linkOptions
      type: System.Threading.Tasks.Dataflow.DataflowLinkOptions
      description: To be added.
    - id: predicate
      type: System.Predicate{TOutput}
      description: To be added.
    return:
      type: System.IDisposable
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1
  id: NullTarget``1
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: NullTarget<TInput>()
  nameWithType: DataflowBlock.NullTarget<TInput>()
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget<TInput>()
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Dataflow.ITargetBlock<TInput> NullTarget<TInput> ();
    parameters: []
    return:
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  id: OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<bool> OutputAvailableAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  id: OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<bool> OutputAvailableAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  id: Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Post<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static bool Post<TInput> (this System.Threading.Tasks.Dataflow.ITargetBlock<TInput> target, TInput item);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
    - id: item
      type: TInput
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  id: Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static TOutput Receive<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    return:
      type: TOutput
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  id: Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static TOutput Receive<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: TOutput
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  id: Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static TOutput Receive<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, TimeSpan timeout);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: TOutput
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  id: Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static TOutput Receive<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: TOutput
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  id: ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<TOutput> ReceiveAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{TOutput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  id: ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<TOutput> ReceiveAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{TOutput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  id: ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<TOutput> ReceiveAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, TimeSpan timeout);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{TOutput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  id: ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<TOutput> ReceiveAsync<TOutput> (this System.Threading.Tasks.Dataflow.ISourceBlock<TOutput> source, TimeSpan timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.ISourceBlock`1
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{TOutput}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  id: SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<bool> SendAsync<TInput> (this System.Threading.Tasks.Dataflow.ITargetBlock<TInput> target, TInput item, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
    - id: item
      type: TInput
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  id: SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static System.Threading.Tasks.Task<bool> SendAsync<TInput> (this System.Threading.Tasks.Dataflow.ITargetBlock<TInput> target, TInput item);
    parameters:
    - id: target
      type: System.Threading.Tasks.Dataflow.ITargetBlock`1
      description: To be added.
    - id: item
      type: TInput
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  commentId: M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  id: TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  langs:
  - csharp
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  type: Method
  assemblies:
  - System.Threading.Tasks.Dataflow
  namespace: System.Threading.Tasks.Dataflow
  syntax:
    content: public static bool TryReceive<TOutput> (this System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput> source, out TOutput item);
    parameters:
    - id: source
      type: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
      description: To be added.
    - id: item
      type: TOutput
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable<TOutput>(ISourceBlock<TOutput>)
- uid: System.IObservable`1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
- uid: TOutput
  name: TOutput
  nameWithType: TOutput
  fullName: TOutput
- uid: System.IObservable{TOutput}
  parent: System
  isExternal: false
  name: IObservable<TOutput>
  nameWithType: IObservable<TOutput>
  fullName: System.IObservable<TOutput>
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<TOutput>
  nameWithType: ISourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObserver<TInput>(ITargetBlock<TInput>)
  nameWithType: DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver<TInput>(ITargetBlock<TInput>)
- uid: System.IObserver`1
  name: IObserver<T>
  nameWithType: IObserver<T>
  fullName: System.IObserver<T>
- uid: TInput
  name: TInput
  nameWithType: TInput
  fullName: TInput
- uid: System.IObserver{TInput}
  parent: System
  isExternal: false
  name: IObserver<TInput>
  nameWithType: IObserver<TInput>
  fullName: System.IObserver<TInput>
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
  - name: <
    nameWithType: <
    fullName: <
  - uid: TInput
    name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<TInput>
  nameWithType: ITargetBlock<TInput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TInput>
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
  nameWithType: DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T1
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{T1}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<T1>
  nameWithType: ISourceBlock<T1>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<T1>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
- uid: System.Action{T1}
  parent: System
  isExternal: false
  name: Action<T1>
  nameWithType: Action<T1>
  fullName: System.Action<T1>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T2
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{T2}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<T2>
  nameWithType: ISourceBlock<T2>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<T2>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{T2}
  parent: System
  isExternal: false
  name: Action<T2>
  nameWithType: Action<T2>
  fullName: System.Action<T2>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T3
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.Threading.Tasks.Dataflow.ISourceBlock{T3}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ISourceBlock<T3>
  nameWithType: ISourceBlock<T3>
  fullName: System.Threading.Tasks.Dataflow.ISourceBlock<T3>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ISourceBlock`1
    name: ISourceBlock
    nameWithType: ISourceBlock
    fullName: System.Threading.Tasks.Dataflow.ISourceBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Action{T3}
  parent: System
  isExternal: false
  name: Action<T3>
  nameWithType: Action<T3>
  fullName: System.Action<T3>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
  nameWithType: DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2,T3>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, ISourceBlock<T3>, Action<T3>, DataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.DataflowBlockOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowBlockOptions
  nameWithType: DataflowBlockOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowBlockOptions
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
  nameWithType: DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
  nameWithType: DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2>(ISourceBlock<T1>, Action<T1>, ISourceBlock<T2>, Action<T2>, DataflowBlockOptions)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate<TInput,TOutput>(ITargetBlock<TInput>, ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.IPropagatorBlock`2
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: IPropagatorBlock<TInput,TOutput>
  nameWithType: IPropagatorBlock<TInput,TOutput>
  fullName: System.Threading.Tasks.Dataflow.IPropagatorBlock<TInput,TOutput>
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>)
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Threading.Tasks.Dataflow.ITargetBlock{TOutput}
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: ITargetBlock<TOutput>
  nameWithType: ITargetBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.ITargetBlock<TOutput>
  spec.csharp:
  - uid: System.Threading.Tasks.Dataflow.ITargetBlock`1
    name: ITargetBlock
    nameWithType: ITargetBlock
    fullName: System.Threading.Tasks.Dataflow.ITargetBlock
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, Predicate<TOutput>)
- uid: System.Predicate`1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Predicate{TOutput}
  parent: System
  isExternal: false
  name: Predicate<TOutput>
  nameWithType: Predicate<TOutput>
  fullName: System.Predicate<TOutput>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  nameWithType: DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>(ISourceBlock<TOutput>, ITargetBlock<TOutput>, DataflowLinkOptions, Predicate<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowLinkOptions
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: DataflowLinkOptions
  nameWithType: DataflowLinkOptions
  fullName: System.Threading.Tasks.Dataflow.DataflowLinkOptions
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: NullTarget<TInput>()
  nameWithType: DataflowBlock.NullTarget<TInput>()
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget<TInput>()
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Post<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Post<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>)
- uid: System.Threading.Tasks.Task{TOutput}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TOutput>
  nameWithType: Task<TOutput>
  fullName: System.Threading.Tasks.Task<TOutput>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOutput
    name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>(ISourceBlock<TOutput>, TimeSpan, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput, CancellationToken)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  nameWithType: DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>(ITargetBlock<TInput>, TInput)
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  nameWithType: DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive<TOutput>(IReceivableSourceBlock<TOutput>, TOutput)
- uid: System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1
  parent: System.Threading.Tasks.Dataflow
  isExternal: false
  name: IReceivableSourceBlock<TOutput>
  nameWithType: IReceivableSourceBlock<TOutput>
  fullName: System.Threading.Tasks.Dataflow.IReceivableSourceBlock<TOutput>
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObservable<TOutput>
  nameWithType: DataflowBlock.AsObservable<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: AsObserver<TInput>
  nameWithType: DataflowBlock.AsObserver<TInput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver<TInput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2,T3>
  nameWithType: DataflowBlock.Choose<T1,T2,T3>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2,T3>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Choose<T1,T2>
  nameWithType: DataflowBlock.Choose<T1,T2>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Choose<T1,T2>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Encapsulate<TInput,TOutput>
  nameWithType: DataflowBlock.Encapsulate<TInput,TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate<TInput,TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: LinkTo<TOutput>
  nameWithType: DataflowBlock.LinkTo<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: NullTarget<TInput>
  nameWithType: DataflowBlock.NullTarget<TInput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget<TInput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: OutputAvailableAsync<TOutput>
  nameWithType: DataflowBlock.OutputAvailableAsync<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Post``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Post<TInput>
  nameWithType: DataflowBlock.Post<TInput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Post<TInput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: Receive<TOutput>
  nameWithType: DataflowBlock.Receive<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.Receive<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: ReceiveAsync<TOutput>
  nameWithType: DataflowBlock.ReceiveAsync<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: SendAsync<TInput>
  nameWithType: DataflowBlock.SendAsync<TInput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync<TInput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
- uid: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1*
  parent: System.Threading.Tasks.Dataflow.DataflowBlock
  isExternal: false
  name: TryReceive<TOutput>
  nameWithType: DataflowBlock.TryReceive<TOutput>
  fullName: System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive<TOutput>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks.Dataflow/DataflowBlock.xml
