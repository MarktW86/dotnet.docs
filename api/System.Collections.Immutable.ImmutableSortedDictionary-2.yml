### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary`2
  id: ImmutableSortedDictionary`2
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  langs:
  - csharp
  name: ImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: 'public sealed class ImmutableSortedDictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IDictionary<TKey,TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>, System.Collections.IDictionary, System.Collections.Immutable.IImmutableDictionary<TKey,TValue>'
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IDictionary<TKey,TValue>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>
  - System.Collections.IDictionary
  - System.Collections.Immutable.IImmutableDictionary<TKey,TValue>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  - System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Add (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Add*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> AddRange (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  id: Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Clear()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Clear ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Contains(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Contains(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Contains(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool Contains (System.Collections.Generic.KeyValuePair<TKey,TValue> pair);
    parameters:
    - id: pair
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ContainsKey(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool ContainsKey (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ContainsValue(TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsValue(TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsValue(TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool ContainsValue (TValue value);
    parameters:
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  id: Count
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Count
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Count
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Count
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  commentId: F:System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  id: Empty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Empty
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Empty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Empty
  type: Field
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static readonly System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Empty;
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  id: IsEmpty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IsEmpty
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IsEmpty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IsEmpty
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Item(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Item(TKey)
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public TValue this[TKey key] { get; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TValue
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  id: KeyComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: KeyComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.KeyComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.KeyComparer
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Generic.IComparer<TKey> KeyComparer { get; }
    return:
      type: System.Collections.Generic.IComparer{TKey}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  id: Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Keys
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Generic.IEnumerable<TKey> Keys { get; }
    return:
      type: System.Collections.Generic.IEnumerable{TKey}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Remove(TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> Remove (TKey value);
    parameters:
    - id: value
      type: TKey
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  id: RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: RemoveRange(IEnumerable<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> RemoveRange (System.Collections.Generic.IEnumerable<TKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{TKey}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  id: SetItem(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: SetItem(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItem(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> SetItem (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> SetItems (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  id: ToBuilder
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ToBuilder()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ToBuilder()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ToBuilder()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Builder ToBuilder ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  id: TryGetKey(`0,`0@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: TryGetKey(TKey, TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetKey(TKey, TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetKey(TKey, TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool TryGetKey (TKey equalKey, out TKey actualKey);
    parameters:
    - id: equalKey
      type: TKey
      description: To be added.
    - id: actualKey
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: TryGetValue(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetValue(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public bool TryGetValue (TKey key, out TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  id: ValueComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ValueComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ValueComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ValueComparer
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Generic.IEqualityComparer<TValue> ValueComparer { get; }
    return:
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  id: Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Values
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Generic.IEnumerable<TValue> Values { get; }
    return:
      type: System.Collections.Generic.IEnumerable{TValue}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.Values*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  id: WithComparers(System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: WithComparers(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> WithComparers (System.Collections.Generic.IComparer<TKey> keyComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  id: WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue> WithComparers (System.Collections.Generic.IComparer<TKey> keyComparer, System.Collections.Generic.IEqualityComparer<TValue> valueComparer);
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{TKey}
      description: To be added.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{TValue}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair<TKey,TValue> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Clear()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.Clear ();
    parameters: []
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair<TKey,TValue>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{TKey,TValue}[]
      description: To be added.
    - id: arrayIndex
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool ICollection<KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair<TKey,TValue> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Add(`0,`1)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void IDictionary<TKey,TValue>.Add (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Item(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Item(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Item(TKey)
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item[TKey key] { get; set; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TValue
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Generic.ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{TKey}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Remove(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Remove(TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool IDictionary<TKey,TValue>.Remove (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Generic.ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    return:
      type: System.Collections.Generic.ICollection{TValue}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<TKey,TValue>>#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>> IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.CopyTo(Array, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.SyncRoot
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot*
  exceptions: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Add(Object, Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Add(Object, Object)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Clear()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Contains(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.IsFixedSize
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Item(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Item(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Keys
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Remove(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IDictionary.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Values
  type: Property
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#Add(`0,`1)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.Add (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.AddRange (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> pairs);
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#Clear
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Clear()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.Clear ();
    parameters: []
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#Remove(`0)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Remove(TKey)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.Remove (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.RemoveRange (System.Collections.Generic.IEnumerable<TKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{TKey}
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#SetItem(`0,`1)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.SetItem (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  commentId: M:System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary<TKey,TValue>#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  isEii: true
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  langs:
  - csharp
  name: IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: System.Collections.Immutable.IImmutableDictionary<TKey,TValue> IImmutableDictionary<TKey,TValue>.SetItems (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableDictionary`2
      description: To be added.
  overload: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<TKey,TValue>>
  nameWithType: IEnumerable<KeyValuePair<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Clear()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Contains(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Contains(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Contains(KeyValuePair<TKey,TValue>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ContainsKey(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsKey(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ContainsValue(TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsValue(TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsValue(TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Count
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Count
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Empty
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Empty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Empty
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.GetEnumerator()
- uid: System.Collections.Immutable.ImmutableSortedDictionary{TKey,TValue}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableSortedDictionary<TKey,TValue>
  nameWithType: ImmutableSortedDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>+Enumerator
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    nameWithType: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IsEmpty
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IsEmpty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IsEmpty
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Item(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Item(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: KeyComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.KeyComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.KeyComparer
- uid: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.IEnumerable{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TKey>
  nameWithType: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Remove(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: RemoveRange(IEnumerable<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: SetItem(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItem(TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ToBuilder()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ToBuilder()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ToBuilder()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: TryGetKey(TKey, TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetKey(TKey, TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetKey(TKey, TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: TryGetValue(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetValue(TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ValueComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ValueComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ValueComparer
- uid: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.IEqualityComparer{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TValue>
  nameWithType: IEqualityComparer<TValue>
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.IEnumerable{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: WithComparers(IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Clear()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[], Int32)
- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}[]
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>[]
  nameWithType: KeyValuePair<TKey,TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Item(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Item(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
- uid: System.Collections.Generic.ICollection{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Remove(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.ICollection{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<KeyValuePair<TKey,TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.CopyTo(Array, Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.IsSynchronized
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ICollection.SyncRoot
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ICollection.SyncRoot
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Add(Object, Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Add(Object, Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Add(Object, Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Clear()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Contains(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Contains(Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.IsFixedSize
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsFixedSize
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.IsReadOnly
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Item(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Item(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Item(Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Remove(Object)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Remove(Object)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IDictionary.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IDictionary.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IDictionary.Values
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: System.Collections.Immutable.IImmutableDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>
  nameWithType: IImmutableDictionary<TKey,TValue>
  fullName: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.Clear()
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Clear()
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.Remove(TKey)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.Remove(TKey)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Add*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Add
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Add
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Add
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: AddRange
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.AddRange
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.AddRange
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Clear
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Clear
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Contains
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Contains
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Contains
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ContainsKey
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsKey
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsKey
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ContainsValue
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ContainsValue
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ContainsValue
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Count*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Count
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Count
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Count
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: GetEnumerator
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.GetEnumerator
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: IsEmpty
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.IsEmpty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.IsEmpty
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Item*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Item
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Item
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Item
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: KeyComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.KeyComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.KeyComparer
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Keys
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Remove
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Remove
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: RemoveRange
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.RemoveRange
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.RemoveRange
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: SetItem
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItem
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItem
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: SetItems
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.SetItems
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.SetItems
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ToBuilder
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ToBuilder
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ToBuilder
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: TryGetKey
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetKey
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetKey
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: TryGetValue
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.TryGetValue
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.TryGetValue
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: ValueComparer
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.ValueComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.ValueComparer
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Values*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.Values
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: WithComparers
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.WithComparers
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.WithComparers
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Add
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Add
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Add
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Item
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Item
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Item
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Remove
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Values
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Add
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Add
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Clear
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Clear
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Contains
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Contains
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Item
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Item
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Keys
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Remove
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IDictionary.Values
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems*
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: false
  name: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems
  nameWithType: ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey,TValue>.System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableSortedDictionary`2.xml
- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableArray
  isExternal: false
  name: ToImmutableArray<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: Contains<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: ImmutableDictionary.Contains<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.Contains<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey)
  nameWithType: ImmutableDictionary.GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey)
- uid: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
  nameWithType: ImmutableDictionary.GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault<TKey,TValue>(IImmutableDictionary<TKey,TValue>, TKey, TValue)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableDictionary
  isExternal: false
  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableHashSet
  isExternal: false
  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  isExternal: false
  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  isExternal: false
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  isExternal: false
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
  fullName: System.Linq.Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
  fullName: System.Linq.Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Any<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Decimal>)
  nameWithType: Enumerable.Average(IEnumerable<Decimal>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Double>)
  nameWithType: Enumerable.Average(IEnumerable<Double>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Int32>)
  nameWithType: Enumerable.Average(IEnumerable<Int32>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Int64>)
  nameWithType: Enumerable.Average(IEnumerable<Int64>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable<Single>)
  nameWithType: Enumerable.Average(IEnumerable<Single>)
  fullName: System.Linq.Enumerable.Average(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: System.Linq.Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Count<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: First<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
  fullName: System.Linq.Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Decimal>)
  nameWithType: Enumerable.Max(IEnumerable<Decimal>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Double>)
  nameWithType: Enumerable.Max(IEnumerable<Double>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Int32>)
  nameWithType: Enumerable.Max(IEnumerable<Int32>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Int64>)
  nameWithType: Enumerable.Max(IEnumerable<Int64>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable<Single>)
  nameWithType: Enumerable.Max(IEnumerable<Single>)
  fullName: System.Linq.Enumerable.Max(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: System.Linq.Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: System.Linq.Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Decimal>)
  nameWithType: Enumerable.Min(IEnumerable<Decimal>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Double>)
  nameWithType: Enumerable.Min(IEnumerable<Double>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Int32>)
  nameWithType: Enumerable.Min(IEnumerable<Int32>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Int64>)
  nameWithType: Enumerable.Min(IEnumerable<Int64>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable<Single>)
  nameWithType: Enumerable.Min(IEnumerable<Single>)
  fullName: System.Linq.Enumerable.Min(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: System.Linq.Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: System.Linq.Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Reverse<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Reverse<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
  fullName: System.Linq.Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
  fullName: System.Linq.Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Decimal>)
  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Decimal>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Double>)
  nameWithType: Enumerable.Sum(IEnumerable<Double>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Double>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Int32>)
  nameWithType: Enumerable.Sum(IEnumerable<Int32>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Int32>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Int64>)
  nameWithType: Enumerable.Sum(IEnumerable<Int64>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Int64>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Decimal>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Double>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Nullable<Double>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Int32>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Nullable<Int32>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Int64>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Nullable<Int64>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Nullable<Single>>)
  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Nullable<Single>>)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable<Single>)
  nameWithType: Enumerable.Sum(IEnumerable<Single>)
  fullName: System.Linq.Enumerable.Sum(IEnumerable<Single>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
  fullName: System.Linq.Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToArray<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToArray<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToList<TSource>(IEnumerable<TSource>)
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToList<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
  fullName: System.Linq.Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
  fullName: System.Linq.Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  fullName: System.Linq.Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors<T>(IEnumerable<T>)
  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>, XName)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>, XName)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodes<T>(IEnumerable<T>)
  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.DescendantNodes<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodesAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants<T>(IEnumerable<T>)
  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Descendants<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Descendants<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>, XName)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements<T>(IEnumerable<T>)
  nameWithType: Extensions.Elements<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Elements<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements<T>(IEnumerable<T>, XName)
  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)
  fullName: System.Xml.Linq.Extensions.Elements<T>(IEnumerable<T>, XName)
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: InDocumentOrder<T>(IEnumerable<T>)
  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.InDocumentOrder<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Nodes<T>(IEnumerable<T>)
  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Nodes<T>(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove(IEnumerable<XAttribute>)
  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)
  fullName: System.Xml.Linq.Extensions.Remove(IEnumerable<XAttribute>)
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove<T>(IEnumerable<T>)
  nameWithType: Extensions.Remove<T>(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Remove<T>(IEnumerable<T>)
