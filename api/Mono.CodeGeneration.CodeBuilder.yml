### YamlMime:ManagedReference
items:
- uid: Mono.CodeGeneration.CodeBuilder
  commentId: T:Mono.CodeGeneration.CodeBuilder
  id: CodeBuilder
  children:
  - Mono.CodeGeneration.CodeBuilder.#ctor(Mono.CodeGeneration.CodeClass)
  - Mono.CodeGeneration.CodeBuilder.Assign(Mono.CodeGeneration.CodeValueReference,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.Case(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Mono.CodeGeneration.CodeExpression[])
  - Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(System.Object[])
  - Mono.CodeGeneration.CodeBuilder.CurrentBlock
  - Mono.CodeGeneration.CodeBuilder.Dec(Mono.CodeGeneration.CodeValueReference)
  - Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,System.Object)
  - Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.DeclareVariable(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type)
  - Mono.CodeGeneration.CodeBuilder.Else
  - Mono.CodeGeneration.CodeBuilder.ElseIf(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.EndFor
  - Mono.CodeGeneration.CodeBuilder.EndForeach
  - Mono.CodeGeneration.CodeBuilder.EndIf
  - Mono.CodeGeneration.CodeBuilder.EndSelect
  - Mono.CodeGeneration.CodeBuilder.EndWhile
  - Mono.CodeGeneration.CodeBuilder.For(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.Foreach(System.Type,Mono.CodeGeneration.CodeExpression@,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.Generate(System.Reflection.Emit.ILGenerator)
  - Mono.CodeGeneration.CodeBuilder.If(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.Inc(Mono.CodeGeneration.CodeValueReference)
  - Mono.CodeGeneration.CodeBuilder.op_Addition(Mono.CodeGeneration.CodeBuilder,Mono.CodeGeneration.CodeItem)
  - Mono.CodeGeneration.CodeBuilder.OwnerClass
  - Mono.CodeGeneration.CodeBuilder.PrintCode
  - Mono.CodeGeneration.CodeBuilder.PrintCode(Mono.CodeGeneration.CodeWriter)
  - Mono.CodeGeneration.CodeBuilder.Return
  - Mono.CodeGeneration.CodeBuilder.Return(Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.Select
  - Mono.CodeGeneration.CodeBuilder.When(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  - Mono.CodeGeneration.CodeBuilder.While(Mono.CodeGeneration.CodeExpression)
  langs:
  - csharp
  name: CodeBuilder
  nameWithType: CodeBuilder
  fullName: Mono.CodeGeneration.CodeBuilder
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public class CodeBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.#ctor(Mono.CodeGeneration.CodeClass)
  commentId: M:Mono.CodeGeneration.CodeBuilder.#ctor(Mono.CodeGeneration.CodeClass)
  id: '#ctor(Mono.CodeGeneration.CodeClass)'
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CodeBuilder(CodeClass)
  nameWithType: CodeBuilder.CodeBuilder(CodeClass)
  fullName: Mono.CodeGeneration.CodeBuilder.CodeBuilder(CodeClass)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public CodeBuilder (Mono.CodeGeneration.CodeClass codeClass);
    parameters:
    - id: codeClass
      type: Mono.CodeGeneration.CodeClass
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Assign(Mono.CodeGeneration.CodeValueReference,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Assign(Mono.CodeGeneration.CodeValueReference,Mono.CodeGeneration.CodeExpression)
  id: Assign(Mono.CodeGeneration.CodeValueReference,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Assign(CodeValueReference, CodeExpression)
  nameWithType: CodeBuilder.Assign(CodeValueReference, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Assign(CodeValueReference, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Assign (Mono.CodeGeneration.CodeValueReference var, Mono.CodeGeneration.CodeExpression val);
    parameters:
    - id: var
      type: Mono.CodeGeneration.CodeValueReference
      description: To be added.
    - id: val
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Assign*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  id: Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.Call(MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(MethodInfo, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (System.Reflection.MethodInfo method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (Mono.CodeGeneration.CodeExpression target, Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(CodeExpression, MethodBase, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, MethodBase, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, MethodBase, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (Mono.CodeGeneration.CodeExpression target, System.Reflection.MethodBase method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: System.Reflection.MethodBase
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  id: Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(CodeExpression, String, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (Mono.CodeGeneration.CodeExpression target, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  id: Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Call(Type, String, CodeExpression[])
  nameWithType: CodeBuilder.Call(Type, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(Type, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Call (Type type, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Call*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(Type, String, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(Type, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(Type, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (Type type, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(CodeExpression, String, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, String, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (Mono.CodeGeneration.CodeExpression target, string name, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: name
      type: System.String
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(CodeExpression, MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, MethodInfo, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (Mono.CodeGeneration.CodeExpression target, System.Reflection.MethodInfo method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(MethodInfo, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (System.Reflection.MethodInfo method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  id: CallFunc(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CallFunc(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, CodeMethod, CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression CallFunc (Mono.CodeGeneration.CodeExpression target, Mono.CodeGeneration.CodeMethod method, Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: target
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: method
      type: Mono.CodeGeneration.CodeMethod
      description: To be added.
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CallFunc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Case(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Case(Mono.CodeGeneration.CodeExpression)
  id: Case(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Case(CodeExpression)
  nameWithType: CodeBuilder.Case(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Case(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Case (Mono.CodeGeneration.CodeExpression condition);
    parameters:
    - id: condition
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Case*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Mono.CodeGeneration.CodeExpression[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Mono.CodeGeneration.CodeExpression[])
  id: ConsoleWriteLine(Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: ConsoleWriteLine(CodeExpression[])
  nameWithType: CodeBuilder.ConsoleWriteLine(CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(CodeExpression[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void ConsoleWriteLine (Mono.CodeGeneration.CodeExpression[] parameters);
    parameters:
    - id: parameters
      type: Mono.CodeGeneration.CodeExpression[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(System.Object[])
  commentId: M:Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(System.Object[])
  id: ConsoleWriteLine(System.Object[])
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: ConsoleWriteLine(Object[])
  nameWithType: CodeBuilder.ConsoleWriteLine(Object[])
  fullName: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Object[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void ConsoleWriteLine (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CurrentBlock
  commentId: P:Mono.CodeGeneration.CodeBuilder.CurrentBlock
  id: CurrentBlock
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: CurrentBlock
  nameWithType: CodeBuilder.CurrentBlock
  fullName: Mono.CodeGeneration.CodeBuilder.CurrentBlock
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeBlock CurrentBlock { get; }
    return:
      type: Mono.CodeGeneration.CodeBlock
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.CurrentBlock*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Dec(Mono.CodeGeneration.CodeValueReference)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Dec(Mono.CodeGeneration.CodeValueReference)
  id: Dec(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Dec(CodeValueReference)
  nameWithType: CodeBuilder.Dec(CodeValueReference)
  fullName: Mono.CodeGeneration.CodeBuilder.Dec(CodeValueReference)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Dec (Mono.CodeGeneration.CodeValueReference val);
    parameters:
    - id: val
      type: Mono.CodeGeneration.CodeValueReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Dec*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,System.Object)
  commentId: M:Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,System.Object)
  id: DeclareVariable(System.Type,System.Object)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: DeclareVariable(Type, Object)
  nameWithType: CodeBuilder.DeclareVariable(Type, Object)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeVariableReference DeclareVariable (Type type, object ob);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: ob
      type: System.Object
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeVariableReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.DeclareVariable*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,Mono.CodeGeneration.CodeExpression)
  id: DeclareVariable(System.Type,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: DeclareVariable(Type, CodeExpression)
  nameWithType: CodeBuilder.DeclareVariable(Type, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeVariableReference DeclareVariable (Type type, Mono.CodeGeneration.CodeExpression initValue);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: initValue
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeVariableReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.DeclareVariable*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.DeclareVariable(Mono.CodeGeneration.CodeExpression)
  id: DeclareVariable(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: DeclareVariable(CodeExpression)
  nameWithType: CodeBuilder.DeclareVariable(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeVariableReference DeclareVariable (Mono.CodeGeneration.CodeExpression initValue);
    parameters:
    - id: initValue
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeVariableReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.DeclareVariable*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type)
  commentId: M:Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type)
  id: DeclareVariable(System.Type)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: DeclareVariable(Type)
  nameWithType: CodeBuilder.DeclareVariable(Type)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeVariableReference DeclareVariable (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeVariableReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.DeclareVariable*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Else
  commentId: M:Mono.CodeGeneration.CodeBuilder.Else
  id: Else
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Else()
  nameWithType: CodeBuilder.Else()
  fullName: Mono.CodeGeneration.CodeBuilder.Else()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Else ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.Else*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.ElseIf(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.ElseIf(Mono.CodeGeneration.CodeExpression)
  id: ElseIf(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: ElseIf(CodeExpression)
  nameWithType: CodeBuilder.ElseIf(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.ElseIf(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void ElseIf (Mono.CodeGeneration.CodeExpression condition);
    parameters:
    - id: condition
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.ElseIf*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndFor
  commentId: M:Mono.CodeGeneration.CodeBuilder.EndFor
  id: EndFor
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: EndFor()
  nameWithType: CodeBuilder.EndFor()
  fullName: Mono.CodeGeneration.CodeBuilder.EndFor()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void EndFor ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.EndFor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndForeach
  commentId: M:Mono.CodeGeneration.CodeBuilder.EndForeach
  id: EndForeach
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: EndForeach()
  nameWithType: CodeBuilder.EndForeach()
  fullName: Mono.CodeGeneration.CodeBuilder.EndForeach()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void EndForeach ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.EndForeach*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndIf
  commentId: M:Mono.CodeGeneration.CodeBuilder.EndIf
  id: EndIf
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: EndIf()
  nameWithType: CodeBuilder.EndIf()
  fullName: Mono.CodeGeneration.CodeBuilder.EndIf()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void EndIf ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.EndIf*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndSelect
  commentId: M:Mono.CodeGeneration.CodeBuilder.EndSelect
  id: EndSelect
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: EndSelect()
  nameWithType: CodeBuilder.EndSelect()
  fullName: Mono.CodeGeneration.CodeBuilder.EndSelect()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void EndSelect ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.EndSelect*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndWhile
  commentId: M:Mono.CodeGeneration.CodeBuilder.EndWhile
  id: EndWhile
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: EndWhile()
  nameWithType: CodeBuilder.EndWhile()
  fullName: Mono.CodeGeneration.CodeBuilder.EndWhile()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void EndWhile ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.EndWhile*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.For(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.For(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  id: For(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: For(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.For(CodeExpression, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.For(CodeExpression, CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void For (Mono.CodeGeneration.CodeExpression initExp, Mono.CodeGeneration.CodeExpression conditionExp, Mono.CodeGeneration.CodeExpression nextExp);
    parameters:
    - id: initExp
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: conditionExp
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: nextExp
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.For*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Foreach(System.Type,Mono.CodeGeneration.CodeExpression@,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Foreach(System.Type,Mono.CodeGeneration.CodeExpression@,Mono.CodeGeneration.CodeExpression)
  id: Foreach(System.Type,Mono.CodeGeneration.CodeExpression@,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Foreach(Type, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.Foreach(Type, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Foreach(Type, CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Foreach (Type type, out Mono.CodeGeneration.CodeExpression item, Mono.CodeGeneration.CodeExpression array);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    - id: item
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: array
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Foreach*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Generate(System.Reflection.Emit.ILGenerator)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Generate(System.Reflection.Emit.ILGenerator)
  id: Generate(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Generate(ILGenerator)
  nameWithType: CodeBuilder.Generate(ILGenerator)
  fullName: Mono.CodeGeneration.CodeBuilder.Generate(ILGenerator)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Generate (System.Reflection.Emit.ILGenerator gen);
    parameters:
    - id: gen
      type: System.Reflection.Emit.ILGenerator
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Generate*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.If(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.If(Mono.CodeGeneration.CodeExpression)
  id: If(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: If(CodeExpression)
  nameWithType: CodeBuilder.If(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.If(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void If (Mono.CodeGeneration.CodeExpression condition);
    parameters:
    - id: condition
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.If*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Inc(Mono.CodeGeneration.CodeValueReference)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Inc(Mono.CodeGeneration.CodeValueReference)
  id: Inc(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Inc(CodeValueReference)
  nameWithType: CodeBuilder.Inc(CodeValueReference)
  fullName: Mono.CodeGeneration.CodeBuilder.Inc(CodeValueReference)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Inc (Mono.CodeGeneration.CodeValueReference val);
    parameters:
    - id: val
      type: Mono.CodeGeneration.CodeValueReference
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Inc*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.op_Addition(Mono.CodeGeneration.CodeBuilder,Mono.CodeGeneration.CodeItem)
  commentId: M:Mono.CodeGeneration.CodeBuilder.op_Addition(Mono.CodeGeneration.CodeBuilder,Mono.CodeGeneration.CodeItem)
  id: op_Addition(Mono.CodeGeneration.CodeBuilder,Mono.CodeGeneration.CodeItem)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: op_Addition(CodeBuilder, CodeItem)
  nameWithType: CodeBuilder.op_Addition(CodeBuilder, CodeItem)
  fullName: Mono.CodeGeneration.CodeBuilder.op_Addition(CodeBuilder, CodeItem)
  type: Operator
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public static Mono.CodeGeneration.CodeBuilder op_Addition (Mono.CodeGeneration.CodeBuilder cb, Mono.CodeGeneration.CodeItem e);
    parameters:
    - id: cb
      type: Mono.CodeGeneration.CodeBuilder
      description: To be added.
    - id: e
      type: Mono.CodeGeneration.CodeItem
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeBuilder
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.op_Addition*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.OwnerClass
  commentId: P:Mono.CodeGeneration.CodeBuilder.OwnerClass
  id: OwnerClass
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: OwnerClass
  nameWithType: CodeBuilder.OwnerClass
  fullName: Mono.CodeGeneration.CodeBuilder.OwnerClass
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeClass OwnerClass { get; }
    return:
      type: Mono.CodeGeneration.CodeClass
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.OwnerClass*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.PrintCode
  commentId: M:Mono.CodeGeneration.CodeBuilder.PrintCode
  id: PrintCode
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: PrintCode()
  nameWithType: CodeBuilder.PrintCode()
  fullName: Mono.CodeGeneration.CodeBuilder.PrintCode()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public string PrintCode ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.PrintCode(Mono.CodeGeneration.CodeWriter)
  commentId: M:Mono.CodeGeneration.CodeBuilder.PrintCode(Mono.CodeGeneration.CodeWriter)
  id: PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: PrintCode(CodeWriter)
  nameWithType: CodeBuilder.PrintCode(CodeWriter)
  fullName: Mono.CodeGeneration.CodeBuilder.PrintCode(CodeWriter)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void PrintCode (Mono.CodeGeneration.CodeWriter cp);
    parameters:
    - id: cp
      type: Mono.CodeGeneration.CodeWriter
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.PrintCode*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Return
  commentId: M:Mono.CodeGeneration.CodeBuilder.Return
  id: Return
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Return()
  nameWithType: CodeBuilder.Return()
  fullName: Mono.CodeGeneration.CodeBuilder.Return()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Return ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.Return*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Return(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.Return(Mono.CodeGeneration.CodeExpression)
  id: Return(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Return(CodeExpression)
  nameWithType: CodeBuilder.Return(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Return(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Return (Mono.CodeGeneration.CodeExpression exp);
    parameters:
    - id: exp
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.Return*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Select
  commentId: M:Mono.CodeGeneration.CodeBuilder.Select
  id: Select
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: Select()
  nameWithType: CodeBuilder.Select()
  fullName: Mono.CodeGeneration.CodeBuilder.Select()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void Select ();
    parameters: []
  overload: Mono.CodeGeneration.CodeBuilder.Select*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.When(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.When(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  id: When(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: When(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.When(CodeExpression, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.When(CodeExpression, CodeExpression, CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public Mono.CodeGeneration.CodeExpression When (Mono.CodeGeneration.CodeExpression condition, Mono.CodeGeneration.CodeExpression trueResult, Mono.CodeGeneration.CodeExpression falseResult);
    parameters:
    - id: condition
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: trueResult
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    - id: falseResult
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
    return:
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.When*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.While(Mono.CodeGeneration.CodeExpression)
  commentId: M:Mono.CodeGeneration.CodeBuilder.While(Mono.CodeGeneration.CodeExpression)
  id: While(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  langs:
  - csharp
  name: While(CodeExpression)
  nameWithType: CodeBuilder.While(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.While(CodeExpression)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: Mono.CodeGeneration
  syntax:
    content: public void While (Mono.CodeGeneration.CodeExpression condition);
    parameters:
    - id: condition
      type: Mono.CodeGeneration.CodeExpression
      description: To be added.
  overload: Mono.CodeGeneration.CodeBuilder.While*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mono.CodeGeneration.CodeBuilder.#ctor(Mono.CodeGeneration.CodeClass)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CodeBuilder(CodeClass)
  nameWithType: CodeBuilder.CodeBuilder(CodeClass)
  fullName: Mono.CodeGeneration.CodeBuilder.CodeBuilder(CodeClass)
- uid: Mono.CodeGeneration.CodeClass
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeClass
  nameWithType: CodeClass
  fullName: Mono.CodeGeneration.CodeClass
- uid: Mono.CodeGeneration.CodeBuilder.Assign(Mono.CodeGeneration.CodeValueReference,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Assign(CodeValueReference, CodeExpression)
  nameWithType: CodeBuilder.Assign(CodeValueReference, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Assign(CodeValueReference, CodeExpression)
- uid: Mono.CodeGeneration.CodeValueReference
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeValueReference
  nameWithType: CodeValueReference
  fullName: Mono.CodeGeneration.CodeValueReference
- uid: Mono.CodeGeneration.CodeExpression
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: Mono.CodeGeneration.CodeExpression
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.CodeMethod
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeMethod
  nameWithType: CodeMethod
  fullName: Mono.CodeGeneration.CodeMethod
- uid: Mono.CodeGeneration.CodeExpression[]
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeExpression[]
  nameWithType: CodeExpression[]
  fullName: Mono.CodeGeneration.CodeExpression[]
  spec.csharp:
  - uid: Mono.CodeGeneration.CodeExpression
    name: CodeExpression
    nameWithType: CodeExpression
    fullName: Mono.CodeGeneration.CodeExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeBuilder.Call(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.Call(MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(MethodInfo, CodeExpression[])
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodBase,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(CodeExpression, MethodBase, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, MethodBase, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, MethodBase, CodeExpression[])
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: Mono.CodeGeneration.CodeBuilder.Call(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(CodeExpression, String, CodeExpression[])
  nameWithType: CodeBuilder.Call(CodeExpression, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(CodeExpression, String, CodeExpression[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mono.CodeGeneration.CodeBuilder.Call(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call(Type, String, CodeExpression[])
  nameWithType: CodeBuilder.Call(Type, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.Call(Type, String, CodeExpression[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(System.Type,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(Type, String, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(Type, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(Type, String, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.String,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(CodeExpression, String, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, String, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, String, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(CodeExpression, MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, MethodInfo, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(System.Reflection.MethodInfo,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(MethodInfo, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(MethodInfo, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(MethodInfo, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeMethod,Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc(CodeExpression, CodeMethod, CodeExpression[])
  nameWithType: CodeBuilder.CallFunc(CodeExpression, CodeMethod, CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc(CodeExpression, CodeMethod, CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.Case(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Case(CodeExpression)
  nameWithType: CodeBuilder.Case(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Case(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Mono.CodeGeneration.CodeExpression[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: ConsoleWriteLine(CodeExpression[])
  nameWithType: CodeBuilder.ConsoleWriteLine(CodeExpression[])
  fullName: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(CodeExpression[])
- uid: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(System.Object[])
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: ConsoleWriteLine(Object[])
  nameWithType: CodeBuilder.ConsoleWriteLine(Object[])
  fullName: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine(Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Mono.CodeGeneration.CodeBuilder.CurrentBlock
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CurrentBlock
  nameWithType: CodeBuilder.CurrentBlock
  fullName: Mono.CodeGeneration.CodeBuilder.CurrentBlock
- uid: Mono.CodeGeneration.CodeBlock
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeBlock
  nameWithType: CodeBlock
  fullName: Mono.CodeGeneration.CodeBlock
- uid: Mono.CodeGeneration.CodeBuilder.Dec(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Dec(CodeValueReference)
  nameWithType: CodeBuilder.Dec(CodeValueReference)
  fullName: Mono.CodeGeneration.CodeBuilder.Dec(CodeValueReference)
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,System.Object)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: DeclareVariable(Type, Object)
  nameWithType: CodeBuilder.DeclareVariable(Type, Object)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type, Object)
- uid: Mono.CodeGeneration.CodeVariableReference
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeVariableReference
  nameWithType: CodeVariableReference
  fullName: Mono.CodeGeneration.CodeVariableReference
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: DeclareVariable(Type, CodeExpression)
  nameWithType: CodeBuilder.DeclareVariable(Type, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type, CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: DeclareVariable(CodeExpression)
  nameWithType: CodeBuilder.DeclareVariable(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable(System.Type)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: DeclareVariable(Type)
  nameWithType: CodeBuilder.DeclareVariable(Type)
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable(Type)
- uid: Mono.CodeGeneration.CodeBuilder.Else
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Else()
  nameWithType: CodeBuilder.Else()
  fullName: Mono.CodeGeneration.CodeBuilder.Else()
- uid: Mono.CodeGeneration.CodeBuilder.ElseIf(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: ElseIf(CodeExpression)
  nameWithType: CodeBuilder.ElseIf(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.ElseIf(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.EndFor
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndFor()
  nameWithType: CodeBuilder.EndFor()
  fullName: Mono.CodeGeneration.CodeBuilder.EndFor()
- uid: Mono.CodeGeneration.CodeBuilder.EndForeach
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndForeach()
  nameWithType: CodeBuilder.EndForeach()
  fullName: Mono.CodeGeneration.CodeBuilder.EndForeach()
- uid: Mono.CodeGeneration.CodeBuilder.EndIf
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndIf()
  nameWithType: CodeBuilder.EndIf()
  fullName: Mono.CodeGeneration.CodeBuilder.EndIf()
- uid: Mono.CodeGeneration.CodeBuilder.EndSelect
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndSelect()
  nameWithType: CodeBuilder.EndSelect()
  fullName: Mono.CodeGeneration.CodeBuilder.EndSelect()
- uid: Mono.CodeGeneration.CodeBuilder.EndWhile
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndWhile()
  nameWithType: CodeBuilder.EndWhile()
  fullName: Mono.CodeGeneration.CodeBuilder.EndWhile()
- uid: Mono.CodeGeneration.CodeBuilder.For(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: For(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.For(CodeExpression, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.For(CodeExpression, CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.Foreach(System.Type,Mono.CodeGeneration.CodeExpression@,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Foreach(Type, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.Foreach(Type, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Foreach(Type, CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.Generate(System.Reflection.Emit.ILGenerator)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Generate(ILGenerator)
  nameWithType: CodeBuilder.Generate(ILGenerator)
  fullName: Mono.CodeGeneration.CodeBuilder.Generate(ILGenerator)
- uid: System.Reflection.Emit.ILGenerator
  parent: System.Reflection.Emit
  isExternal: false
  name: ILGenerator
  nameWithType: ILGenerator
  fullName: System.Reflection.Emit.ILGenerator
- uid: Mono.CodeGeneration.CodeBuilder.If(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: If(CodeExpression)
  nameWithType: CodeBuilder.If(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.If(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.Inc(Mono.CodeGeneration.CodeValueReference)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Inc(CodeValueReference)
  nameWithType: CodeBuilder.Inc(CodeValueReference)
  fullName: Mono.CodeGeneration.CodeBuilder.Inc(CodeValueReference)
- uid: Mono.CodeGeneration.CodeBuilder.op_Addition(Mono.CodeGeneration.CodeBuilder,Mono.CodeGeneration.CodeItem)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: op_Addition(CodeBuilder, CodeItem)
  nameWithType: CodeBuilder.op_Addition(CodeBuilder, CodeItem)
  fullName: Mono.CodeGeneration.CodeBuilder.op_Addition(CodeBuilder, CodeItem)
- uid: Mono.CodeGeneration.CodeBuilder
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeBuilder
  nameWithType: CodeBuilder
  fullName: Mono.CodeGeneration.CodeBuilder
- uid: Mono.CodeGeneration.CodeItem
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeItem
  nameWithType: CodeItem
  fullName: Mono.CodeGeneration.CodeItem
- uid: Mono.CodeGeneration.CodeBuilder.OwnerClass
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: OwnerClass
  nameWithType: CodeBuilder.OwnerClass
  fullName: Mono.CodeGeneration.CodeBuilder.OwnerClass
- uid: Mono.CodeGeneration.CodeBuilder.PrintCode
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: PrintCode()
  nameWithType: CodeBuilder.PrintCode()
  fullName: Mono.CodeGeneration.CodeBuilder.PrintCode()
- uid: Mono.CodeGeneration.CodeBuilder.PrintCode(Mono.CodeGeneration.CodeWriter)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: PrintCode(CodeWriter)
  nameWithType: CodeBuilder.PrintCode(CodeWriter)
  fullName: Mono.CodeGeneration.CodeBuilder.PrintCode(CodeWriter)
- uid: Mono.CodeGeneration.CodeWriter
  parent: Mono.CodeGeneration
  isExternal: false
  name: CodeWriter
  nameWithType: CodeWriter
  fullName: Mono.CodeGeneration.CodeWriter
- uid: Mono.CodeGeneration.CodeBuilder.Return
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Return()
  nameWithType: CodeBuilder.Return()
  fullName: Mono.CodeGeneration.CodeBuilder.Return()
- uid: Mono.CodeGeneration.CodeBuilder.Return(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Return(CodeExpression)
  nameWithType: CodeBuilder.Return(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.Return(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.Select
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Select()
  nameWithType: CodeBuilder.Select()
  fullName: Mono.CodeGeneration.CodeBuilder.Select()
- uid: Mono.CodeGeneration.CodeBuilder.When(Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression,Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: When(CodeExpression, CodeExpression, CodeExpression)
  nameWithType: CodeBuilder.When(CodeExpression, CodeExpression, CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.When(CodeExpression, CodeExpression, CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.While(Mono.CodeGeneration.CodeExpression)
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: While(CodeExpression)
  nameWithType: CodeBuilder.While(CodeExpression)
  fullName: Mono.CodeGeneration.CodeBuilder.While(CodeExpression)
- uid: Mono.CodeGeneration.CodeBuilder.#ctor*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CodeBuilder
  nameWithType: CodeBuilder.CodeBuilder
  fullName: Mono.CodeGeneration.CodeBuilder.CodeBuilder
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Assign*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Assign
  nameWithType: CodeBuilder.Assign
  fullName: Mono.CodeGeneration.CodeBuilder.Assign
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Call*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Call
  nameWithType: CodeBuilder.Call
  fullName: Mono.CodeGeneration.CodeBuilder.Call
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CallFunc*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CallFunc
  nameWithType: CodeBuilder.CallFunc
  fullName: Mono.CodeGeneration.CodeBuilder.CallFunc
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Case*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Case
  nameWithType: CodeBuilder.Case
  fullName: Mono.CodeGeneration.CodeBuilder.Case
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: ConsoleWriteLine
  nameWithType: CodeBuilder.ConsoleWriteLine
  fullName: Mono.CodeGeneration.CodeBuilder.ConsoleWriteLine
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.CurrentBlock*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: CurrentBlock
  nameWithType: CodeBuilder.CurrentBlock
  fullName: Mono.CodeGeneration.CodeBuilder.CurrentBlock
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Dec*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Dec
  nameWithType: CodeBuilder.Dec
  fullName: Mono.CodeGeneration.CodeBuilder.Dec
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.DeclareVariable*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: DeclareVariable
  nameWithType: CodeBuilder.DeclareVariable
  fullName: Mono.CodeGeneration.CodeBuilder.DeclareVariable
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Else*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Else
  nameWithType: CodeBuilder.Else
  fullName: Mono.CodeGeneration.CodeBuilder.Else
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.ElseIf*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: ElseIf
  nameWithType: CodeBuilder.ElseIf
  fullName: Mono.CodeGeneration.CodeBuilder.ElseIf
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndFor*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndFor
  nameWithType: CodeBuilder.EndFor
  fullName: Mono.CodeGeneration.CodeBuilder.EndFor
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndForeach*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndForeach
  nameWithType: CodeBuilder.EndForeach
  fullName: Mono.CodeGeneration.CodeBuilder.EndForeach
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndIf*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndIf
  nameWithType: CodeBuilder.EndIf
  fullName: Mono.CodeGeneration.CodeBuilder.EndIf
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndSelect*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndSelect
  nameWithType: CodeBuilder.EndSelect
  fullName: Mono.CodeGeneration.CodeBuilder.EndSelect
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.EndWhile*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: EndWhile
  nameWithType: CodeBuilder.EndWhile
  fullName: Mono.CodeGeneration.CodeBuilder.EndWhile
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.For*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: For
  nameWithType: CodeBuilder.For
  fullName: Mono.CodeGeneration.CodeBuilder.For
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Foreach*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Foreach
  nameWithType: CodeBuilder.Foreach
  fullName: Mono.CodeGeneration.CodeBuilder.Foreach
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Generate*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Generate
  nameWithType: CodeBuilder.Generate
  fullName: Mono.CodeGeneration.CodeBuilder.Generate
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.If*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: If
  nameWithType: CodeBuilder.If
  fullName: Mono.CodeGeneration.CodeBuilder.If
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Inc*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Inc
  nameWithType: CodeBuilder.Inc
  fullName: Mono.CodeGeneration.CodeBuilder.Inc
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.op_Addition*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: op_Addition
  nameWithType: CodeBuilder.op_Addition
  fullName: Mono.CodeGeneration.CodeBuilder.op_Addition
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.OwnerClass*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: OwnerClass
  nameWithType: CodeBuilder.OwnerClass
  fullName: Mono.CodeGeneration.CodeBuilder.OwnerClass
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.PrintCode*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: PrintCode
  nameWithType: CodeBuilder.PrintCode
  fullName: Mono.CodeGeneration.CodeBuilder.PrintCode
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Return*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Return
  nameWithType: CodeBuilder.Return
  fullName: Mono.CodeGeneration.CodeBuilder.Return
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.Select*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: Select
  nameWithType: CodeBuilder.Select
  fullName: Mono.CodeGeneration.CodeBuilder.Select
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.When*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: When
  nameWithType: CodeBuilder.When
  fullName: Mono.CodeGeneration.CodeBuilder.When
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
- uid: Mono.CodeGeneration.CodeBuilder.While*
  parent: Mono.CodeGeneration.CodeBuilder
  isExternal: false
  name: While
  nameWithType: CodeBuilder.While
  fullName: Mono.CodeGeneration.CodeBuilder.While
  monikers:
  - xamarinandroid-7.1
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Mono.CodeGeneration/CodeBuilder.xml
