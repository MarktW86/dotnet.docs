### YamlMime:ManagedReference
items:
- uid: System.Reflection.PortableExecutable.PEHeaders
  commentId: T:System.Reflection.PortableExecutable.PEHeaders
  id: PEHeaders
  children:
  - System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)
  - System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)
  - System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)
  - System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  - System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  - System.Reflection.PortableExecutable.PEHeaders.CorHeader
  - System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  - System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)
  - System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  - System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  - System.Reflection.PortableExecutable.PEHeaders.IsDll
  - System.Reflection.PortableExecutable.PEHeaders.IsExe
  - System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  - System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  - System.Reflection.PortableExecutable.PEHeaders.PEHeader
  - System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  - System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  - System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)
  langs:
  - csharp
  name: PEHeaders
  nameWithType: PEHeaders
  fullName: System.Reflection.PortableExecutable.PEHeaders
  type: Class
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public sealed class PEHeaders
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)
  commentId: M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: PEHeaders(Stream)
  nameWithType: PEHeaders.PEHeaders(Stream)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public PEHeaders (System.IO.Stream peStream);
    parameters:
    - id: peStream
      type: System.IO.Stream
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)
  commentId: M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: PEHeaders(Stream, Int32)
  nameWithType: PEHeaders.PEHeaders(Stream, Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream, Int32)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public PEHeaders (System.IO.Stream peStream, int size);
    parameters:
    - id: peStream
      type: System.IO.Stream
      description: To be added.
    - id: size
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)
  commentId: M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Int32,System.Boolean)'
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: PEHeaders(Stream, Int32, Boolean)
  nameWithType: PEHeaders.PEHeaders(Stream, Int32, Boolean)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream, Int32, Boolean)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public PEHeaders (System.IO.Stream peStream, int size, bool isLoadedImage);
    parameters:
    - id: peStream
      type: System.IO.Stream
      description: To be added.
    - id: size
      type: System.Int32
      description: To be added.
    - id: isLoadedImage
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.#ctor*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  id: CoffHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: CoffHeader
  nameWithType: PEHeaders.CoffHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public System.Reflection.PortableExecutable.CoffHeader CoffHeader { get; }
    return:
      type: System.Reflection.PortableExecutable.CoffHeader
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.CoffHeader*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  id: CoffHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: CoffHeaderStartOffset
  nameWithType: PEHeaders.CoffHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int CoffHeaderStartOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeader
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.CorHeader
  id: CorHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: CorHeader
  nameWithType: PEHeaders.CorHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeader
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public System.Reflection.PortableExecutable.CorHeader CorHeader { get; }
    return:
      type: System.Reflection.PortableExecutable.CorHeader
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.CorHeader*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  id: CorHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: CorHeaderStartOffset
  nameWithType: PEHeaders.CorHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int CorHeaderStartOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)
  commentId: M:System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)
  id: GetContainingSectionIndex(System.Int32)
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: GetContainingSectionIndex(Int32)
  nameWithType: PEHeaders.GetContainingSectionIndex(Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int GetContainingSectionIndex (int relativeVirtualAddress);
    parameters:
    - id: relativeVirtualAddress
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  id: IsCoffOnly
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: IsCoffOnly
  nameWithType: PEHeaders.IsCoffOnly
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public bool IsCoffOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  id: IsConsoleApplication
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: IsConsoleApplication
  nameWithType: PEHeaders.IsConsoleApplication
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public bool IsConsoleApplication { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsDll
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.IsDll
  id: IsDll
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: IsDll
  nameWithType: PEHeaders.IsDll
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsDll
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public bool IsDll { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.IsDll*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsExe
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.IsExe
  id: IsExe
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: IsExe
  nameWithType: PEHeaders.IsExe
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsExe
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public bool IsExe { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.IsExe*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  id: MetadataSize
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: MetadataSize
  nameWithType: PEHeaders.MetadataSize
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int MetadataSize { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.MetadataSize*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  id: MetadataStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: MetadataStartOffset
  nameWithType: PEHeaders.MetadataStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int MetadataStartOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeader
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.PEHeader
  id: PEHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: PEHeader
  nameWithType: PEHeaders.PEHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeader
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public System.Reflection.PortableExecutable.PEHeader PEHeader { get; }
    return:
      type: System.Reflection.PortableExecutable.PEHeader
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.PEHeader*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  id: PEHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: PEHeaderStartOffset
  nameWithType: PEHeaders.PEHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int PEHeaderStartOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  commentId: P:System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  id: SectionHeaders
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: SectionHeaders
  nameWithType: PEHeaders.SectionHeaders
  fullName: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public System.Collections.Immutable.ImmutableArray<System.Reflection.PortableExecutable.SectionHeader> SectionHeaders { get; }
    return:
      type: System.Collections.Immutable.ImmutableArray{System.Reflection.PortableExecutable.SectionHeader}
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)
  commentId: M:System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)
  id: TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)
  parent: System.Reflection.PortableExecutable.PEHeaders
  langs:
  - csharp
  name: TryGetDirectoryOffset(DirectoryEntry, Int32)
  nameWithType: PEHeaders.TryGetDirectoryOffset(DirectoryEntry, Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(DirectoryEntry, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public bool TryGetDirectoryOffset (System.Reflection.PortableExecutable.DirectoryEntry directory, out int offset);
    parameters:
    - id: directory
      type: System.Reflection.PortableExecutable.DirectoryEntry
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaders(Stream)
  nameWithType: PEHeaders.PEHeaders(Stream)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaders(Stream, Int32)
  nameWithType: PEHeaders.PEHeaders(Stream, Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaders(Stream, Int32, Boolean)
  nameWithType: PEHeaders.PEHeaders(Stream, Int32, Boolean)
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders(Stream, Int32, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CoffHeader
  nameWithType: PEHeaders.CoffHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeader
- uid: System.Reflection.PortableExecutable.CoffHeader
  parent: System.Reflection.PortableExecutable
  isExternal: false
  name: CoffHeader
  nameWithType: CoffHeader
  fullName: System.Reflection.PortableExecutable.CoffHeader
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CoffHeaderStartOffset
  nameWithType: PEHeaders.CoffHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CorHeader
  nameWithType: PEHeaders.CorHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeader
- uid: System.Reflection.PortableExecutable.CorHeader
  parent: System.Reflection.PortableExecutable
  isExternal: false
  name: CorHeader
  nameWithType: CorHeader
  fullName: System.Reflection.PortableExecutable.CorHeader
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CorHeaderStartOffset
  nameWithType: PEHeaders.CorHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
- uid: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: GetContainingSectionIndex(Int32)
  nameWithType: PEHeaders.GetContainingSectionIndex(Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(Int32)
- uid: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsCoffOnly
  nameWithType: PEHeaders.IsCoffOnly
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
- uid: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsConsoleApplication
  nameWithType: PEHeaders.IsConsoleApplication
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
- uid: System.Reflection.PortableExecutable.PEHeaders.IsDll
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsDll
  nameWithType: PEHeaders.IsDll
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsDll
- uid: System.Reflection.PortableExecutable.PEHeaders.IsExe
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsExe
  nameWithType: PEHeaders.IsExe
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsExe
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: MetadataSize
  nameWithType: PEHeaders.MetadataSize
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataSize
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: MetadataStartOffset
  nameWithType: PEHeaders.MetadataStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeader
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeader
  nameWithType: PEHeaders.PEHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeader
- uid: System.Reflection.PortableExecutable.PEHeader
  parent: System.Reflection.PortableExecutable
  isExternal: false
  name: PEHeader
  nameWithType: PEHeader
  fullName: System.Reflection.PortableExecutable.PEHeader
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaderStartOffset
  nameWithType: PEHeaders.PEHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
- uid: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: SectionHeaders
  nameWithType: PEHeaders.SectionHeaders
  fullName: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
- uid: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
- uid: System.Reflection.PortableExecutable.SectionHeader
  name: SectionHeader
  nameWithType: SectionHeader
  fullName: System.Reflection.PortableExecutable.SectionHeader
- uid: System.Collections.Immutable.ImmutableArray{System.Reflection.PortableExecutable.SectionHeader}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableArray<SectionHeader>
  nameWithType: ImmutableArray<SectionHeader>
  fullName: System.Collections.Immutable.ImmutableArray<System.Reflection.PortableExecutable.SectionHeader>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.PortableExecutable.SectionHeader
    name: SectionHeader
    nameWithType: SectionHeader
    fullName: System.Reflection.PortableExecutable.SectionHeader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: TryGetDirectoryOffset(DirectoryEntry, Int32)
  nameWithType: PEHeaders.TryGetDirectoryOffset(DirectoryEntry, Int32)
  fullName: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(DirectoryEntry, Int32)
- uid: System.Reflection.PortableExecutable.DirectoryEntry
  parent: System.Reflection.PortableExecutable
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.PEHeaders.#ctor*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaders
  nameWithType: PEHeaders.PEHeaders
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaders
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeader*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CoffHeader
  nameWithType: PEHeaders.CoffHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeader
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CoffHeaderStartOffset
  nameWithType: PEHeaders.CoffHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeader*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CorHeader
  nameWithType: PEHeaders.CorHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeader
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: CorHeaderStartOffset
  nameWithType: PEHeaders.CorHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: GetContainingSectionIndex
  nameWithType: PEHeaders.GetContainingSectionIndex
  fullName: System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsCoffOnly
  nameWithType: PEHeaders.IsCoffOnly
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsConsoleApplication
  nameWithType: PEHeaders.IsConsoleApplication
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsDll*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsDll
  nameWithType: PEHeaders.IsDll
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsDll
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.IsExe*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: IsExe
  nameWithType: PEHeaders.IsExe
  fullName: System.Reflection.PortableExecutable.PEHeaders.IsExe
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataSize*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: MetadataSize
  nameWithType: PEHeaders.MetadataSize
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataSize
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: MetadataStartOffset
  nameWithType: PEHeaders.MetadataStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeader*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeader
  nameWithType: PEHeaders.PEHeader
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeader
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: PEHeaderStartOffset
  nameWithType: PEHeaders.PEHeaderStartOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: SectionHeaders
  nameWithType: PEHeaders.SectionHeaders
  fullName: System.Reflection.PortableExecutable.PEHeaders.SectionHeaders
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
- uid: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset*
  parent: System.Reflection.PortableExecutable.PEHeaders
  isExternal: false
  name: TryGetDirectoryOffset
  nameWithType: PEHeaders.TryGetDirectoryOffset
  fullName: System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.PortableExecutable/PEHeaders.xml
