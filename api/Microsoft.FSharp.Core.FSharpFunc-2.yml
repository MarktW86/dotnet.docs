### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  commentId: T:Microsoft.FSharp.Core.FSharpFunc`2
  id: FSharpFunc`2
  children:
  - Microsoft.FSharp.Core.FSharpFunc`2.#ctor
  - Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  - Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  - Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  - Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  - Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  - Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  langs:
  - csharp
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AbstractClass]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      public abstract class FSharpFunc<T,TResult>
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult
      description: To be added.
  inheritance:
  - System.Object
  derivedClasses:
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5
  - Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AbstractClassAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.#ctor
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor
  id: '#ctor'
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: FSharpFunc<T,TResult>()
  nameWithType: FSharpFunc<T,TResult>.FSharpFunc<T,TResult>()
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FSharpFunc<T,TResult>()
  type: Constructor
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public FSharpFunc ();
    parameters: []
  overload: Microsoft.FSharp.Core.FSharpFunc`2.#ctor*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  id: FromConverter(System.Converter{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: FromConverter(Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Microsoft.FSharp.Core.FSharpFunc<T,TResult> FromConverter (Converter<T,TResult> converter);
    parameters:
    - id: converter
      type: System.Converter{T,TResult}
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.FromConverter*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)
  id: Invoke(`0)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: Invoke(T)
  nameWithType: FSharpFunc<T,TResult>.Invoke(T)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.Invoke(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public abstract TResult Invoke (T func);
    parameters:
    - id: func
      type: T
      description: To be added.
    return:
      type: TResult
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.Invoke*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  id: InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Y InvokeFast<V,W,X,Y> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,Microsoft.FSharp.Core.FSharpFunc<W,Microsoft.FSharp.Core.FSharpFunc<X,Y>>>>> func, T arg1, TResult arg2, V arg3, W arg4, X arg5);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,Microsoft.FSharp.Core.FSharpFunc{W,Microsoft.FSharp.Core.FSharpFunc{X,Y}}}}}
      description: To be added.
    - id: arg1
      type: T
      description: To be added.
    - id: arg2
      type: TResult
      description: To be added.
    - id: arg3
      type: V
      description: To be added.
    - id: arg4
      type: W
      description: To be added.
    - id: arg5
      type: X
      description: To be added.
    return:
      type: Y
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  id: InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static X InvokeFast<V,W,X> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,Microsoft.FSharp.Core.FSharpFunc<W,X>>>> func, T arg1, TResult arg2, V arg3, W arg4);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,Microsoft.FSharp.Core.FSharpFunc{W,X}}}}
      description: To be added.
    - id: arg1
      type: T
      description: To be added.
    - id: arg2
      type: TResult
      description: To be added.
    - id: arg3
      type: V
      description: To be added.
    - id: arg4
      type: W
      description: To be added.
    return:
      type: X
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  id: InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static W InvokeFast<V,W> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,W>>> func, T arg1, TResult arg2, V arg3);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,W}}}
      description: To be added.
    - id: arg1
      type: T
      description: To be added.
    - id: arg2
      type: TResult
      description: To be added.
    - id: arg3
      type: V
      description: To be added.
    return:
      type: W
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  id: InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static V InvokeFast<V> (Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,V>> func, T arg1, TResult arg2);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,V}}
      description: To be added.
    - id: arg1
      type: T
      description: To be added.
    - id: arg2
      type: TResult
      description: To be added.
    return:
      type: V
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{`0,`1})~System.Converter{`0,`1}
  id: op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Converter<T,TResult> op_Implicit (Microsoft.FSharp.Core.FSharpFunc<T,TResult> func);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    return:
      type: System.Converter{T,TResult}
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{`0,`1})~Microsoft.FSharp.Core.FSharpFunc{`0,`1}
  id: op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  type: Operator
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Microsoft.FSharp.Core.FSharpFunc<T,TResult> op_Implicit (Converter<T,TResult> converter);
    parameters:
    - id: converter
      type: System.Converter{T,TResult}
      description: To be added.
    return:
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  commentId: M:Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  id: ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  langs:
  - csharp
  name: ToConverter(FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: public static Converter<T,TResult> ToConverter (Microsoft.FSharp.Core.FSharpFunc<T,TResult> func);
    parameters:
    - id: func
      type: Microsoft.FSharp.Core.FSharpFunc`2
      description: To be added.
    return:
      type: System.Converter{T,TResult}
      description: To be added.
  overload: Microsoft.FSharp.Core.FSharpFunc`2.ToConverter*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.FSharpFunc`2.#ctor
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: FSharpFunc<T,TResult>()
  nameWithType: FSharpFunc<T,TResult>.FSharpFunc<T,TResult>()
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FSharpFunc<T,TResult>()
- uid: Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: FromConverter(Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FromConverter(Converter<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: System.Converter`2
  name: Converter<TInput,TOutput>
  nameWithType: Converter<TInput,TOutput>
  fullName: System.Converter<TInput,TOutput>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Converter{T,TResult}
  parent: System
  isExternal: false
  name: Converter<T,TResult>
  nameWithType: Converter<T,TResult>
  fullName: System.Converter<T,TResult>
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: Invoke(T)
  nameWithType: FSharpFunc<T,TResult>.Invoke(T)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.Invoke(T)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>, T, TResult, V, W, X)
- uid: Y
  isExternal: true
  name: Y
  nameWithType: Y
  fullName: Y
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: W
  name: W
  nameWithType: W
  fullName: W
- uid: X
  name: X
  nameWithType: X
  fullName: X
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,Microsoft.FSharp.Core.FSharpFunc{W,Microsoft.FSharp.Core.FSharpFunc{X,Y}}}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>
  nameWithType: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,FSharpFunc<X,Y>>>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,Microsoft.FSharp.Core.FSharpFunc<W,Microsoft.FSharp.Core.FSharpFunc<X,Y>>>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: V
    name: V
    nameWithType: V
    fullName: V
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: W
    name: W
    nameWithType: W
    fullName: W
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: X
    name: X
    nameWithType: X
    fullName: X
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Y
    name: Y
    nameWithType: Y
    fullName: Y
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>, T, TResult, V, W)
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,Microsoft.FSharp.Core.FSharpFunc{W,X}}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>
  nameWithType: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,FSharpFunc<W,X>>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,Microsoft.FSharp.Core.FSharpFunc<W,X>>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: V
    name: V
    nameWithType: V
    fullName: V
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: W
    name: W
    nameWithType: W
    fullName: W
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: X
    name: X
    nameWithType: X
    fullName: X
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W>(FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>, T, TResult, V)
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,Microsoft.FSharp.Core.FSharpFunc{V,W}}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>
  nameWithType: FSharpFunc<T,FSharpFunc<TResult,FSharpFunc<V,W>>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,Microsoft.FSharp.Core.FSharpFunc<V,W>>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: V
    name: V
    nameWithType: V
    fullName: V
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: W
    name: W
    nameWithType: W
    fullName: W
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V>(FSharpFunc<T,FSharpFunc<TResult,V>>, T, TResult)
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Core.FSharpFunc{TResult,V}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpFunc<TResult,V>>
  nameWithType: FSharpFunc<T,FSharpFunc<TResult,V>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Core.FSharpFunc<TResult,V>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: V
    name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{T,TResult} to System.Converter{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.op_Implicit(FSharpFunc<T,TResult> to Converter<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{T,TResult} to Microsoft.FSharp.Core.FSharpFunc{T,TResult})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.op_Implicit(Converter<T,TResult> to FSharpFunc<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: ToConverter(FSharpFunc<T,TResult>)
  nameWithType: FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.ToConverter(FSharpFunc<T,TResult>)
- uid: Microsoft.FSharp.Core.FSharpFunc`2.#ctor*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>.FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FSharpFunc<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.FromConverter*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: FromConverter
  nameWithType: FSharpFunc<T,TResult>.FromConverter
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.FromConverter
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.Invoke*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: Invoke
  nameWithType: FSharpFunc<T,TResult>.Invoke
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.Invoke
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X,Y>
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X,Y>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W,X>
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W,X>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W,X>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V,W>
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V,W>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V,W>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: InvokeFast<V>
  nameWithType: FSharpFunc<T,TResult>.InvokeFast<V>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.InvokeFast<V>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: op_Implicit
  nameWithType: FSharpFunc<T,TResult>.op_Implicit
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.op_Implicit
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
- uid: Microsoft.FSharp.Core.FSharpFunc`2.ToConverter*
  parent: Microsoft.FSharp.Core.FSharpFunc`2
  isExternal: false
  name: ToConverter
  nameWithType: FSharpFunc<T,TResult>.ToConverter
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>.ToConverter
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/FSharpFunc`2.xml
