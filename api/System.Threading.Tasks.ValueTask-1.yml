### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  id: ValueTask`1
  children:
  - System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})
  - System.Threading.Tasks.ValueTask`1.#ctor(`0)
  - System.Threading.Tasks.ValueTask`1.AsTask
  - System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)
  - System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder
  - System.Threading.Tasks.ValueTask`1.Equals(System.Object)
  - System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})
  - System.Threading.Tasks.ValueTask`1.GetAwaiter
  - System.Threading.Tasks.ValueTask`1.GetHashCode
  - System.Threading.Tasks.ValueTask`1.IsCanceled
  - System.Threading.Tasks.ValueTask`1.IsCompleted
  - System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully
  - System.Threading.Tasks.ValueTask`1.IsFaulted
  - System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  - System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  - System.Threading.Tasks.ValueTask`1.Result
  - System.Threading.Tasks.ValueTask`1.ToString
  langs:
  - csharp
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  type: Struct
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: 'public struct ValueTask<TResult> : IEquatable<System.Threading.Tasks.ValueTask<TResult>>'
    typeParameters:
    - id: TResult
      description: To be added.
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable{System.Threading.Tasks.ValueTask{TResult}}
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})
  commentId: M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})
  id: '#ctor(System.Threading.Tasks.Task{`0})'
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: ValueTask<TResult>(Task<TResult>)
  nameWithType: ValueTask<TResult>.ValueTask<TResult>(Task<TResult>)
  fullName: ValueTask<TResult>.ValueTask<TResult>(Task<TResult>)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public ValueTask (System.Threading.Tasks.Task<TResult> task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task`1
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.#ctor(`0)
  commentId: M:System.Threading.Tasks.ValueTask`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: ValueTask<TResult>(TResult)
  nameWithType: ValueTask<TResult>.ValueTask<TResult>(TResult)
  fullName: ValueTask<TResult>.ValueTask<TResult>(TResult)
  type: Constructor
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public ValueTask (TResult result);
    parameters:
    - id: result
      type: TResult
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.AsTask
  commentId: M:System.Threading.Tasks.ValueTask`1.AsTask
  id: AsTask
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: AsTask()
  nameWithType: ValueTask<TResult>.AsTask()
  fullName: ValueTask<TResult>.AsTask()
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TResult> AsTask ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task`1
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.AsTask*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)
  commentId: M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)
  id: ConfigureAwait(System.Boolean)
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: ConfigureAwait(Boolean)
  nameWithType: ValueTask<TResult>.ConfigureAwait(Boolean)
  fullName: ValueTask<TResult>.ConfigureAwait(Boolean)
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable<TResult> ConfigureAwait (bool continueOnCapturedContext);
    parameters:
    - id: continueOnCapturedContext
      type: System.Boolean
      description: To be added.
    return:
      type: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.ConfigureAwait*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder
  commentId: M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder
  id: CreateAsyncMethodBuilder
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: CreateAsyncMethodBuilder()
  nameWithType: ValueTask<TResult>.CreateAsyncMethodBuilder()
  fullName: ValueTask<TResult>.CreateAsyncMethodBuilder()
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TResult> CreateAsyncMethodBuilder ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder*
  exceptions: []
  attributes: []
  version:
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.Equals(System.Object)
  commentId: M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueTask<TResult>.Equals(Object)
  fullName: ValueTask<TResult>.Equals(Object)
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})
  commentId: M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})
  id: Equals(System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: Equals(ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.Equals(ValueTask<TResult>)
  fullName: ValueTask<TResult>.Equals(ValueTask<TResult>)
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public bool Equals (System.Threading.Tasks.ValueTask<TResult> other);
    parameters:
    - id: other
      type: System.Threading.Tasks.ValueTask`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.GetAwaiter
  commentId: M:System.Threading.Tasks.ValueTask`1.GetAwaiter
  id: GetAwaiter
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: GetAwaiter()
  nameWithType: ValueTask<TResult>.GetAwaiter()
  fullName: ValueTask<TResult>.GetAwaiter()
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Runtime.CompilerServices.ValueTaskAwaiter<TResult> GetAwaiter ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.ValueTaskAwaiter`1
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.GetAwaiter*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.GetHashCode
  commentId: M:System.Threading.Tasks.ValueTask`1.GetHashCode
  id: GetHashCode
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueTask<TResult>.GetHashCode()
  fullName: ValueTask<TResult>.GetHashCode()
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCanceled
  commentId: P:System.Threading.Tasks.ValueTask`1.IsCanceled
  id: IsCanceled
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: IsCanceled
  nameWithType: ValueTask<TResult>.IsCanceled
  fullName: ValueTask<TResult>.IsCanceled
  type: Property
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public bool IsCanceled { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.IsCanceled*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCompleted
  commentId: P:System.Threading.Tasks.ValueTask`1.IsCompleted
  id: IsCompleted
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: IsCompleted
  nameWithType: ValueTask<TResult>.IsCompleted
  fullName: ValueTask<TResult>.IsCompleted
  type: Property
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.IsCompleted*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully
  commentId: P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully
  id: IsCompletedSuccessfully
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: IsCompletedSuccessfully
  nameWithType: ValueTask<TResult>.IsCompletedSuccessfully
  fullName: ValueTask<TResult>.IsCompletedSuccessfully
  type: Property
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public bool IsCompletedSuccessfully { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsFaulted
  commentId: P:System.Threading.Tasks.ValueTask`1.IsFaulted
  id: IsFaulted
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: IsFaulted
  nameWithType: ValueTask<TResult>.IsFaulted
  fullName: ValueTask<TResult>.IsFaulted
  type: Property
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public bool IsFaulted { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.IsFaulted*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  commentId: M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  id: op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: op_Equality(ValueTask<TResult>, ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.op_Equality(ValueTask<TResult>, ValueTask<TResult>)
  fullName: ValueTask<TResult>.op_Equality(ValueTask<TResult>, ValueTask<TResult>)
  type: Operator
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public static bool op_Equality (System.Threading.Tasks.ValueTask<TResult> left, System.Threading.Tasks.ValueTask<TResult> right);
    parameters:
    - id: left
      type: System.Threading.Tasks.ValueTask`1
      description: To be added.
    - id: right
      type: System.Threading.Tasks.ValueTask`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  commentId: M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  id: op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
  fullName: ValueTask<TResult>.op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
  type: Operator
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public static bool op_Inequality (System.Threading.Tasks.ValueTask<TResult> left, System.Threading.Tasks.ValueTask<TResult> right);
    parameters:
    - id: left
      type: System.Threading.Tasks.ValueTask`1
      description: To be added.
    - id: right
      type: System.Threading.Tasks.ValueTask`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.Result
  commentId: P:System.Threading.Tasks.ValueTask`1.Result
  id: Result
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: Result
  nameWithType: ValueTask<TResult>.Result
  fullName: ValueTask<TResult>.Result
  type: Property
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public TResult Result { get; }
    return:
      type: TResult
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.Result*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.ToString
  commentId: M:System.Threading.Tasks.ValueTask`1.ToString
  id: ToString
  parent: System.Threading.Tasks.ValueTask`1
  langs:
  - csharp
  name: ToString()
  nameWithType: ValueTask<TResult>.ToString()
  fullName: ValueTask<TResult>.ToString()
  type: Method
  assemblies:
  - System.Threading.Tasks.Extensions
  namespace: System.Threading.Tasks
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Threading.Tasks.ValueTask`1.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ValueTask<TResult>(Task<TResult>)
  nameWithType: ValueTask<TResult>.ValueTask<TResult>(Task<TResult>)
  fullName: ValueTask<TResult>.ValueTask<TResult>(Task<TResult>)
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.ValueTask`1.#ctor(`0)
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ValueTask<TResult>(TResult)
  nameWithType: ValueTask<TResult>.ValueTask<TResult>(TResult)
  fullName: ValueTask<TResult>.ValueTask<TResult>(TResult)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Threading.Tasks.ValueTask`1.AsTask
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: AsTask()
  nameWithType: ValueTask<TResult>.AsTask()
  fullName: ValueTask<TResult>.AsTask()
- uid: System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ConfigureAwait(Boolean)
  nameWithType: ValueTask<TResult>.ConfigureAwait(Boolean)
  fullName: ValueTask<TResult>.ConfigureAwait(Boolean)
- uid: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: ConfiguredValueTaskAwaitable<TResult>
  nameWithType: ConfiguredValueTaskAwaitable<TResult>
  fullName: System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable<TResult>
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: CreateAsyncMethodBuilder()
  nameWithType: ValueTask<TResult>.CreateAsyncMethodBuilder()
  fullName: ValueTask<TResult>.CreateAsyncMethodBuilder()
- uid: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: AsyncValueTaskMethodBuilder<TResult>
  nameWithType: AsyncValueTaskMethodBuilder<TResult>
  fullName: System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder<TResult>
- uid: System.Threading.Tasks.ValueTask`1.Equals(System.Object)
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueTask<TResult>.Equals(Object)
  fullName: ValueTask<TResult>.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: Equals(ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.Equals(ValueTask<TResult>)
  fullName: ValueTask<TResult>.Equals(ValueTask<TResult>)
- uid: System.Threading.Tasks.ValueTask`1
  parent: System.Threading.Tasks
  isExternal: false
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
- uid: System.Threading.Tasks.ValueTask`1.GetAwaiter
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: GetAwaiter()
  nameWithType: ValueTask<TResult>.GetAwaiter()
  fullName: ValueTask<TResult>.GetAwaiter()
- uid: System.Runtime.CompilerServices.ValueTaskAwaiter`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: ValueTaskAwaiter<TResult>
  nameWithType: ValueTaskAwaiter<TResult>
  fullName: System.Runtime.CompilerServices.ValueTaskAwaiter<TResult>
- uid: System.Threading.Tasks.ValueTask`1.GetHashCode
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueTask<TResult>.GetHashCode()
  fullName: ValueTask<TResult>.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ValueTask`1.IsCanceled
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCanceled
  nameWithType: ValueTask<TResult>.IsCanceled
  fullName: ValueTask<TResult>.IsCanceled
- uid: System.Threading.Tasks.ValueTask`1.IsCompleted
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCompleted
  nameWithType: ValueTask<TResult>.IsCompleted
  fullName: ValueTask<TResult>.IsCompleted
- uid: System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCompletedSuccessfully
  nameWithType: ValueTask<TResult>.IsCompletedSuccessfully
  fullName: ValueTask<TResult>.IsCompletedSuccessfully
- uid: System.Threading.Tasks.ValueTask`1.IsFaulted
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsFaulted
  nameWithType: ValueTask<TResult>.IsFaulted
  fullName: ValueTask<TResult>.IsFaulted
- uid: System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: op_Equality(ValueTask<TResult>, ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.op_Equality(ValueTask<TResult>, ValueTask<TResult>)
  fullName: ValueTask<TResult>.op_Equality(ValueTask<TResult>, ValueTask<TResult>)
- uid: System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
  nameWithType: ValueTask<TResult>.op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
  fullName: ValueTask<TResult>.op_Inequality(ValueTask<TResult>, ValueTask<TResult>)
- uid: System.Threading.Tasks.ValueTask`1.Result
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: Result
  nameWithType: ValueTask<TResult>.Result
  fullName: ValueTask<TResult>.Result
- uid: System.Threading.Tasks.ValueTask`1.ToString
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ToString()
  nameWithType: ValueTask<TResult>.ToString()
  fullName: ValueTask<TResult>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.ValueTask`1.#ctor*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>.ValueTask<TResult>
  fullName: ValueTask<TResult>.ValueTask<TResult>
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.AsTask*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: AsTask
  nameWithType: ValueTask<TResult>.AsTask
  fullName: ValueTask<TResult>.AsTask
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.ConfigureAwait*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ConfigureAwait
  nameWithType: ValueTask<TResult>.ConfigureAwait
  fullName: ValueTask<TResult>.ConfigureAwait
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: CreateAsyncMethodBuilder
  nameWithType: ValueTask<TResult>.CreateAsyncMethodBuilder
  fullName: ValueTask<TResult>.CreateAsyncMethodBuilder
  monikers:
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.Equals*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: Equals
  nameWithType: ValueTask<TResult>.Equals
  fullName: ValueTask<TResult>.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.GetAwaiter*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: GetAwaiter
  nameWithType: ValueTask<TResult>.GetAwaiter
  fullName: ValueTask<TResult>.GetAwaiter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.GetHashCode*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: GetHashCode
  nameWithType: ValueTask<TResult>.GetHashCode
  fullName: ValueTask<TResult>.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCanceled*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCanceled
  nameWithType: ValueTask<TResult>.IsCanceled
  fullName: ValueTask<TResult>.IsCanceled
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCompleted*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCompleted
  nameWithType: ValueTask<TResult>.IsCompleted
  fullName: ValueTask<TResult>.IsCompleted
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsCompletedSuccessfully
  nameWithType: ValueTask<TResult>.IsCompletedSuccessfully
  fullName: ValueTask<TResult>.IsCompletedSuccessfully
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.IsFaulted*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: IsFaulted
  nameWithType: ValueTask<TResult>.IsFaulted
  fullName: ValueTask<TResult>.IsFaulted
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.op_Equality*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: op_Equality
  nameWithType: ValueTask<TResult>.op_Equality
  fullName: ValueTask<TResult>.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.op_Inequality*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: op_Inequality
  nameWithType: ValueTask<TResult>.op_Inequality
  fullName: ValueTask<TResult>.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.Result*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: Result
  nameWithType: ValueTask<TResult>.Result
  fullName: ValueTask<TResult>.Result
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.Threading.Tasks.ValueTask`1.ToString*
  parent: System.Threading.Tasks.ValueTask`1
  isExternal: false
  name: ToString
  nameWithType: ValueTask<TResult>.ToString
  fullName: ValueTask<TResult>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading.Tasks/ValueTask`1.xml
- uid: System.IEquatable`1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
- uid: System.IEquatable{System.Threading.Tasks.ValueTask{TResult}}
  parent: System
  isExternal: false
  name: IEquatable<ValueTask<TResult>>
  nameWithType: IEquatable<ValueTask<TResult>>
  fullName: System.IEquatable<System.Threading.Tasks.ValueTask<TResult>>
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
