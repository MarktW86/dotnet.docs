### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder
  commentId: T:Microsoft.FSharp.Control.FSharpAsyncBuilder
  id: FSharpAsyncBuilder
  children:
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero
  langs:
  - csharp
  name: FSharpAsyncBuilder
  nameWithType: FSharpAsyncBuilder
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)]

      [Microsoft.FSharp.Core.CompiledName("FSharpAsyncBuilder")]

      [Microsoft.FSharp.Core.Sealed]

      public sealed class FSharpAsyncBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  - type: Microsoft.FSharp.Core.SealedAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  id: Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
  nameWithType: FSharpAsyncBuilder.Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<TResult> Bind<T,TResult> (Microsoft.FSharp.Control.FSharpAsync<T> computation, Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Control.FSharpAsync<TResult>> binder);
    parameters:
    - id: computation
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
    - id: binder
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Control.FSharpAsync{TResult}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})
  id: Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
  nameWithType: FSharpAsyncBuilder.Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> Combine<T> (Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit> computation1, Microsoft.FSharp.Control.FSharpAsync<T> computation2);
    parameters:
    - id: computation1
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
      description: To be added.
    - id: computation2
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})
  id: Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
  nameWithType: FSharpAsyncBuilder.Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> Delay<T> (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync<T>> generator);
    parameters:
    - id: generator
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{T}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})
  id: For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
  nameWithType: FSharpAsyncBuilder.For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit> For<T> (System.Collections.Generic.IEnumerable<T> sequence, Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>> body);
    parameters:
    - id: sequence
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    - id: body
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)
  id: Return``1(``0)
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Return<T>(T)
  nameWithType: FSharpAsyncBuilder.Return<T>(T)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> Return<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})
  id: ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: ReturnFrom<T>(FSharpAsync<T>)
  nameWithType: FSharpAsyncBuilder.ReturnFrom<T>(FSharpAsync<T>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom<T>(FSharpAsync<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> ReturnFrom<T> (Microsoft.FSharp.Control.FSharpAsync<T> computation);
    parameters:
    - id: computation
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
  nameWithType: FSharpAsyncBuilder.TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> TryFinally<T> (Microsoft.FSharp.Control.FSharpAsync<T> computation, Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> compensation);
    parameters:
    - id: computation
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
    - id: compensation
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})
  id: TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
  nameWithType: FSharpAsyncBuilder.TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<T> TryWith<T> (Microsoft.FSharp.Control.FSharpAsync<T> computation, Microsoft.FSharp.Core.FSharpFunc<Exception,Microsoft.FSharp.Control.FSharpAsync<T>> catchHandler);
    parameters:
    - id: computation
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
    - id: catchHandler
      type: Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{T}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync`1
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  id: Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
  nameWithType: FSharpAsyncBuilder.Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: 'public Microsoft.FSharp.Control.FSharpAsync<TResult> Using<T,TResult> (T resource, Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Control.FSharpAsync<TResult>> binder) where T : IDisposable;'
    parameters:
    - id: resource
      type: T
      description: To be added.
    - id: binder
      type: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Control.FSharpAsync{TResult}}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{TResult}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})
  id: While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
  nameWithType: FSharpAsyncBuilder.While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit> While (Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,bool> guard, Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit> computation);
    parameters:
    - id: guard
      type: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean}
      description: To be added.
    - id: computation
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
      description: To be added.
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.While*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero
  commentId: M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero
  id: Zero
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  langs:
  - csharp
  name: Zero()
  nameWithType: FSharpAsyncBuilder.Zero()
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Control
  syntax:
    content: public Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit> Zero ();
    parameters: []
    return:
      type: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
      description: To be added.
  overload: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
  nameWithType: FSharpAsyncBuilder.Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind<T,TResult>(FSharpAsync<T>, FSharpFunc<T,FSharpAsync<TResult>>)
- uid: Microsoft.FSharp.Control.FSharpAsync`1
  name: FSharpAsync<T>
  nameWithType: FSharpAsync<T>
  fullName: Microsoft.FSharp.Control.FSharpAsync<T>
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Microsoft.FSharp.Control.FSharpAsync{TResult}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<TResult>
  nameWithType: FSharpAsync<TResult>
  fullName: Microsoft.FSharp.Control.FSharpAsync<TResult>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.FSharpFunc`2
  name: FSharpFunc<T,TResult>
  nameWithType: FSharpFunc<T,TResult>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,TResult>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Control.FSharpAsync{TResult}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpAsync<TResult>>
  nameWithType: FSharpFunc<T,FSharpAsync<TResult>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Control.FSharpAsync<TResult>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
  nameWithType: FSharpAsyncBuilder.Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine<T>(FSharpAsync<Unit>, FSharpAsync<T>)
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsync<Unit>
  nameWithType: FSharpAsync<Unit>
  fullName: Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
  nameWithType: FSharpAsyncBuilder.Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay<T>(FSharpFunc<Unit,FSharpAsync<T>>)
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{T}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,FSharpAsync<T>>
  nameWithType: FSharpFunc<Unit,FSharpAsync<T>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync<T>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
  nameWithType: FSharpAsyncBuilder.For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.For<T>(IEnumerable<T>, FSharpFunc<T,FSharpAsync<Unit>>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: Microsoft.FSharp.Core.FSharpFunc{T,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<T,FSharpAsync<Unit>>
  nameWithType: FSharpFunc<T,FSharpAsync<Unit>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<T,Microsoft.FSharp.Control.FSharpAsync<Microsoft.FSharp.Core.Unit>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Return<T>(T)
  nameWithType: FSharpAsyncBuilder.Return<T>(T)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return<T>(T)
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: ReturnFrom<T>(FSharpAsync<T>)
  nameWithType: FSharpAsyncBuilder.ReturnFrom<T>(FSharpAsync<T>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom<T>(FSharpAsync<T>)
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
  nameWithType: FSharpAsyncBuilder.TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally<T>(FSharpAsync<T>, FSharpFunc<Unit,Unit>)
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,Unit>
  nameWithType: FSharpFunc<Unit,Unit>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
  nameWithType: FSharpAsyncBuilder.TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith<T>(FSharpAsync<T>, FSharpFunc<Exception,FSharpAsync<T>>)
- uid: System.Exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{T}}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Exception,FSharpAsync<T>>
  nameWithType: FSharpFunc<Exception,FSharpAsync<T>>
  fullName: Microsoft.FSharp.Core.FSharpFunc<System.Exception,Microsoft.FSharp.Control.FSharpAsync<T>>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Control.FSharpAsync`1
    name: FSharpAsync
    nameWithType: FSharpAsync
    fullName: Microsoft.FSharp.Control.FSharpAsync
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
  nameWithType: FSharpAsyncBuilder.Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using<T,TResult>(T, FSharpFunc<T,FSharpAsync<TResult>>)
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
  nameWithType: FSharpAsyncBuilder.While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.While(FSharpFunc<Unit,Boolean>, FSharpAsync<Unit>)
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: FSharpFunc<Unit,Boolean>
  nameWithType: FSharpFunc<Unit,Boolean>
  fullName: Microsoft.FSharp.Core.FSharpFunc<Microsoft.FSharp.Core.Unit,System.Boolean>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.FSharpFunc`2
    name: FSharpFunc
    nameWithType: FSharpFunc
    fullName: Microsoft.FSharp.Core.FSharpFunc
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Zero()
  nameWithType: FSharpAsyncBuilder.Zero()
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero()
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Bind<T,TResult>
  nameWithType: FSharpAsyncBuilder.Bind<T,TResult>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Combine<T>
  nameWithType: FSharpAsyncBuilder.Combine<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Delay<T>
  nameWithType: FSharpAsyncBuilder.Delay<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: For<T>
  nameWithType: FSharpAsyncBuilder.For<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.For<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Return<T>
  nameWithType: FSharpAsyncBuilder.Return<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Return<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: ReturnFrom<T>
  nameWithType: FSharpAsyncBuilder.ReturnFrom<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: TryFinally<T>
  nameWithType: FSharpAsyncBuilder.TryFinally<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: TryWith<T>
  nameWithType: FSharpAsyncBuilder.TryWith<T>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Using<T,TResult>
  nameWithType: FSharpAsyncBuilder.Using<T,TResult>
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Using<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.While*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: While
  nameWithType: FSharpAsyncBuilder.While
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.While
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero*
  parent: Microsoft.FSharp.Control.FSharpAsyncBuilder
  isExternal: false
  name: Zero
  nameWithType: FSharpAsyncBuilder.Zero
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Control/FSharpAsyncBuilder.xml
