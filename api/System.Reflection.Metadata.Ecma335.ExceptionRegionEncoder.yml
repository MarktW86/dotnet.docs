### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  commentId: T:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  id: ExceptionRegionEncoder
  children:
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)
  - System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)
  langs:
  - csharp
  name: ExceptionRegionEncoder
  nameWithType: ExceptionRegionEncoder
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  type: Struct
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public struct ExceptionRegionEncoder
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)
  id: Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
  nameWithType: ExceptionRegionEncoder.Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder Add (System.Reflection.Metadata.ExceptionRegionKind kind, int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType = null, int filterOffset = 0);
    parameters:
    - id: kind
      type: System.Reflection.Metadata.ExceptionRegionKind
      description: To be added.
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    - id: catchType
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: filterOffset
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)
  id: AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
  nameWithType: ExceptionRegionEncoder.AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddCatch (int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType);
    parameters:
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    - id: catchType
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddFault(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: AddFault(Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFault(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(Int32, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFault (int tryOffset, int tryLength, int handlerOffset, int handlerLength);
    parameters:
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: AddFilter(Int32, Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFilter(Int32, Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(Int32, Int32, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFilter (int tryOffset, int tryLength, int handlerOffset, int handlerLength, int filterOffset);
    parameters:
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    - id: filterOffset
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)
  id: AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: AddFinally(Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFinally(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(Int32, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFinally (int tryOffset, int tryLength, int handlerOffset, int handlerLength);
    parameters:
    - id: tryOffset
      type: System.Int32
      description: To be added.
    - id: tryLength
      type: System.Int32
      description: To be added.
    - id: handlerOffset
      type: System.Int32
      description: To be added.
    - id: handlerLength
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  commentId: P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  id: Builder
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: Builder
  nameWithType: ExceptionRegionEncoder.Builder
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.BlobBuilder Builder { get; }
    return:
      type: System.Reflection.Metadata.BlobBuilder
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  commentId: P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  id: HasSmallFormat
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: HasSmallFormat
  nameWithType: ExceptionRegionEncoder.HasSmallFormat
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public bool HasSmallFormat { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)
  id: IsSmallExceptionRegion(System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: IsSmallExceptionRegion(Int32, Int32)
  nameWithType: ExceptionRegionEncoder.IsSmallExceptionRegion(Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(Int32, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static bool IsSmallExceptionRegion (int startOffset, int length);
    parameters:
    - id: startOffset
      type: System.Int32
      description: To be added.
    - id: length
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)
  commentId: M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)
  id: IsSmallRegionCount(System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  langs:
  - csharp
  name: IsSmallRegionCount(Int32)
  nameWithType: ExceptionRegionEncoder.IsSmallRegionCount(Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public static bool IsSmallRegionCount (int exceptionRegionCount);
    parameters:
    - id: exceptionRegionCount
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount*
  exceptions: []
  version:
  - netcore-1.1.0
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
  nameWithType: ExceptionRegionEncoder.Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(ExceptionRegionKind, Int32, Int32, Int32, Int32, EntityHandle, Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: ExceptionRegionEncoder
  nameWithType: ExceptionRegionEncoder
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
- uid: System.Reflection.Metadata.ExceptionRegionKind
  parent: System.Reflection.Metadata
  isExternal: false
  name: ExceptionRegionKind
  nameWithType: ExceptionRegionKind
  fullName: System.Reflection.Metadata.ExceptionRegionKind
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
  nameWithType: ExceptionRegionEncoder.AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(Int32, Int32, Int32, Int32, EntityHandle)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFault(Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFault(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(Int32, Int32, Int32, Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFilter(Int32, Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFilter(Int32, Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(Int32, Int32, Int32, Int32, Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFinally(Int32, Int32, Int32, Int32)
  nameWithType: ExceptionRegionEncoder.AddFinally(Int32, Int32, Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(Int32, Int32, Int32, Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: Builder
  nameWithType: ExceptionRegionEncoder.Builder
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
- uid: System.Reflection.Metadata.BlobBuilder
  parent: System.Reflection.Metadata
  isExternal: false
  name: BlobBuilder
  nameWithType: BlobBuilder
  fullName: System.Reflection.Metadata.BlobBuilder
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: HasSmallFormat
  nameWithType: ExceptionRegionEncoder.HasSmallFormat
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: IsSmallExceptionRegion(Int32, Int32)
  nameWithType: ExceptionRegionEncoder.IsSmallExceptionRegion(Int32, Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(Int32, Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: IsSmallRegionCount(Int32)
  nameWithType: ExceptionRegionEncoder.IsSmallRegionCount(Int32)
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(Int32)
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: Add
  nameWithType: ExceptionRegionEncoder.Add
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddCatch
  nameWithType: ExceptionRegionEncoder.AddCatch
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFault
  nameWithType: ExceptionRegionEncoder.AddFault
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFilter
  nameWithType: ExceptionRegionEncoder.AddFilter
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: AddFinally
  nameWithType: ExceptionRegionEncoder.AddFinally
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: Builder
  nameWithType: ExceptionRegionEncoder.Builder
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: HasSmallFormat
  nameWithType: ExceptionRegionEncoder.HasSmallFormat
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: IsSmallExceptionRegion
  nameWithType: ExceptionRegionEncoder.IsSmallExceptionRegion
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
- uid: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount*
  parent: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder
  isExternal: false
  name: IsSmallRegionCount
  nameWithType: ExceptionRegionEncoder.IsSmallRegionCount
  fullName: System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount
  monikers:
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/ExceptionRegionEncoder.xml
