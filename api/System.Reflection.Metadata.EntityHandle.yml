### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.EntityHandle
  commentId: T:System.Reflection.Metadata.EntityHandle
  id: EntityHandle
  children:
  - System.Reflection.Metadata.EntityHandle.AssemblyDefinition
  - System.Reflection.Metadata.EntityHandle.Equals(System.Object)
  - System.Reflection.Metadata.EntityHandle.Equals(System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.EntityHandle.GetHashCode
  - System.Reflection.Metadata.EntityHandle.IsNil
  - System.Reflection.Metadata.EntityHandle.Kind
  - System.Reflection.Metadata.EntityHandle.ModuleDefinition
  - System.Reflection.Metadata.EntityHandle.op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.EntityHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.EntityHandle.op_Implicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.Handle)
  - System.Reflection.Metadata.EntityHandle.op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  langs:
  - csharp
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
  type: Struct
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public struct EntityHandle : IEquatable<System.Reflection.Metadata.EntityHandle>'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable<System.Reflection.Metadata.EntityHandle>
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.AssemblyDefinition
  commentId: F:System.Reflection.Metadata.EntityHandle.AssemblyDefinition
  id: AssemblyDefinition
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: AssemblyDefinition
  nameWithType: EntityHandle.AssemblyDefinition
  fullName: System.Reflection.Metadata.EntityHandle.AssemblyDefinition
  type: Field
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static readonly System.Reflection.Metadata.AssemblyDefinitionHandle AssemblyDefinition;
    return:
      type: System.Reflection.Metadata.AssemblyDefinitionHandle
      description: To be added.
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.Equals(System.Object)
  commentId: M:System.Reflection.Metadata.EntityHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EntityHandle.Equals(Object)
  fullName: System.Reflection.Metadata.EntityHandle.Equals(Object)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.Equals(System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.EntityHandle.Equals(System.Reflection.Metadata.EntityHandle)
  id: Equals(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: Equals(EntityHandle)
  nameWithType: EntityHandle.Equals(EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.Equals(EntityHandle)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals (System.Reflection.Metadata.EntityHandle other);
    parameters:
    - id: other
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.GetHashCode
  commentId: M:System.Reflection.Metadata.EntityHandle.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EntityHandle.GetHashCode()
  fullName: System.Reflection.Metadata.EntityHandle.GetHashCode()
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.IsNil
  commentId: P:System.Reflection.Metadata.EntityHandle.IsNil
  id: IsNil
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: IsNil
  nameWithType: EntityHandle.IsNil
  fullName: System.Reflection.Metadata.EntityHandle.IsNil
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool IsNil { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.IsNil*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.Kind
  commentId: P:System.Reflection.Metadata.EntityHandle.Kind
  id: Kind
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: Kind
  nameWithType: EntityHandle.Kind
  fullName: System.Reflection.Metadata.EntityHandle.Kind
  type: Property
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public System.Reflection.Metadata.HandleKind Kind { get; }
    return:
      type: System.Reflection.Metadata.HandleKind
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.Kind*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.ModuleDefinition
  commentId: F:System.Reflection.Metadata.EntityHandle.ModuleDefinition
  id: ModuleDefinition
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: ModuleDefinition
  nameWithType: EntityHandle.ModuleDefinition
  fullName: System.Reflection.Metadata.EntityHandle.ModuleDefinition
  type: Field
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static readonly System.Reflection.Metadata.ModuleDefinitionHandle ModuleDefinition;
    return:
      type: System.Reflection.Metadata.ModuleDefinitionHandle
      description: To be added.
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.EntityHandle.op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: op_Equality(EntityHandle, EntityHandle)
  nameWithType: EntityHandle.op_Equality(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Equality(EntityHandle, EntityHandle)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool op_Equality (System.Reflection.Metadata.EntityHandle left, System.Reflection.Metadata.EntityHandle right);
    parameters:
    - id: left
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: right
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.EntityHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.EntityHandle
  id: op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: op_Explicit(Handle to EntityHandle)
  nameWithType: EntityHandle.op_Explicit(Handle to EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Explicit(Handle to EntityHandle)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static System.Reflection.Metadata.EntityHandle op_Explicit (System.Reflection.Metadata.Handle handle);
    parameters:
    - id: handle
      type: System.Reflection.Metadata.Handle
      description: To be added.
    return:
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Implicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.Handle)
  commentId: M:System.Reflection.Metadata.EntityHandle.op_Implicit(System.Reflection.Metadata.EntityHandle)~System.Reflection.Metadata.Handle
  id: op_Implicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: op_Implicit(EntityHandle to Handle)
  nameWithType: EntityHandle.op_Implicit(EntityHandle to Handle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Implicit(EntityHandle to Handle)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static System.Reflection.Metadata.Handle op_Implicit (System.Reflection.Metadata.EntityHandle handle);
    parameters:
    - id: handle
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Reflection.Metadata.Handle
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.op_Implicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  commentId: M:System.Reflection.Metadata.EntityHandle.op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  langs:
  - csharp
  name: op_Inequality(EntityHandle, EntityHandle)
  nameWithType: EntityHandle.op_Inequality(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Inequality(EntityHandle, EntityHandle)
  type: Operator
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool op_Inequality (System.Reflection.Metadata.EntityHandle left, System.Reflection.Metadata.EntityHandle right);
    parameters:
    - id: left
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    - id: right
      type: System.Reflection.Metadata.EntityHandle
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Reflection.Metadata.EntityHandle.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Reflection.Metadata.EntityHandle.AssemblyDefinition
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: AssemblyDefinition
  nameWithType: EntityHandle.AssemblyDefinition
  fullName: System.Reflection.Metadata.EntityHandle.AssemblyDefinition
- uid: System.Reflection.Metadata.AssemblyDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: AssemblyDefinitionHandle
  nameWithType: AssemblyDefinitionHandle
  fullName: System.Reflection.Metadata.AssemblyDefinitionHandle
- uid: System.Reflection.Metadata.EntityHandle.Equals(System.Object)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: Equals(Object)
  nameWithType: EntityHandle.Equals(Object)
  fullName: System.Reflection.Metadata.EntityHandle.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.EntityHandle.Equals(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: Equals(EntityHandle)
  nameWithType: EntityHandle.Equals(EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.Equals(EntityHandle)
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: EntityHandle
  nameWithType: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
- uid: System.Reflection.Metadata.EntityHandle.GetHashCode
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: GetHashCode()
  nameWithType: EntityHandle.GetHashCode()
  fullName: System.Reflection.Metadata.EntityHandle.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.EntityHandle.IsNil
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: IsNil
  nameWithType: EntityHandle.IsNil
  fullName: System.Reflection.Metadata.EntityHandle.IsNil
- uid: System.Reflection.Metadata.EntityHandle.Kind
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: Kind
  nameWithType: EntityHandle.Kind
  fullName: System.Reflection.Metadata.EntityHandle.Kind
- uid: System.Reflection.Metadata.HandleKind
  parent: System.Reflection.Metadata
  isExternal: false
  name: HandleKind
  nameWithType: HandleKind
  fullName: System.Reflection.Metadata.HandleKind
- uid: System.Reflection.Metadata.EntityHandle.ModuleDefinition
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: ModuleDefinition
  nameWithType: EntityHandle.ModuleDefinition
  fullName: System.Reflection.Metadata.EntityHandle.ModuleDefinition
- uid: System.Reflection.Metadata.ModuleDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: ModuleDefinitionHandle
  nameWithType: ModuleDefinitionHandle
  fullName: System.Reflection.Metadata.ModuleDefinitionHandle
- uid: System.Reflection.Metadata.EntityHandle.op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Equality(EntityHandle, EntityHandle)
  nameWithType: EntityHandle.op_Equality(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Equality(EntityHandle, EntityHandle)
- uid: System.Reflection.Metadata.EntityHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Explicit(Handle to EntityHandle)
  nameWithType: EntityHandle.op_Explicit(Handle to EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Explicit(Handle to EntityHandle)
- uid: System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata
  isExternal: false
  name: Handle
  nameWithType: Handle
  fullName: System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.EntityHandle.op_Implicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Implicit(EntityHandle to Handle)
  nameWithType: EntityHandle.op_Implicit(EntityHandle to Handle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Implicit(EntityHandle to Handle)
- uid: System.Reflection.Metadata.EntityHandle.op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Inequality(EntityHandle, EntityHandle)
  nameWithType: EntityHandle.op_Inequality(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.EntityHandle.op_Inequality(EntityHandle, EntityHandle)
- uid: System.Reflection.Metadata.EntityHandle.Equals*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: Equals
  nameWithType: EntityHandle.Equals
  fullName: System.Reflection.Metadata.EntityHandle.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.GetHashCode*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: GetHashCode
  nameWithType: EntityHandle.GetHashCode
  fullName: System.Reflection.Metadata.EntityHandle.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.IsNil*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: IsNil
  nameWithType: EntityHandle.IsNil
  fullName: System.Reflection.Metadata.EntityHandle.IsNil
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.Kind*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: Kind
  nameWithType: EntityHandle.Kind
  fullName: System.Reflection.Metadata.EntityHandle.Kind
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Equality*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Equality
  nameWithType: EntityHandle.op_Equality
  fullName: System.Reflection.Metadata.EntityHandle.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Explicit*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Explicit
  nameWithType: EntityHandle.op_Explicit
  fullName: System.Reflection.Metadata.EntityHandle.op_Explicit
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Implicit*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Implicit
  nameWithType: EntityHandle.op_Implicit
  fullName: System.Reflection.Metadata.EntityHandle.op_Implicit
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
- uid: System.Reflection.Metadata.EntityHandle.op_Inequality*
  parent: System.Reflection.Metadata.EntityHandle
  isExternal: false
  name: op_Inequality
  nameWithType: EntityHandle.op_Inequality
  fullName: System.Reflection.Metadata.EntityHandle.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/EntityHandle.xml
