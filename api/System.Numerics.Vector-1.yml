### YamlMime:ManagedReference
items:
- uid: System.Numerics.Vector`1
  commentId: T:System.Numerics.Vector`1
  id: Vector`1
  children:
  - System.Numerics.Vector`1.#ctor(`0)
  - System.Numerics.Vector`1.#ctor(`0[])
  - System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  - System.Numerics.Vector`1.CopyTo(`0[])
  - System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  - System.Numerics.Vector`1.Count
  - System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.Equals(System.Object)
  - System.Numerics.Vector`1.GetHashCode
  - System.Numerics.Vector`1.Item(System.Int32)
  - System.Numerics.Vector`1.One
  - System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt64})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt32})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt16})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Single})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.SByte})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Double})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int32})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int16})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Byte})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int64})
  - System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  - System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector`1.ToString
  - System.Numerics.Vector`1.ToString(System.String)
  - System.Numerics.Vector`1.Zero
  langs:
  - csharp
  name: Vector<T>
  nameWithType: Vector<T>
  fullName: System.Numerics.Vector<T>
  type: Struct
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: 'public struct Vector<T> : IEquatable<System.Numerics.Vector<T>>, IFormattable where T : struct'
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable<System.Numerics.Vector<T>>
  - System.IFormattable
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.#ctor(`0)
  commentId: M:System.Numerics.Vector`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Vector<T>(T)
  nameWithType: Vector<T>.Vector<T>(T)
  fullName: System.Numerics.Vector<T>.Vector<T>(T)
  type: Constructor
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public Vector (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
  overload: System.Numerics.Vector`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.#ctor(`0[])
  commentId: M:System.Numerics.Vector`1.#ctor(`0[])
  id: '#ctor(`0[])'
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Vector<T>(T[])
  nameWithType: Vector<T>.Vector<T>(T[])
  fullName: System.Numerics.Vector<T>.Vector<T>(T[])
  type: Constructor
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public Vector (T[] values);
    parameters:
    - id: values
      type: T[]
      description: To be added.
  overload: System.Numerics.Vector`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  commentId: M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  id: '#ctor(`0[],System.Int32)'
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Vector<T>(T[], Int32)
  nameWithType: Vector<T>.Vector<T>(T[], Int32)
  fullName: System.Numerics.Vector<T>.Vector<T>(T[], Int32)
  type: Constructor
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public Vector (T[] values, int index);
    parameters:
    - id: values
      type: T[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.Numerics.Vector`1.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.CopyTo(`0[])
  commentId: M:System.Numerics.Vector`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: CopyTo(T[])
  nameWithType: Vector<T>.CopyTo(T[])
  fullName: System.Numerics.Vector<T>.CopyTo(T[])
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public void CopyTo (T[] destination);
    parameters:
    - id: destination
      type: T[]
      description: To be added.
  overload: System.Numerics.Vector`1.CopyTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: CopyTo(T[], Int32)
  nameWithType: Vector<T>.CopyTo(T[], Int32)
  fullName: System.Numerics.Vector<T>.CopyTo(T[], Int32)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public void CopyTo (T[] destination, int startIndex);
    parameters:
    - id: destination
      type: T[]
      description: To be added.
    - id: startIndex
      type: System.Int32
      description: To be added.
  overload: System.Numerics.Vector`1.CopyTo*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Count
  commentId: P:System.Numerics.Vector`1.Count
  id: Count
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Count
  nameWithType: Vector<T>.Count
  fullName: System.Numerics.Vector<T>.Count
  type: Property
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Numerics.Vector`1.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  id: Equals(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Equals(Vector<T>)
  nameWithType: Vector<T>.Equals(Vector<T>)
  fullName: System.Numerics.Vector<T>.Equals(Vector<T>)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public bool Equals (System.Numerics.Vector<T> other);
    parameters:
    - id: other
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector`1.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Equals(System.Object)
  commentId: M:System.Numerics.Vector`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Vector<T>.Equals(Object)
  fullName: System.Numerics.Vector<T>.Equals(Object)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector`1.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.GetHashCode
  commentId: M:System.Numerics.Vector`1.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Vector<T>.GetHashCode()
  fullName: System.Numerics.Vector<T>.GetHashCode()
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Numerics.Vector`1.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Item(System.Int32)
  commentId: P:System.Numerics.Vector`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: Vector<T>.Item(Int32)
  fullName: System.Numerics.Vector<T>.Item(Int32)
  type: Property
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public T this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Numerics.Vector`1.Item*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.One
  commentId: P:System.Numerics.Vector`1.One
  id: One
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: One
  nameWithType: Vector<T>.One
  fullName: System.Numerics.Vector<T>.One
  type: Property
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> One { get; }
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.One*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Addition(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Addition(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Addition(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Addition (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Addition*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_BitwiseAnd(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_BitwiseAnd(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_BitwiseAnd(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_BitwiseAnd (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_BitwiseAnd*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_BitwiseOr(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_BitwiseOr(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_BitwiseOr(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_BitwiseOr (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_BitwiseOr*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Division(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Division(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Division(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Division (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Division*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Equality(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Equality(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Equality(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static bool op_Equality (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector`1.op_Equality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_ExclusiveOr(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_ExclusiveOr(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_ExclusiveOr(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_ExclusiveOr (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_ExclusiveOr*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt64})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt64})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<UInt64>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt64>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt64>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<ulong> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt64}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt32})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt32})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<UInt32>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt32>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt32>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<uint> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt32}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt16})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt16})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<UInt16>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt16>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt16>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<ushort> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.UInt16}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Single})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Single>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Single>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Single>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<float> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Single}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.SByte})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.SByte})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<SByte>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<SByte>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<SByte>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public static System.Numerics.Vector<sbyte> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.SByte}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  attributes:
  - type: System.CLSCompliantAttribute
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Double})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Double>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Double>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Double>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<double> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Double}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int32})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Int32>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int32>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int32>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<int> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int32}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int16})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int16})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Int16>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int16>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int16>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<short> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int16}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Byte})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Byte})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Byte>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Byte>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Byte>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<byte> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Byte}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int64})
  commentId: M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}
  id: op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Explicit(Vector<T> to Vector<Int64>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int64>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int64>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<long> op_Explicit (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector{System.Int64}
      description: To be added.
  overload: System.Numerics.Vector`1.op_Explicit*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Inequality(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Inequality(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Inequality(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static bool op_Inequality (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Numerics.Vector`1.op_Inequality*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Multiply(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Multiply(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Multiply(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Multiply (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Multiply*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  commentId: M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  id: op_Multiply(System.Numerics.Vector{`0},`0)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Multiply(Vector<T>, T)
  nameWithType: Vector<T>.op_Multiply(Vector<T>, T)
  fullName: System.Numerics.Vector<T>.op_Multiply(Vector<T>, T)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Multiply (System.Numerics.Vector<T> value, T factor);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    - id: factor
      type: T
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Multiply*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  id: op_Multiply(`0,System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Multiply(T, Vector<T>)
  nameWithType: Vector<T>.op_Multiply(T, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Multiply(T, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Multiply (T factor, System.Numerics.Vector<T> value);
    parameters:
    - id: factor
      type: T
      description: To be added.
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Multiply*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  id: op_OnesComplement(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_OnesComplement(Vector<T>)
  nameWithType: Vector<T>.op_OnesComplement(Vector<T>)
  fullName: System.Numerics.Vector<T>.op_OnesComplement(Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_OnesComplement (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_OnesComplement*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_Subtraction(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Subtraction(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Subtraction(Vector<T>, Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_Subtraction (System.Numerics.Vector<T> left, System.Numerics.Vector<T> right);
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: To be added.
    - id: right
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_Subtraction*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  commentId: M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  id: op_UnaryNegation(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: op_UnaryNegation(Vector<T>)
  nameWithType: Vector<T>.op_UnaryNegation(Vector<T>)
  fullName: System.Numerics.Vector<T>.op_UnaryNegation(Vector<T>)
  type: Operator
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> op_UnaryNegation (System.Numerics.Vector<T> value);
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: To be added.
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.op_UnaryNegation*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: ToString(String, IFormatProvider)
  nameWithType: Vector<T>.ToString(String, IFormatProvider)
  fullName: System.Numerics.Vector<T>.ToString(String, IFormatProvider)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: To be added.
    - id: formatProvider
      type: System.IFormatProvider
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Numerics.Vector`1.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.ToString
  commentId: M:System.Numerics.Vector`1.ToString
  id: ToString
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: ToString()
  nameWithType: Vector<T>.ToString()
  fullName: System.Numerics.Vector<T>.ToString()
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Numerics.Vector`1.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.ToString(System.String)
  commentId: M:System.Numerics.Vector`1.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Vector<T>.ToString(String)
  fullName: System.Numerics.Vector<T>.ToString(String)
  type: Method
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Numerics.Vector`1.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Zero
  commentId: P:System.Numerics.Vector`1.Zero
  id: Zero
  parent: System.Numerics.Vector`1
  langs:
  - csharp
  name: Zero
  nameWithType: Vector<T>.Zero
  fullName: System.Numerics.Vector<T>.Zero
  type: Property
  assemblies:
  - System.Numerics.Vectors
  - netstandard
  namespace: System.Numerics
  syntax:
    content: public static System.Numerics.Vector<T> Zero { get; }
    return:
      type: System.Numerics.Vector`1
      description: To be added.
  overload: System.Numerics.Vector`1.Zero*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Numerics.Vector`1.#ctor(`0)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Vector<T>(T)
  nameWithType: Vector<T>.Vector<T>(T)
  fullName: System.Numerics.Vector<T>.Vector<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Numerics.Vector`1.#ctor(`0[])
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Vector<T>(T[])
  nameWithType: Vector<T>.Vector<T>(T[])
  fullName: System.Numerics.Vector<T>.Vector<T>(T[])
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Vector<T>(T[], Int32)
  nameWithType: Vector<T>.Vector<T>(T[], Int32)
  fullName: System.Numerics.Vector<T>.Vector<T>(T[], Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector`1.CopyTo(`0[])
  parent: System.Numerics.Vector`1
  isExternal: false
  name: CopyTo(T[])
  nameWithType: Vector<T>.CopyTo(T[])
  fullName: System.Numerics.Vector<T>.CopyTo(T[])
- uid: System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: CopyTo(T[], Int32)
  nameWithType: Vector<T>.CopyTo(T[], Int32)
  fullName: System.Numerics.Vector<T>.CopyTo(T[], Int32)
- uid: System.Numerics.Vector`1.Count
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Count
  nameWithType: Vector<T>.Count
  fullName: System.Numerics.Vector<T>.Count
- uid: System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Equals(Vector<T>)
  nameWithType: Vector<T>.Equals(Vector<T>)
  fullName: System.Numerics.Vector<T>.Equals(Vector<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Numerics.Vector`1
  parent: System.Numerics
  isExternal: false
  name: Vector<T>
  nameWithType: Vector<T>
  fullName: System.Numerics.Vector<T>
- uid: System.Numerics.Vector`1.Equals(System.Object)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Equals(Object)
  nameWithType: Vector<T>.Equals(Object)
  fullName: System.Numerics.Vector<T>.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Numerics.Vector`1.GetHashCode
  parent: System.Numerics.Vector`1
  isExternal: false
  name: GetHashCode()
  nameWithType: Vector<T>.GetHashCode()
  fullName: System.Numerics.Vector<T>.GetHashCode()
- uid: System.Numerics.Vector`1.Item(System.Int32)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Item(Int32)
  nameWithType: Vector<T>.Item(Int32)
  fullName: System.Numerics.Vector<T>.Item(Int32)
- uid: System.Numerics.Vector`1.One
  parent: System.Numerics.Vector`1
  isExternal: false
  name: One
  nameWithType: Vector<T>.One
  fullName: System.Numerics.Vector<T>.One
- uid: System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Addition(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Addition(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Addition(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_BitwiseAnd(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_BitwiseAnd(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_BitwiseAnd(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_BitwiseOr(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_BitwiseOr(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_BitwiseOr(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Division(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Division(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Division(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Equality(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Equality(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Equality(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_ExclusiveOr(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_ExclusiveOr(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_ExclusiveOr(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt64})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<UInt64>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt64>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt64>)
- uid: System.UInt64
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Numerics.Vector{System.UInt64}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt64>
  nameWithType: Vector<UInt64>
  fullName: System.Numerics.Vector<System.UInt64>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt32})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<UInt32>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt32>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt32>)
- uid: System.UInt32
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Numerics.Vector{System.UInt32}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt32>
  nameWithType: Vector<UInt32>
  fullName: System.Numerics.Vector<System.UInt32>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.UInt16})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<UInt16>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<UInt16>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<UInt16>)
- uid: System.UInt16
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Numerics.Vector{System.UInt16}
  parent: System.Numerics
  isExternal: false
  name: Vector<UInt16>
  nameWithType: Vector<UInt16>
  fullName: System.Numerics.Vector<System.UInt16>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Single})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Single>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Single>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Single>)
- uid: System.Single
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Numerics.Vector{System.Single}
  parent: System.Numerics
  isExternal: false
  name: Vector<Single>
  nameWithType: Vector<Single>
  fullName: System.Numerics.Vector<System.Single>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.SByte})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<SByte>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<SByte>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<SByte>)
- uid: System.SByte
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Numerics.Vector{System.SByte}
  parent: System.Numerics
  isExternal: false
  name: Vector<SByte>
  nameWithType: Vector<SByte>
  fullName: System.Numerics.Vector<System.SByte>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Double})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Double>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Double>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Double>)
- uid: System.Double
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Numerics.Vector{System.Double}
  parent: System.Numerics
  isExternal: false
  name: Vector<Double>
  nameWithType: Vector<Double>
  fullName: System.Numerics.Vector<System.Double>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int32})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Int32>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int32>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int32>)
- uid: System.Numerics.Vector{System.Int32}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int32>
  nameWithType: Vector<Int32>
  fullName: System.Numerics.Vector<System.Int32>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int16})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Int16>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int16>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int16>)
- uid: System.Int16
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Numerics.Vector{System.Int16}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int16>
  nameWithType: Vector<Int16>
  fullName: System.Numerics.Vector<System.Int16>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Byte})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Byte>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Byte>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Byte>)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Numerics.Vector{System.Byte}
  parent: System.Numerics
  isExternal: false
  name: Vector<Byte>
  nameWithType: Vector<Byte>
  fullName: System.Numerics.Vector<System.Byte>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{T} to System.Numerics.Vector{System.Int64})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit(Vector<T> to Vector<Int64>)
  nameWithType: Vector<T>.op_Explicit(Vector<T> to Vector<Int64>)
  fullName: System.Numerics.Vector<T>.op_Explicit(Vector<T> to Vector<Int64>)
- uid: System.Int64
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Numerics.Vector{System.Int64}
  parent: System.Numerics
  isExternal: false
  name: Vector<Int64>
  nameWithType: Vector<Int64>
  fullName: System.Numerics.Vector<System.Int64>
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    nameWithType: Vector
    fullName: System.Numerics.Vector
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Inequality(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Inequality(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Inequality(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Multiply(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Multiply(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Multiply(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Multiply(Vector<T>, T)
  nameWithType: Vector<T>.op_Multiply(Vector<T>, T)
  fullName: System.Numerics.Vector<T>.op_Multiply(Vector<T>, T)
- uid: System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Multiply(T, Vector<T>)
  nameWithType: Vector<T>.op_Multiply(T, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Multiply(T, Vector<T>)
- uid: System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_OnesComplement(Vector<T>)
  nameWithType: Vector<T>.op_OnesComplement(Vector<T>)
  fullName: System.Numerics.Vector<T>.op_OnesComplement(Vector<T>)
- uid: System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Subtraction(Vector<T>, Vector<T>)
  nameWithType: Vector<T>.op_Subtraction(Vector<T>, Vector<T>)
  fullName: System.Numerics.Vector<T>.op_Subtraction(Vector<T>, Vector<T>)
- uid: System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_UnaryNegation(Vector<T>)
  nameWithType: Vector<T>.op_UnaryNegation(Vector<T>)
  fullName: System.Numerics.Vector<T>.op_UnaryNegation(Vector<T>)
- uid: System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: ToString(String, IFormatProvider)
  nameWithType: Vector<T>.ToString(String, IFormatProvider)
  fullName: System.Numerics.Vector<T>.ToString(String, IFormatProvider)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector`1.ToString
  parent: System.Numerics.Vector`1
  isExternal: false
  name: ToString()
  nameWithType: Vector<T>.ToString()
  fullName: System.Numerics.Vector<T>.ToString()
- uid: System.Numerics.Vector`1.ToString(System.String)
  parent: System.Numerics.Vector`1
  isExternal: false
  name: ToString(String)
  nameWithType: Vector<T>.ToString(String)
  fullName: System.Numerics.Vector<T>.ToString(String)
- uid: System.Numerics.Vector`1.Zero
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Zero
  nameWithType: Vector<T>.Zero
  fullName: System.Numerics.Vector<T>.Zero
- uid: System.Numerics.Vector`1.#ctor*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Vector<T>
  nameWithType: Vector<T>.Vector<T>
  fullName: System.Numerics.Vector<T>.Vector<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.CopyTo*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: CopyTo
  nameWithType: Vector<T>.CopyTo
  fullName: System.Numerics.Vector<T>.CopyTo
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Count*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Count
  nameWithType: Vector<T>.Count
  fullName: System.Numerics.Vector<T>.Count
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Equals*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Equals
  nameWithType: Vector<T>.Equals
  fullName: System.Numerics.Vector<T>.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.GetHashCode*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: GetHashCode
  nameWithType: Vector<T>.GetHashCode
  fullName: System.Numerics.Vector<T>.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Item*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Item
  nameWithType: Vector<T>.Item
  fullName: System.Numerics.Vector<T>.Item
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.One*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: One
  nameWithType: Vector<T>.One
  fullName: System.Numerics.Vector<T>.One
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Addition*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Addition
  nameWithType: Vector<T>.op_Addition
  fullName: System.Numerics.Vector<T>.op_Addition
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_BitwiseAnd*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_BitwiseAnd
  nameWithType: Vector<T>.op_BitwiseAnd
  fullName: System.Numerics.Vector<T>.op_BitwiseAnd
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_BitwiseOr*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_BitwiseOr
  nameWithType: Vector<T>.op_BitwiseOr
  fullName: System.Numerics.Vector<T>.op_BitwiseOr
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Division*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Division
  nameWithType: Vector<T>.op_Division
  fullName: System.Numerics.Vector<T>.op_Division
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Equality*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Equality
  nameWithType: Vector<T>.op_Equality
  fullName: System.Numerics.Vector<T>.op_Equality
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_ExclusiveOr*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_ExclusiveOr
  nameWithType: Vector<T>.op_ExclusiveOr
  fullName: System.Numerics.Vector<T>.op_ExclusiveOr
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Explicit*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Explicit
  nameWithType: Vector<T>.op_Explicit
  fullName: System.Numerics.Vector<T>.op_Explicit
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Inequality*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Inequality
  nameWithType: Vector<T>.op_Inequality
  fullName: System.Numerics.Vector<T>.op_Inequality
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Multiply*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Multiply
  nameWithType: Vector<T>.op_Multiply
  fullName: System.Numerics.Vector<T>.op_Multiply
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_OnesComplement*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_OnesComplement
  nameWithType: Vector<T>.op_OnesComplement
  fullName: System.Numerics.Vector<T>.op_OnesComplement
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_Subtraction*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_Subtraction
  nameWithType: Vector<T>.op_Subtraction
  fullName: System.Numerics.Vector<T>.op_Subtraction
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.op_UnaryNegation*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: op_UnaryNegation
  nameWithType: Vector<T>.op_UnaryNegation
  fullName: System.Numerics.Vector<T>.op_UnaryNegation
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.ToString*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: ToString
  nameWithType: Vector<T>.ToString
  fullName: System.Numerics.Vector<T>.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
- uid: System.Numerics.Vector`1.Zero*
  parent: System.Numerics.Vector`1
  isExternal: false
  name: Zero
  nameWithType: Vector<T>.Zero
  fullName: System.Numerics.Vector<T>.Zero
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Vector`1.xml
