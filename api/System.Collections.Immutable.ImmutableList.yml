### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableList
  commentId: T:System.Collections.Immutable.ImmutableList
  id: ImmutableList
  children:
  - System.Collections.Immutable.ImmutableList.Create``1
  - System.Collections.Immutable.ImmutableList.Create``1(``0)
  - System.Collections.Immutable.ImmutableList.Create``1(``0[])
  - System.Collections.Immutable.ImmutableList.CreateBuilder``1
  - System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  langs:
  - csharp
  name: ImmutableList
  nameWithType: ImmutableList
  fullName: System.Collections.Immutable.ImmutableList
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static class ImmutableList
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Create``1
  commentId: M:System.Collections.Immutable.ImmutableList.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: Create<T>()
  nameWithType: ImmutableList.Create<T>()
  fullName: System.Collections.Immutable.ImmutableList.Create<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<T> Create<T> ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0)
  commentId: M:System.Collections.Immutable.ImmutableList.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: Create<T>(T)
  nameWithType: ImmutableList.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<T> Create<T> (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0[])
  commentId: M:System.Collections.Immutable.ImmutableList.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: Create<T>(T[])
  nameWithType: ImmutableList.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<T> Create<T> (T[] items);
    parameters:
    - id: items
      type: T[]
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.CreateBuilder``1
  commentId: M:System.Collections.Immutable.ImmutableList.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: CreateBuilder<T>()
  nameWithType: ImmutableList.CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableList.CreateBuilder<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<T>.Builder CreateBuilder<T> ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableList{T}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.CreateBuilder``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableList.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList.CreateRange<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<T> CreateRange<T> (System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.CreateRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: IndexOf<T>(IImmutableList<T>, T, Int32)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int IndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, int startIndex);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: startIndex
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.IndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int IndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, int startIndex, int count);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: startIndex
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.IndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  commentId: M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: IndexOf<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int IndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.IndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int IndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, System.Collections.Generic.IEqualityComparer<T> equalityComparer);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.IndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  commentId: M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: LastIndexOf<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int LastIndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.LastIndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int LastIndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, System.Collections.Generic.IEqualityComparer<T> equalityComparer);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.LastIndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int LastIndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, int startIndex);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: startIndex
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.LastIndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  commentId: M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static int LastIndexOf<T> (this System.Collections.Immutable.IImmutableList<T> list, T item, int startIndex, int count);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: item
      type: T
      description: To be added.
    - id: startIndex
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.LastIndexOf``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  commentId: M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: Remove<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.Remove<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.Remove<T>(IImmutableList<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.IImmutableList<T> Remove<T> (this System.Collections.Immutable.IImmutableList<T> list, T value);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.Remove``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  id: RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  nameWithType: ImmutableList.RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList.RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.IImmutableList<T> RemoveRange<T> (this System.Collections.Immutable.IImmutableList<T> list, System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.RemoveRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  commentId: M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  id: Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: Replace<T>(IImmutableList<T>, T, T)
  nameWithType: ImmutableList.Replace<T>(IImmutableList<T>, T, T)
  fullName: System.Collections.Immutable.ImmutableList.Replace<T>(IImmutableList<T>, T, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.IImmutableList<T> Replace<T> (this System.Collections.Immutable.IImmutableList<T> list, T oldValue, T newValue);
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
    - id: oldValue
      type: T
      description: To be added.
    - id: newValue
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableList`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.Replace``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  langs:
  - csharp
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableList<TSource> ToImmutableList<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableList{TSource}
      description: To be added.
  overload: System.Collections.Immutable.ImmutableList.ToImmutableList``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableList.Create``1
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Create<T>()
  nameWithType: ImmutableList.Create<T>()
  fullName: System.Collections.Immutable.ImmutableList.Create<T>()
- uid: System.Collections.Immutable.ImmutableList`1
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableList<T>
  nameWithType: ImmutableList<T>
  fullName: System.Collections.Immutable.ImmutableList<T>
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Create<T>(T)
  nameWithType: ImmutableList.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Create<T>(T[])
  nameWithType: ImmutableList.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T[])
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Immutable.ImmutableList.CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: CreateBuilder<T>()
  nameWithType: ImmutableList.CreateBuilder<T>()
  fullName: System.Collections.Immutable.ImmutableList.CreateBuilder<T>()
- uid: System.Collections.Immutable.ImmutableList{T}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableList<T>
  nameWithType: ImmutableList<T>
  fullName: System.Collections.Immutable.ImmutableList<T>+Builder
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    nameWithType: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableList.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList.CreateRange<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: IndexOf<T>(IImmutableList<T>, T, Int32)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Immutable.IImmutableList`1
  parent: System.Collections.Immutable
  isExternal: false
  name: IImmutableList<T>
  nameWithType: IImmutableList<T>
  fullName: System.Collections.Immutable.IImmutableList<T>
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: IndexOf<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T)
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  nameWithType: ImmutableList.IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: LastIndexOf<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T)
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32)
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  nameWithType: ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
- uid: System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Remove<T>(IImmutableList<T>, T)
  nameWithType: ImmutableList.Remove<T>(IImmutableList<T>, T)
  fullName: System.Collections.Immutable.ImmutableList.Remove<T>(IImmutableList<T>, T)
- uid: System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  nameWithType: ImmutableList.RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableList.RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
- uid: System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Replace<T>(IImmutableList<T>, T, T)
  nameWithType: ImmutableList.Replace<T>(IImmutableList<T>, T, T)
  fullName: System.Collections.Immutable.ImmutableList.Replace<T>(IImmutableList<T>, T, T)
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: System.Collections.Immutable.ImmutableList{TSource}
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableList<TSource>
  nameWithType: ImmutableList<TSource>
  fullName: System.Collections.Immutable.ImmutableList<TSource>
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    nameWithType: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{TSource}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TSource>
  nameWithType: IEnumerable<TSource>
  fullName: System.Collections.Generic.IEnumerable<TSource>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: TSource
    name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Immutable.ImmutableList.Create``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Create<T>
  nameWithType: ImmutableList.Create<T>
  fullName: System.Collections.Immutable.ImmutableList.Create<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.CreateBuilder``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: CreateBuilder<T>
  nameWithType: ImmutableList.CreateBuilder<T>
  fullName: System.Collections.Immutable.ImmutableList.CreateBuilder<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.CreateRange``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: CreateRange<T>
  nameWithType: ImmutableList.CreateRange<T>
  fullName: System.Collections.Immutable.ImmutableList.CreateRange<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: IndexOf<T>
  nameWithType: ImmutableList.IndexOf<T>
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: LastIndexOf<T>
  nameWithType: ImmutableList.LastIndexOf<T>
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Remove``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Remove<T>
  nameWithType: ImmutableList.Remove<T>
  fullName: System.Collections.Immutable.ImmutableList.Remove<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.RemoveRange``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: RemoveRange<T>
  nameWithType: ImmutableList.RemoveRange<T>
  fullName: System.Collections.Immutable.ImmutableList.RemoveRange<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.Replace``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: Replace<T>
  nameWithType: ImmutableList.Replace<T>
  fullName: System.Collections.Immutable.ImmutableList.Replace<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1*
  parent: System.Collections.Immutable.ImmutableList
  isExternal: false
  name: ToImmutableList<TSource>
  nameWithType: ImmutableList.ToImmutableList<TSource>
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableList.xml
