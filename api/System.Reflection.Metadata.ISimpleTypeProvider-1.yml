### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1
  commentId: T:System.Reflection.Metadata.ISimpleTypeProvider`1
  id: ISimpleTypeProvider`1
  children:
  - System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)
  - System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  - System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  langs:
  - csharp
  name: ISimpleTypeProvider<TType>
  nameWithType: ISimpleTypeProvider<TType>
  fullName: System.Reflection.Metadata.ISimpleTypeProvider<TType>
  type: Interface
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public interface ISimpleTypeProvider<TType>
    typeParameters:
    - id: TType
      description: To be added.
  derivedClasses:
  - System.Reflection.Metadata.ICustomAttributeTypeProvider`1
  - System.Reflection.Metadata.ISignatureTypeProvider`2
  implements: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)
  commentId: M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)
  id: GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  langs:
  - csharp
  name: GetPrimitiveType(PrimitiveTypeCode)
  nameWithType: ISimpleTypeProvider<TType>.GetPrimitiveType(PrimitiveTypeCode)
  fullName: ISimpleTypeProvider<TType>.GetPrimitiveType(PrimitiveTypeCode)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetPrimitiveType (System.Reflection.Metadata.PrimitiveTypeCode typeCode);
    parameters:
    - id: typeCode
      type: System.Reflection.Metadata.PrimitiveTypeCode
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  id: GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  langs:
  - csharp
  name: GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  fullName: ISimpleTypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetTypeFromDefinition (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeDefinitionHandle handle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.TypeDefinitionHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  commentId: M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  id: GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  langs:
  - csharp
  name: GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  fullName: ISimpleTypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public TType GetTypeFromReference (System.Reflection.Metadata.MetadataReader reader, System.Reflection.Metadata.TypeReferenceHandle handle, byte rawTypeKind);
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: handle
      type: System.Reflection.Metadata.TypeReferenceHandle
      description: To be added.
    - id: rawTypeKind
      type: System.Byte
      description: To be added.
    return:
      type: TType
      description: To be added.
  overload: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference*
  exceptions: []
  version:
  - netcore-2.0
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
references:
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetPrimitiveType(PrimitiveTypeCode)
  nameWithType: ISimpleTypeProvider<TType>.GetPrimitiveType(PrimitiveTypeCode)
  fullName: ISimpleTypeProvider<TType>.GetPrimitiveType(PrimitiveTypeCode)
- uid: TType
  isExternal: true
  name: TType
  nameWithType: TType
  fullName: TType
- uid: System.Reflection.Metadata.PrimitiveTypeCode
  parent: System.Reflection.Metadata
  isExternal: false
  name: PrimitiveTypeCode
  nameWithType: PrimitiveTypeCode
  fullName: System.Reflection.Metadata.PrimitiveTypeCode
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
  fullName: ISimpleTypeProvider<TType>.GetTypeFromDefinition(MetadataReader, TypeDefinitionHandle, Byte)
- uid: System.Reflection.Metadata.MetadataReader
  parent: System.Reflection.Metadata
  isExternal: false
  name: MetadataReader
  nameWithType: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
- uid: System.Reflection.Metadata.TypeDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeDefinitionHandle
  nameWithType: TypeDefinitionHandle
  fullName: System.Reflection.Metadata.TypeDefinitionHandle
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
  fullName: ISimpleTypeProvider<TType>.GetTypeFromReference(MetadataReader, TypeReferenceHandle, Byte)
- uid: System.Reflection.Metadata.TypeReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  name: TypeReferenceHandle
  nameWithType: TypeReferenceHandle
  fullName: System.Reflection.Metadata.TypeReferenceHandle
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType*
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetPrimitiveType
  nameWithType: ISimpleTypeProvider<TType>.GetPrimitiveType
  fullName: ISimpleTypeProvider<TType>.GetPrimitiveType
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition*
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetTypeFromDefinition
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromDefinition
  fullName: ISimpleTypeProvider<TType>.GetTypeFromDefinition
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
- uid: System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference*
  parent: System.Reflection.Metadata.ISimpleTypeProvider`1
  isExternal: false
  name: GetTypeFromReference
  nameWithType: ISimpleTypeProvider<TType>.GetTypeFromReference
  fullName: ISimpleTypeProvider<TType>.GetTypeFromReference
  monikers:
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata/ISimpleTypeProvider`1.xml
