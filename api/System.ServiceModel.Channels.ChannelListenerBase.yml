### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelListenerBase
  commentId: T:System.ServiceModel.Channels.ChannelListenerBase
  id: ChannelListenerBase
  children:
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelListenerBase.Uri
  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase
  fullName: System.ServiceModel.Channels.ChannelListenerBase
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Provides a common base implementation for channel listeners on the service.
  remarks: The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.
  syntax:
    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Channels.ChannelManagerBase
  derivedClasses:
  - System.ServiceModel.Channels.ChannelListenerBase`1
  implements:
  - System.ServiceModel.Channels.IChannelListener
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnAbort
  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: ChannelListenerBase.ChannelListenerBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ChannelListenerBase"></xref> class.
  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.
  syntax:
    content: protected ChannelListenerBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.ChannelListenerBase"></xref> class with specified default communication timeouts.
  remarks: Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.
  syntax:
    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: The <xref href="System.ServiceModel.IDefaultCommunicationTimeouts"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  fullName: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the wait for a channel operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous wait for a channel operation.
  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The channel listener has not been opened and so cannot be used.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: ChannelListenerBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the default interval of time provided for a close operation to complete.
  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default <xref href="System.TimeSpan"></xref> that specifies how long the close operation has to complete before timing out.
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: ChannelListenerBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the default interval of time provided for an open operation to complete.
  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default <xref href="System.TimeSpan"></xref> that specifies how long the open operation has to complete before timing out.
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: ChannelListenerBase.DefaultReceiveTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the default interval of time provided for a receive operation to complete.
  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.
  syntax:
    content: protected override TimeSpan DefaultReceiveTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default <xref href="System.TimeSpan"></xref> that specifies how long the receive operation has to complete before timing out.
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: ChannelListenerBase.DefaultSendTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the default interval of time provided for a send operation to complete.
  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.
  syntax:
    content: protected override TimeSpan DefaultSendTimeout { get; }
    return:
      type: System.TimeSpan
      description: The default <xref href="System.TimeSpan"></xref> that specifies how long the send operation has to complete before timing out.
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)"></xref> method.
    return:
      type: System.Boolean
      description: '`true` if a message arrived; otherwise `false`.'
  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: GetProperty<T>()
  nameWithType: ChannelListenerBase.GetProperty<T>()
  fullName: ChannelListenerBase.GetProperty<T>()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a typed object requested, if present, from the appropriate layer in the channel stack.
  remarks: Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack. If a layer supports returning the requested object, it returns it. If not, it simply delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.
  syntax:
    content: 'public virtual T GetProperty<T> () where T : class;'
    parameters: []
    typeParameters:
    - id: T
      description: The typed object for which the method is querying.
    return:
      type: T
      description: The typed object T requested if it is present or `null` if it is not.
  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  fullName: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.
  syntax:
    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on begin wait operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous operation on begin wait completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous on begin wait operation.
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  id: OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.
  syntax:
    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)"></xref> method.
    return:
      type: System.Boolean
      description: '`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  id: OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.
  syntax:
    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the on wait for a channel operation has to complete before timing out.
    return:
      type: System.Boolean
      description: '`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.Uri
  id: Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: ChannelListenerBase.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.
  syntax:
    content: public abstract Uri Uri { get; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> on which the channel listener listens for incoming channels.
  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: ChannelListenerBase.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When implemented in a derived class, waits for a channel to arrive.
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the wait for a channel operation has to complete before timing out.
    return:
      type: System.Boolean
      description: '`true` if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'
  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
references:
- uid: System.ServiceModel.Channels.ChannelManagerBase
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelManagerBase
  nameWithType: ChannelManagerBase
  fullName: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: ChannelListenerBase.ChannelListenerBase()
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  fullName: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>()
  nameWithType: ChannelListenerBase.GetProperty<T>()
  fullName: ChannelListenerBase.GetProperty<T>()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
  fullName: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: ChannelListenerBase.OnWaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: ChannelListenerBase.Uri
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: ChannelListenerBase.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase.ChannelListenerBase
  fullName: ChannelListenerBase.ChannelListenerBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: ChannelListenerBase.BeginWaitForChannel
  fullName: ChannelListenerBase.BeginWaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: ChannelListenerBase.DefaultCloseTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: ChannelListenerBase.DefaultOpenTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: ChannelListenerBase.DefaultReceiveTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: ChannelListenerBase.DefaultSendTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel
  nameWithType: ChannelListenerBase.EndWaitForChannel
  fullName: ChannelListenerBase.EndWaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>
  nameWithType: ChannelListenerBase.GetProperty<T>
  fullName: ChannelListenerBase.GetProperty<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel
  fullName: ChannelListenerBase.OnBeginWaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel
  nameWithType: ChannelListenerBase.OnEndWaitForChannel
  fullName: ChannelListenerBase.OnEndWaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel
  nameWithType: ChannelListenerBase.OnWaitForChannel
  fullName: ChannelListenerBase.OnWaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: ChannelListenerBase.Uri
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel
  nameWithType: ChannelListenerBase.WaitForChannel
  fullName: ChannelListenerBase.WaitForChannel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
