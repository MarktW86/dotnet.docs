### YamlMime:ManagedReference
items:
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator
  commentId: T:System.Reflection.Metadata.Ecma335.MetadataAggregator
  id: MetadataAggregator
  children:
  - System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  - System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  - System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)
  langs:
  - csharp
  name: MetadataAggregator
  nameWithType: MetadataAggregator
  fullName: System.Reflection.Metadata.Ecma335.MetadataAggregator
  type: Class
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public sealed class MetadataAggregator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  id: '#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})'
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  langs:
  - csharp
  name: MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
  nameWithType: MetadataAggregator.MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
  fullName: MetadataAggregator.MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public MetadataAggregator (System.Reflection.Metadata.MetadataReader baseReader, System.Collections.Generic.IReadOnlyList<System.Reflection.Metadata.MetadataReader> deltaReaders);
    parameters:
    - id: baseReader
      type: System.Reflection.Metadata.MetadataReader
      description: To be added.
    - id: deltaReaders
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  id: '#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})'
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  langs:
  - csharp
  name: MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
  nameWithType: MetadataAggregator.MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
  fullName: MetadataAggregator.MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
  type: Constructor
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public MetadataAggregator (System.Collections.Generic.IReadOnlyList<int> baseTableRowCounts, System.Collections.Generic.IReadOnlyList<int> baseHeapSizes, System.Collections.Generic.IReadOnlyList<System.Reflection.Metadata.MetadataReader> deltaReaders);
    parameters:
    - id: baseTableRowCounts
      type: System.Collections.Generic.IReadOnlyList{System.Int32}
      description: To be added.
    - id: baseHeapSizes
      type: System.Collections.Generic.IReadOnlyList{System.Int32}
      description: To be added.
    - id: deltaReaders
      type: System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader}
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)
  commentId: M:System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)
  id: GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  langs:
  - csharp
  name: GetGenerationHandle(Handle, Int32)
  nameWithType: MetadataAggregator.GetGenerationHandle(Handle, Int32)
  fullName: MetadataAggregator.GetGenerationHandle(Handle, Int32)
  type: Method
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  syntax:
    content: public System.Reflection.Metadata.Handle GetGenerationHandle (System.Reflection.Metadata.Handle handle, out int generation);
    parameters:
    - id: handle
      type: System.Reflection.Metadata.Handle
      description: To be added.
    - id: generation
      type: System.Int32
      description: To be added.
    return:
      type: System.Reflection.Metadata.Handle
      description: To be added.
  overload: System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  isExternal: false
  name: MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
  nameWithType: MetadataAggregator.MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
  fullName: MetadataAggregator.MetadataAggregator(MetadataReader, IReadOnlyList<MetadataReader>)
- uid: System.Reflection.Metadata.MetadataReader
  parent: System.Reflection.Metadata
  isExternal: false
  name: MetadataReader
  nameWithType: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
- uid: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
- uid: System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader}
  parent: System.Collections.Generic
  isExternal: false
  name: IReadOnlyList<MetadataReader>
  nameWithType: IReadOnlyList<MetadataReader>
  fullName: System.Collections.Generic.IReadOnlyList<System.Reflection.Metadata.MetadataReader>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Metadata.MetadataReader
    name: MetadataReader
    nameWithType: MetadataReader
    fullName: System.Reflection.Metadata.MetadataReader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  isExternal: false
  name: MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
  nameWithType: MetadataAggregator.MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
  fullName: MetadataAggregator.MetadataAggregator(IReadOnlyList<Int32>, IReadOnlyList<Int32>, IReadOnlyList<MetadataReader>)
- uid: System.Int32
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IReadOnlyList{System.Int32}
  parent: System.Collections.Generic
  isExternal: false
  name: IReadOnlyList<Int32>
  nameWithType: IReadOnlyList<Int32>
  fullName: System.Collections.Generic.IReadOnlyList<System.Int32>
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  isExternal: false
  name: GetGenerationHandle(Handle, Int32)
  nameWithType: MetadataAggregator.GetGenerationHandle(Handle, Int32)
  fullName: MetadataAggregator.GetGenerationHandle(Handle, Int32)
- uid: System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata
  isExternal: false
  name: Handle
  nameWithType: Handle
  fullName: System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor*
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  isExternal: false
  name: MetadataAggregator
  nameWithType: MetadataAggregator.MetadataAggregator
  fullName: MetadataAggregator.MetadataAggregator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
- uid: System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle*
  parent: System.Reflection.Metadata.Ecma335.MetadataAggregator
  isExternal: false
  name: GetGenerationHandle
  nameWithType: MetadataAggregator.GetGenerationHandle
  fullName: MetadataAggregator.GetGenerationHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Metadata.Ecma335/MetadataAggregator.xml
