### YamlMime:ManagedReference
items:
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  id: IEquatable`1
  children:
  - System.IEquatable`1.Equals(`0)
  langs:
  - csharp
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  type: Interface
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.
  remarks: "This interface is implemented by types whose values can be equated (for example, the numeric and string classes). A value type or class implements the <xref:System.IEquatable%601.Equals%2A> method to create a type-specific method suitable for determining equality of instances.  \n  \n> [!NOTE]\n>  The <xref:System.IComparable%601> interface defines the <xref:System.IComparable%601.CompareTo%2A> method, which determines the sort order of instances of the implementing type. The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.  \n  \n The <xref:System.IEquatable%601> interface is used by generic collection objects such as <xref:System.Collections.Generic.Dictionary%602>, <xref:System.Collections.Generic.List%601>, and <xref:System.Collections.Generic.LinkedList%601> when testing for equality in such methods as `Contains`, `IndexOf`, `LastIndexOf`, and `Remove`. It should be implemented for any object that might be stored in a generic collection."
  example:
  - See the example for the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method.
  syntax:
    content: public interface IEquatable<T>
    typeParameters:
    - id: T
      description: The type of objects to compare.
  implements: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IEquatable`1.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  id: Equals(`0)
  parent: System.IEquatable`1
  langs:
  - csharp
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  type: Method
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Indicates whether the current object is equal to another object of the same type.
  remarks: "The implementation of the <xref:System.IEquatable%601.Equals%2A> method is intended to perform a test for equality with another object of type `T`, the same type as the current object. The <xref:System.IEquatable%601.Equals%2A> method is called in the following circumstances:  \n  \n-   When the `Equals` method is called and the `other` parameter represents a strongly-typed object of type `T`. (If `other` is of type <xref:System.Object>, the base <xref:System.Object.Equals%28System.Object%29?displayProperty=fullName> method is called. Of the two methods, <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> offers slightly better performance.)  \n  \n-   When the search methods of a number of generic collection objects are called. Some of these types and their methods include the following:  \n  \n    -   Some of the generic overloads of the <xref:System.Array.BinarySearch%2A> method.  \n  \n    -   The search methods of the <xref:System.Collections.Generic.List%601> class, including <xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=fullName>, <xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=fullName>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=fullName>, and <xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=fullName>.  \n  \n    -   The search methods of the <xref:System.Collections.Generic.Dictionary%602> class, including <xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A> and <xref:System.Collections.Generic.IDictionary%602.Remove%2A>.  \n  \n    -   The search methods of the generic <xref:System.Collections.Generic.LinkedList%601> class, including <xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=fullName> and <xref:System.Collections.Generic.LinkedList%601.Remove%2A>.  \n  \n In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <xref:System.IEquatable%601> so that the object can be easily identified and manipulated.  \n  \n When implementing the <xref:System.IEquatable%601.Equals%2A> method, define equality appropriately for the type specified by the generic type argument. For example, if the type argument is <xref:System.Int32>, define equality appropriately for the comparison of two 32-bit signed integers."
  example:
  - "The following example shows the partial implementation of a `Person` class that implements <xref:System.IEquatable%601> and has two properties, `LastName` and `SSN`. The <xref:System.IEquatable%601.Equals%2A> method returns `True` if the `SSN` property of two `Person` objects is identical; otherwise, it returns `False`.  \n  \n [!code-csharp[System.GenericIEquatable.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/EqualsEx2.cs#3)]\n [!code-vb[System.GenericIEquatable.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/EqualsEx2.vb#3)]  \n  \n `Person` objects can then be stored in a <xref:System.Collections.Generic.List%601> object and can be identified by the `Contains` method, as the following example shows.  \n  \n [!code-csharp[System.GenericIEquatable.Equals#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/cs/Snippet12.cs#12)]\n [!code-vb[System.GenericIEquatable.Equals#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.GenericIEquatable.Equals/vb/Snippet12.vb#12)]"
  syntax:
    content: public bool Equals (T other);
    parameters:
    - id: other
      type: T
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: '`true` if the current object is equal to the <code>other</code> parameter; otherwise, `false`.'
  overload: System.IEquatable`1.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IEquatable`1.xml
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.IEquatable`1.Equals(`0)
  parent: System.IEquatable`1
  isExternal: false
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IEquatable`1.Equals*
  parent: System.IEquatable`1
  isExternal: false
  name: Equals
  nameWithType: IEquatable<T>.Equals
  fullName: System.IEquatable<T>.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/IEquatable`1.xml
