### YamlMime:ManagedReference
items:
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators
  commentId: T:Microsoft.FSharp.Core.ExtraTopLevelOperators
  id: ExtraTopLevelOperators
  children:
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.query
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)
  - Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)
  langs:
  - csharp
  name: ExtraTopLevelOperators
  nameWithType: ExtraTopLevelOperators
  fullName: Microsoft.FSharp.Core.ExtraTopLevelOperators
  type: Class
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.AutoOpen]

      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)]

      public static class ExtraTopLevelOperators
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.FSharp.Core.AutoOpenAttribute
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})
  id: CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: CreateArray2D<?,T>()
  nameWithType: ExtraTopLevelOperators.CreateArray2D<?,T>()
  fullName: ExtraTopLevelOperators.CreateArray2D<?,T>()
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("array2D")]

      public static T[,] CreateArray2D<?,T> (System.Collections.Generic.IEnumerable<?> rows) where ? : System.Collections.Generic.IEnumerable<T>;
    parameters:
    - id: rows
      description: To be added.
    typeParameters:
    - id: '?'
      description: To be added.
    - id: T
      description: To be added.
    return:
      type: T[,]
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})
  id: CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
  nameWithType: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
  fullName: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("dict")]

      public static System.Collections.Generic.IDictionary<TKey,TValue> CreateDictionary<TKey,TValue> (System.Collections.Generic.IEnumerable<Tuple<TKey,TValue>> keyValuePairs);
    parameters:
    - id: keyValuePairs
      type: System.Collections.Generic.IEnumerable{System.Tuple{TKey,TValue}}
      description: To be added.
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
    return:
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: CreateSet<T>(IEnumerable<T>)
  nameWithType: ExtraTopLevelOperators.CreateSet<T>(IEnumerable<T>)
  fullName: ExtraTopLevelOperators.CreateSet<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("set")]

      public static Microsoft.FSharp.Collections.FSharpSet<T> CreateSet<T> (System.Collections.Generic.IEnumerable<T> elements);
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: Microsoft.FSharp.Collections.FSharpSet`1
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder
  commentId: P:Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder
  id: DefaultAsyncBuilder
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: DefaultAsyncBuilder
  nameWithType: ExtraTopLevelOperators.DefaultAsyncBuilder
  fullName: ExtraTopLevelOperators.DefaultAsyncBuilder
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Value)]

      [Microsoft.FSharp.Core.CompiledName("DefaultAsyncBuilder")]

      public static Microsoft.FSharp.Control.FSharpAsyncBuilder DefaultAsyncBuilder { get; }
    return:
      type: Microsoft.FSharp.Control.FSharpAsyncBuilder
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  - type: Microsoft.FSharp.Core.CompiledNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})
  id: LazyPattern``1(System.Lazy{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: LazyPattern<T>(Lazy<T>)
  nameWithType: ExtraTopLevelOperators.LazyPattern<T>(Lazy<T>)
  fullName: ExtraTopLevelOperators.LazyPattern<T>(Lazy<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("|Lazy|")]

      public static T LazyPattern<T> (Lazy<T> input);
    parameters:
    - id: input
      type: System.Lazy`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("printf")]

      public static T PrintFormat<T> (Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("printfn")]

      public static T PrintFormatLine<T> (Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("eprintfn")]

      public static T PrintFormatLineToError<T> (Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("fprintfn")]

      public static T PrintFormatLineToTextWriter<T> (System.IO.TextWriter textWriter, Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: To be added.
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("eprintf")]

      public static T PrintFormatToError<T> (Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})
  id: PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
  fullName: ExtraTopLevelOperators.PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("sprintf")]

      public static T PrintFormatToString<T> (Microsoft.FSharp.Core.PrintfFormat<T,Microsoft.FSharp.Core.Unit,string,string> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,Microsoft.FSharp.Core.Unit,System.String,System.String}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})
  id: PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
  fullName: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("failwithf")]

      public static T PrintFormatToStringThenFail<T,TResult> (Microsoft.FSharp.Core.PrintfFormat<T,Microsoft.FSharp.Core.Unit,string,TResult> format);
    parameters:
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,Microsoft.FSharp.Core.Unit,System.String,TResult}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    - id: TResult
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  id: PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])]

      [Microsoft.FSharp.Core.CompilationSourceName("fprintf")]

      public static T PrintFormatToTextWriter<T> (System.IO.TextWriter textWriter, Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit> format);
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: To be added.
    - id: format
      type: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationArgumentCountsAttribute
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.query
  commentId: P:Microsoft.FSharp.Core.ExtraTopLevelOperators.query
  id: query
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: query
  nameWithType: ExtraTopLevelOperators.query
  fullName: ExtraTopLevelOperators.query
  type: Property
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Value)]

      public static Microsoft.FSharp.Linq.QueryBuilder query { get; }
    return:
      type: Microsoft.FSharp.Linq.QueryBuilder
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.query*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationMappingAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})
  id: SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: SpliceExpression<T>(FSharpExpr<T>)
  nameWithType: ExtraTopLevelOperators.SpliceExpression<T>(FSharpExpr<T>)
  fullName: ExtraTopLevelOperators.SpliceExpression<T>(FSharpExpr<T>)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("op_Splice")]

      public static T SpliceExpression<T> (Microsoft.FSharp.Quotations.FSharpExpr<T> expression);
    parameters:
    - id: expression
      type: Microsoft.FSharp.Quotations.FSharpExpr`1
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)
  id: SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: SpliceUntypedExpression<T>(FSharpExpr)
  nameWithType: ExtraTopLevelOperators.SpliceUntypedExpression<T>(FSharpExpr)
  fullName: ExtraTopLevelOperators.SpliceUntypedExpression<T>(FSharpExpr)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("op_SpliceUntyped")]

      public static T SpliceUntypedExpression<T> (Microsoft.FSharp.Quotations.FSharpExpr expression);
    parameters:
    - id: expression
      type: Microsoft.FSharp.Quotations.FSharpExpr
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)
  id: ToByte``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: ToByte<T>(T)
  nameWithType: ExtraTopLevelOperators.ToByte<T>(T)
  fullName: ExtraTopLevelOperators.ToByte<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("uint8")]

      public static byte ToByte<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Byte
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)
  id: ToDouble``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: ToDouble<T>(T)
  nameWithType: ExtraTopLevelOperators.ToDouble<T>(T)
  fullName: ExtraTopLevelOperators.ToDouble<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("double")]

      public static double ToDouble<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Double
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)
  id: ToSByte``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: ToSByte<T>(T)
  nameWithType: ExtraTopLevelOperators.ToSByte<T>(T)
  fullName: ExtraTopLevelOperators.ToSByte<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("int8")]

      public static sbyte ToSByte<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.SByte
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)
  commentId: M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)
  id: ToSingle``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  langs:
  - csharp
  name: ToSingle<T>(T)
  nameWithType: ExtraTopLevelOperators.ToSingle<T>(T)
  fullName: ExtraTopLevelOperators.ToSingle<T>(T)
  type: Method
  assemblies:
  - FSharp.Core
  namespace: Microsoft.FSharp.Core
  syntax:
    content: >-
      [Microsoft.FSharp.Core.CompilationSourceName("single")]

      public static float ToSingle<T> (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    typeParameters:
    - id: T
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1*
  exceptions: []
  attributes:
  - type: Microsoft.FSharp.Core.CompilationSourceNameAttribute
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateArray2D<?,T>()
  nameWithType: ExtraTopLevelOperators.CreateArray2D<?,T>()
  fullName: ExtraTopLevelOperators.CreateArray2D<?,T>()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[,]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
  nameWithType: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
  fullName: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>(IEnumerable<Tuple<TKey,TValue>>)
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Tuple`2
  name: Tuple<T1,T2>
  nameWithType: Tuple<T1,T2>
  fullName: System.Tuple<T1,T2>
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.IEnumerable{System.Tuple{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Tuple<TKey,TValue>>
  nameWithType: IEnumerable<Tuple<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<TKey,TValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateSet<T>(IEnumerable<T>)
  nameWithType: ExtraTopLevelOperators.CreateSet<T>(IEnumerable<T>)
  fullName: ExtraTopLevelOperators.CreateSet<T>(IEnumerable<T>)
- uid: Microsoft.FSharp.Collections.FSharpSet`1
  parent: Microsoft.FSharp.Collections
  isExternal: false
  name: FSharpSet<T>
  nameWithType: FSharpSet<T>
  fullName: Microsoft.FSharp.Collections.FSharpSet<T>
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: DefaultAsyncBuilder
  nameWithType: ExtraTopLevelOperators.DefaultAsyncBuilder
  fullName: ExtraTopLevelOperators.DefaultAsyncBuilder
- uid: Microsoft.FSharp.Control.FSharpAsyncBuilder
  parent: Microsoft.FSharp.Control
  isExternal: false
  name: FSharpAsyncBuilder
  nameWithType: FSharpAsyncBuilder
  fullName: Microsoft.FSharp.Control.FSharpAsyncBuilder
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: LazyPattern<T>(Lazy<T>)
  nameWithType: ExtraTopLevelOperators.LazyPattern<T>(Lazy<T>)
  fullName: ExtraTopLevelOperators.LazyPattern<T>(Lazy<T>)
- uid: System.Lazy`1
  parent: System
  isExternal: false
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormat<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.PrintfFormat`4
  name: PrintfFormat<TPrinter,TState,TResidue,TResult>
  nameWithType: PrintfFormat<TPrinter,TState,TResidue,TResult>
  fullName: Microsoft.FSharp.Core.PrintfFormat<TPrinter,TState,TResidue,TResult>
- uid: System.IO.TextWriter
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: Microsoft.FSharp.Core.Unit
  name: Unit
  nameWithType: Unit
  fullName: Microsoft.FSharp.Core.Unit
- uid: Microsoft.FSharp.Core.PrintfFormat{T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: PrintfFormat<T,TextWriter,Unit,Unit>
  nameWithType: PrintfFormat<T,TextWriter,Unit,Unit>
  fullName: Microsoft.FSharp.Core.PrintfFormat<T,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.PrintfFormat`4
    name: PrintfFormat
    nameWithType: PrintfFormat
    fullName: Microsoft.FSharp.Core.PrintfFormat
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLine<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLineToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatToError<T>(PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
  fullName: ExtraTopLevelOperators.PrintFormatToString<T>(PrintfFormat<T,Unit,String,String>)
- uid: System.String
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.FSharp.Core.PrintfFormat{T,Microsoft.FSharp.Core.Unit,System.String,System.String}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: PrintfFormat<T,Unit,String,String>
  nameWithType: PrintfFormat<T,Unit,String,String>
  fullName: Microsoft.FSharp.Core.PrintfFormat<T,Microsoft.FSharp.Core.Unit,System.String,System.String>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.PrintfFormat`4
    name: PrintfFormat
    nameWithType: PrintfFormat
    fullName: Microsoft.FSharp.Core.PrintfFormat
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
  fullName: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>(PrintfFormat<T,Unit,String,TResult>)
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Microsoft.FSharp.Core.PrintfFormat{T,Microsoft.FSharp.Core.Unit,System.String,TResult}
  parent: Microsoft.FSharp.Core
  isExternal: false
  name: PrintfFormat<T,Unit,String,TResult>
  nameWithType: PrintfFormat<T,Unit,String,TResult>
  fullName: Microsoft.FSharp.Core.PrintfFormat<T,Microsoft.FSharp.Core.Unit,System.String,TResult>
  spec.csharp:
  - uid: Microsoft.FSharp.Core.PrintfFormat`4
    name: PrintfFormat
    nameWithType: PrintfFormat
    fullName: Microsoft.FSharp.Core.PrintfFormat
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.FSharp.Core.Unit
    name: Unit
    nameWithType: Unit
    fullName: Microsoft.FSharp.Core.Unit
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  nameWithType: ExtraTopLevelOperators.PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
  fullName: ExtraTopLevelOperators.PrintFormatToTextWriter<T>(TextWriter, PrintfFormat<T,TextWriter,Unit,Unit>)
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.query
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: query
  nameWithType: ExtraTopLevelOperators.query
  fullName: ExtraTopLevelOperators.query
- uid: Microsoft.FSharp.Linq.QueryBuilder
  parent: Microsoft.FSharp.Linq
  isExternal: false
  name: QueryBuilder
  nameWithType: QueryBuilder
  fullName: Microsoft.FSharp.Linq.QueryBuilder
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: SpliceExpression<T>(FSharpExpr<T>)
  nameWithType: ExtraTopLevelOperators.SpliceExpression<T>(FSharpExpr<T>)
  fullName: ExtraTopLevelOperators.SpliceExpression<T>(FSharpExpr<T>)
- uid: Microsoft.FSharp.Quotations.FSharpExpr`1
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr<T>
  nameWithType: FSharpExpr<T>
  fullName: Microsoft.FSharp.Quotations.FSharpExpr<T>
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: SpliceUntypedExpression<T>(FSharpExpr)
  nameWithType: ExtraTopLevelOperators.SpliceUntypedExpression<T>(FSharpExpr)
  fullName: ExtraTopLevelOperators.SpliceUntypedExpression<T>(FSharpExpr)
- uid: Microsoft.FSharp.Quotations.FSharpExpr
  parent: Microsoft.FSharp.Quotations
  isExternal: false
  name: FSharpExpr
  nameWithType: FSharpExpr
  fullName: Microsoft.FSharp.Quotations.FSharpExpr
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToByte<T>(T)
  nameWithType: ExtraTopLevelOperators.ToByte<T>(T)
  fullName: ExtraTopLevelOperators.ToByte<T>(T)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToDouble<T>(T)
  nameWithType: ExtraTopLevelOperators.ToDouble<T>(T)
  fullName: ExtraTopLevelOperators.ToDouble<T>(T)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToSByte<T>(T)
  nameWithType: ExtraTopLevelOperators.ToSByte<T>(T)
  fullName: ExtraTopLevelOperators.ToSByte<T>(T)
- uid: System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToSingle<T>(T)
  nameWithType: ExtraTopLevelOperators.ToSingle<T>(T)
  fullName: ExtraTopLevelOperators.ToSingle<T>(T)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateArray2D<?,T>
  nameWithType: ExtraTopLevelOperators.CreateArray2D<?,T>
  fullName: ExtraTopLevelOperators.CreateArray2D<?,T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateDictionary<TKey,TValue>
  nameWithType: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>
  fullName: ExtraTopLevelOperators.CreateDictionary<TKey,TValue>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: CreateSet<T>
  nameWithType: ExtraTopLevelOperators.CreateSet<T>
  fullName: ExtraTopLevelOperators.CreateSet<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: DefaultAsyncBuilder
  nameWithType: ExtraTopLevelOperators.DefaultAsyncBuilder
  fullName: ExtraTopLevelOperators.DefaultAsyncBuilder
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: LazyPattern<T>
  nameWithType: ExtraTopLevelOperators.LazyPattern<T>
  fullName: ExtraTopLevelOperators.LazyPattern<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormat<T>
  nameWithType: ExtraTopLevelOperators.PrintFormat<T>
  fullName: ExtraTopLevelOperators.PrintFormat<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLine<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatLine<T>
  fullName: ExtraTopLevelOperators.PrintFormatLine<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLineToError<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToError<T>
  fullName: ExtraTopLevelOperators.PrintFormatLineToError<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatLineToTextWriter<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>
  fullName: ExtraTopLevelOperators.PrintFormatLineToTextWriter<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToError<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatToError<T>
  fullName: ExtraTopLevelOperators.PrintFormatToError<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToString<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatToString<T>
  fullName: ExtraTopLevelOperators.PrintFormatToString<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToStringThenFail<T,TResult>
  nameWithType: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>
  fullName: ExtraTopLevelOperators.PrintFormatToStringThenFail<T,TResult>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: PrintFormatToTextWriter<T>
  nameWithType: ExtraTopLevelOperators.PrintFormatToTextWriter<T>
  fullName: ExtraTopLevelOperators.PrintFormatToTextWriter<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.query*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: query
  nameWithType: ExtraTopLevelOperators.query
  fullName: ExtraTopLevelOperators.query
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: SpliceExpression<T>
  nameWithType: ExtraTopLevelOperators.SpliceExpression<T>
  fullName: ExtraTopLevelOperators.SpliceExpression<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: SpliceUntypedExpression<T>
  nameWithType: ExtraTopLevelOperators.SpliceUntypedExpression<T>
  fullName: ExtraTopLevelOperators.SpliceUntypedExpression<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToByte<T>
  nameWithType: ExtraTopLevelOperators.ToByte<T>
  fullName: ExtraTopLevelOperators.ToByte<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToDouble<T>
  nameWithType: ExtraTopLevelOperators.ToDouble<T>
  fullName: ExtraTopLevelOperators.ToDouble<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToSByte<T>
  nameWithType: ExtraTopLevelOperators.ToSByte<T>
  fullName: ExtraTopLevelOperators.ToSByte<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
- uid: Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1*
  parent: Microsoft.FSharp.Core.ExtraTopLevelOperators
  isExternal: false
  name: ToSingle<T>
  nameWithType: ExtraTopLevelOperators.ToSingle<T>
  fullName: ExtraTopLevelOperators.ToSingle<T>
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.FSharp.Core/ExtraTopLevelOperators.xml
