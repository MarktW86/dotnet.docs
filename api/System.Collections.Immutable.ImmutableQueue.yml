### YamlMime:ManagedReference
items:
- uid: System.Collections.Immutable.ImmutableQueue
  commentId: T:System.Collections.Immutable.ImmutableQueue
  id: ImmutableQueue
  children:
  - System.Collections.Immutable.ImmutableQueue.Create``1
  - System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  - System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  - System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  langs:
  - csharp
  name: ImmutableQueue
  nameWithType: ImmutableQueue
  fullName: System.Collections.Immutable.ImmutableQueue
  type: Class
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static class ImmutableQueue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.Create``1
  commentId: M:System.Collections.Immutable.ImmutableQueue.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableQueue
  langs:
  - csharp
  name: Create<T>()
  nameWithType: ImmutableQueue.Create<T>()
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>()
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableQueue<T> Create<T> ();
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableQueue`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableQueue.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  commentId: M:System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableQueue
  langs:
  - csharp
  name: Create<T>(T)
  nameWithType: ImmutableQueue.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableQueue<T> Create<T> (T item);
    parameters:
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableQueue`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableQueue.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  commentId: M:System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableQueue
  langs:
  - csharp
  name: Create<T>(T[])
  nameWithType: ImmutableQueue.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(T[])
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableQueue<T> Create<T> (T[] items);
    parameters:
    - id: items
      type: T[]
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableQueue`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableQueue.Create``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableQueue
  langs:
  - csharp
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableQueue.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableQueue.CreateRange<T>(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.ImmutableQueue<T> CreateRange<T> (System.Collections.Generic.IEnumerable<T> items);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Immutable.ImmutableQueue`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableQueue.CreateRange``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  commentId: M:System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  id: Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  parent: System.Collections.Immutable.ImmutableQueue
  langs:
  - csharp
  name: Dequeue<T>(IImmutableQueue<T>, T)
  nameWithType: ImmutableQueue.Dequeue<T>(IImmutableQueue<T>, T)
  fullName: System.Collections.Immutable.ImmutableQueue.Dequeue<T>(IImmutableQueue<T>, T)
  type: Method
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: public static System.Collections.Immutable.IImmutableQueue<T> Dequeue<T> (this System.Collections.Immutable.IImmutableQueue<T> queue, out T value);
    parameters:
    - id: queue
      type: System.Collections.Immutable.IImmutableQueue`1
      description: To be added.
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Collections.Immutable.IImmutableQueue`1
      description: To be added.
  overload: System.Collections.Immutable.ImmutableQueue.Dequeue``1*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1.0
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Immutable.ImmutableQueue.Create``1
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Create<T>()
  nameWithType: ImmutableQueue.Create<T>()
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>()
- uid: System.Collections.Immutable.ImmutableQueue`1
  parent: System.Collections.Immutable
  isExternal: false
  name: ImmutableQueue<T>
  nameWithType: ImmutableQueue<T>
  fullName: System.Collections.Immutable.ImmutableQueue<T>
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0)
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Create<T>(T)
  nameWithType: ImmutableQueue.Create<T>(T)
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Immutable.ImmutableQueue.Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Create<T>(T[])
  nameWithType: ImmutableQueue.Create<T>(T[])
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>(T[])
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Immutable.ImmutableQueue.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: CreateRange<T>(IEnumerable<T>)
  nameWithType: ImmutableQueue.CreateRange<T>(IEnumerable<T>)
  fullName: System.Collections.Immutable.ImmutableQueue.CreateRange<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Immutable.ImmutableQueue.Dequeue``1(System.Collections.Immutable.IImmutableQueue{``0},``0@)
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Dequeue<T>(IImmutableQueue<T>, T)
  nameWithType: ImmutableQueue.Dequeue<T>(IImmutableQueue<T>, T)
  fullName: System.Collections.Immutable.ImmutableQueue.Dequeue<T>(IImmutableQueue<T>, T)
- uid: System.Collections.Immutable.IImmutableQueue`1
  parent: System.Collections.Immutable
  isExternal: false
  name: IImmutableQueue<T>
  nameWithType: IImmutableQueue<T>
  fullName: System.Collections.Immutable.IImmutableQueue<T>
- uid: System.Collections.Immutable.ImmutableQueue.Create``1*
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Create<T>
  nameWithType: ImmutableQueue.Create<T>
  fullName: System.Collections.Immutable.ImmutableQueue.Create<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.CreateRange``1*
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: CreateRange<T>
  nameWithType: ImmutableQueue.CreateRange<T>
  fullName: System.Collections.Immutable.ImmutableQueue.CreateRange<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
- uid: System.Collections.Immutable.ImmutableQueue.Dequeue``1*
  parent: System.Collections.Immutable.ImmutableQueue
  isExternal: false
  name: Dequeue<T>
  nameWithType: ImmutableQueue.Dequeue<T>
  fullName: System.Collections.Immutable.ImmutableQueue.Dequeue<T>
  monikers:
  - netcore-1.0
  - netcore-1.1.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Collections.Immutable/ImmutableQueue.xml
