### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsContext
  commentId: T:System.Configuration.SettingsContext
  id: SettingsContext
  children:
  - System.Configuration.SettingsContext.#ctor
  langs:
  - csharp
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
  type: Class
  assemblies:
  - System
  namespace: System.Configuration
  summary: Provides contextual information that the provider can use when persisting settings.
  remarks: "The <xref:System.Configuration.SettingsContext> class is the base class used by applications to provide contextual information to the settings provider. Although the class is not abstract, an application can choose to create a specialized class that inherits from <xref:System.Configuration.SettingsContext> class and provides additional information to specific types of providers. The provider can then examine contextual settings when writing properties.  \n  \n The primary purpose of the <xref:System.Configuration.SettingsContext> class is to provide features that use the <xref:System.Configuration.SettingsBase> class and related infrastructure. The <xref:System.Configuration.SettingsContext> class provides additional feature-specific contextual information about the property data being stored by the <xref:System.Configuration.SettingsBase> instance. Therefore, it is very simple to store additional information in a <xref:System.Configuration.SettingsContext> class without deriving from it (or from other Settings* classes) in order to support additional feature-specific context information.  \n  \n For example, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to pass along the username associated with the data managed by a <xref:System.Configuration.SettingsBase> instance, as well as a property indicating whether the user is considered authenticated. In this way, ASP.NET uses the <xref:System.Configuration.SettingsContext> class to identify authenticated versus anonymous Profile data."
  syntax:
    content: 'public class SettingsContext : System.Collections.Hashtable'
  inheritance:
  - System.Object
  - System.Collections.Hashtable
  implements: []
  inheritedMembers:
  - System.Collections.Hashtable.Add(System.Object,System.Object)
  - System.Collections.Hashtable.Clear
  - System.Collections.Hashtable.Clone
  - System.Collections.Hashtable.comparer
  - System.Collections.Hashtable.Contains(System.Object)
  - System.Collections.Hashtable.ContainsKey(System.Object)
  - System.Collections.Hashtable.ContainsValue(System.Object)
  - System.Collections.Hashtable.CopyTo(System.Array,System.Int32)
  - System.Collections.Hashtable.Count
  - System.Collections.Hashtable.EqualityComparer
  - System.Collections.Hashtable.GetEnumerator
  - System.Collections.Hashtable.GetHash(System.Object)
  - System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Hashtable.hcp
  - System.Collections.Hashtable.IsFixedSize
  - System.Collections.Hashtable.IsReadOnly
  - System.Collections.Hashtable.IsSynchronized
  - System.Collections.Hashtable.Item(System.Object)
  - System.Collections.Hashtable.KeyEquals(System.Object,System.Object)
  - System.Collections.Hashtable.Keys
  - System.Collections.Hashtable.OnDeserialization(System.Object)
  - System.Collections.Hashtable.Remove(System.Object)
  - System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)
  - System.Collections.Hashtable.SyncRoot
  - System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Hashtable.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml
  ms.author: riande
  manager: wpickett
- uid: System.Configuration.SettingsContext.#ctor
  commentId: M:System.Configuration.SettingsContext.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsContext
  langs:
  - csharp
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: Initializes a new instance of the <xref href="System.Configuration.SettingsContext"></xref> class.
  syntax:
    content: public SettingsContext ();
    parameters: []
  overload: System.Configuration.SettingsContext.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml
  ms.author: riande
  manager: wpickett
references:
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Configuration.SettingsContext.#ctor
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext()
  nameWithType: SettingsContext.SettingsContext()
  fullName: System.Configuration.SettingsContext.SettingsContext()
- uid: System.Configuration.SettingsContext.#ctor*
  parent: System.Configuration.SettingsContext
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext.SettingsContext
  fullName: System.Configuration.SettingsContext.SettingsContext
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/SettingsContext.xml
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
